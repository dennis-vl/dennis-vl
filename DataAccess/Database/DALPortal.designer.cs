#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VanLeeuwen.Projects.WebPortal.DataAccess.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Portal2")]
	public partial class DALPortalDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertapplication(application instance);
    partial void Updateapplication(application instance);
    partial void Deleteapplication(application instance);
    partial void Insertwarehouse(warehouse instance);
    partial void Updatewarehouse(warehouse instance);
    partial void Deletewarehouse(warehouse instance);
    partial void InsertapplicationAccess(applicationAccess instance);
    partial void UpdateapplicationAccess(applicationAccess instance);
    partial void DeleteapplicationAccess(applicationAccess instance);
    partial void InsertapplicationRole(applicationRole instance);
    partial void UpdateapplicationRole(applicationRole instance);
    partial void DeleteapplicationRole(applicationRole instance);
    partial void InsertApplication1(Application1 instance);
    partial void UpdateApplication1(Application1 instance);
    partial void DeleteApplication1(Application1 instance);
    partial void InsertbatchDocument(batchDocument instance);
    partial void UpdatebatchDocument(batchDocument instance);
    partial void DeletebatchDocument(batchDocument instance);
    partial void Insertcolli(colli instance);
    partial void Updatecolli(colli instance);
    partial void Deletecolli(colli instance);
    partial void InsertcolliLine(colliLine instance);
    partial void UpdatecolliLine(colliLine instance);
    partial void DeletecolliLine(colliLine instance);
    partial void InsertcolliType(colliType instance);
    partial void UpdatecolliType(colliType instance);
    partial void DeletecolliType(colliType instance);
    partial void InsertcolliUnit(colliUnit instance);
    partial void UpdatecolliUnit(colliUnit instance);
    partial void DeletecolliUnit(colliUnit instance);
    partial void Insertcompany(company instance);
    partial void Updatecompany(company instance);
    partial void Deletecompany(company instance);
    partial void InsertcompanyGroup(companyGroup instance);
    partial void UpdatecompanyGroup(companyGroup instance);
    partial void DeletecompanyGroup(companyGroup instance);
    partial void InsertcompanyGroupForBp(companyGroupForBp instance);
    partial void UpdatecompanyGroupForBp(companyGroupForBp instance);
    partial void DeletecompanyGroupForBp(companyGroupForBp instance);
    partial void InsertcompanyGroupForItem(companyGroupForItem instance);
    partial void UpdatecompanyGroupForItem(companyGroupForItem instance);
    partial void DeletecompanyGroupForItem(companyGroupForItem instance);
    partial void InsertcompanySection(companySection instance);
    partial void UpdatecompanySection(companySection instance);
    partial void DeletecompanySection(companySection instance);
    partial void InsertcontactPerson(contactPerson instance);
    partial void UpdatecontactPerson(contactPerson instance);
    partial void DeletecontactPerson(contactPerson instance);
    partial void InsertcontactPersonProject(contactPersonProject instance);
    partial void UpdatecontactPersonProject(contactPersonProject instance);
    partial void DeletecontactPersonProject(contactPersonProject instance);
    partial void Insertcountry(country instance);
    partial void Updatecountry(country instance);
    partial void Deletecountry(country instance);
    partial void Insertcurrency(currency instance);
    partial void Updatecurrency(currency instance);
    partial void Deletecurrency(currency instance);
    partial void InsertdocStatus(docStatus instance);
    partial void UpdatedocStatus(docStatus instance);
    partial void DeletedocStatus(docStatus instance);
    partial void Insertdocument(document instance);
    partial void Updatedocument(document instance);
    partial void Deletedocument(document instance);
    partial void InsertgoodsReceipt(goodsReceipt instance);
    partial void UpdategoodsReceipt(goodsReceipt instance);
    partial void DeletegoodsReceipt(goodsReceipt instance);
    partial void InsertgoodsReceiptLine(goodsReceiptLine instance);
    partial void UpdategoodsReceiptLine(goodsReceiptLine instance);
    partial void DeletegoodsReceiptLine(goodsReceiptLine instance);
    partial void Insertinspection(inspection instance);
    partial void Updateinspection(inspection instance);
    partial void Deleteinspection(inspection instance);
    partial void InsertinspectionLine(inspectionLine instance);
    partial void UpdateinspectionLine(inspectionLine instance);
    partial void DeleteinspectionLine(inspectionLine instance);
    partial void InsertitemGroup(itemGroup instance);
    partial void UpdateitemGroup(itemGroup instance);
    partial void DeleteitemGroup(itemGroup instance);
    partial void InsertitemVLunar(itemVLunar instance);
    partial void UpdateitemVLunar(itemVLunar instance);
    partial void DeleteitemVLunar(itemVLunar instance);
    partial void Insertlanguage(language instance);
    partial void Updatelanguage(language instance);
    partial void Deletelanguage(language instance);
    partial void InsertlineStatus(lineStatus instance);
    partial void UpdatelineStatus(lineStatus instance);
    partial void DeletelineStatus(lineStatus instance);
    partial void InsertlineType(lineType instance);
    partial void UpdatelineType(lineType instance);
    partial void DeletelineType(lineType instance);
    partial void InsertpackList(packList instance);
    partial void UpdatepackList(packList instance);
    partial void DeletepackList(packList instance);
    partial void InsertpriceItem(priceItem instance);
    partial void UpdatepriceItem(priceItem instance);
    partial void DeletepriceItem(priceItem instance);
    partial void InsertpriceList(priceList instance);
    partial void UpdatepriceList(priceList instance);
    partial void DeletepriceList(priceList instance);
    partial void InsertProfile(Profile instance);
    partial void UpdateProfile(Profile instance);
    partial void DeleteProfile(Profile instance);
    partial void Insertproject(project instance);
    partial void Updateproject(project instance);
    partial void Deleteproject(project instance);
    partial void InsertpurchaseOrder(purchaseOrder instance);
    partial void UpdatepurchaseOrder(purchaseOrder instance);
    partial void DeletepurchaseOrder(purchaseOrder instance);
    partial void InsertpurchaseOrderLine(purchaseOrderLine instance);
    partial void UpdatepurchaseOrderLine(purchaseOrderLine instance);
    partial void DeletepurchaseOrderLine(purchaseOrderLine instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertsalesOrder(salesOrder instance);
    partial void UpdatesalesOrder(salesOrder instance);
    partial void DeletesalesOrder(salesOrder instance);
    partial void InsertshoppingCart(shoppingCart instance);
    partial void UpdateshoppingCart(shoppingCart instance);
    partial void DeleteshoppingCart(shoppingCart instance);
    partial void Insertstock(stock instance);
    partial void Updatestock(stock instance);
    partial void Deletestock(stock instance);
    partial void Inserttranslate(translate instance);
    partial void Updatetranslate(translate instance);
    partial void Deletetranslate(translate instance);
    partial void Inserttransport(transport instance);
    partial void Updatetransport(transport instance);
    partial void Deletetransport(transport instance);
    partial void InserttransportProject(transportProject instance);
    partial void UpdatetransportProject(transportProject instance);
    partial void DeletetransportProject(transportProject instance);
    partial void InserttransportType(transportType instance);
    partial void UpdatetransportType(transportType instance);
    partial void DeletetransportType(transportType instance);
    partial void InsertunitOfMeasure(unitOfMeasure instance);
    partial void UpdateunitOfMeasure(unitOfMeasure instance);
    partial void DeleteunitOfMeasure(unitOfMeasure instance);
    partial void InsertunitOfMeasureLink(unitOfMeasureLink instance);
    partial void UpdateunitOfMeasureLink(unitOfMeasureLink instance);
    partial void DeleteunitOfMeasureLink(unitOfMeasureLink instance);
    partial void InsertunitOfMeasureOrg(unitOfMeasureOrg instance);
    partial void UpdateunitOfMeasureOrg(unitOfMeasureOrg instance);
    partial void DeleteunitOfMeasureOrg(unitOfMeasureOrg instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUsersInRole(UsersInRole instance);
    partial void UpdateUsersInRole(UsersInRole instance);
    partial void DeleteUsersInRole(UsersInRole instance);
    partial void Insertbatch(batch instance);
    partial void Updatebatch(batch instance);
    partial void Deletebatch(batch instance);
    partial void Insertdelivery(delivery instance);
    partial void Updatedelivery(delivery instance);
    partial void Deletedelivery(delivery instance);
    partial void InsertbusinessPartnerSearch(businessPartnerSearch instance);
    partial void UpdatebusinessPartnerSearch(businessPartnerSearch instance);
    partial void DeletebusinessPartnerSearch(businessPartnerSearch instance);
    partial void InsertuserRole(userRole instance);
    partial void UpdateuserRole(userRole instance);
    partial void DeleteuserRole(userRole instance);
    partial void InsertbusinessPartner(businessPartner instance);
    partial void UpdatebusinessPartner(businessPartner instance);
    partial void DeletebusinessPartner(businessPartner instance);
    partial void InsertcertificateDownloaded(certificateDownloaded instance);
    partial void UpdatecertificateDownloaded(certificateDownloaded instance);
    partial void DeletecertificateDownloaded(certificateDownloaded instance);
    partial void InsertcertificateModel(certificateModel instance);
    partial void UpdatecertificateModel(certificateModel instance);
    partial void DeletecertificateModel(certificateModel instance);
    partial void InsertcertificateBundle(certificateBundle instance);
    partial void UpdatecertificateBundle(certificateBundle instance);
    partial void DeletecertificateBundle(certificateBundle instance);
    partial void InsertuserSetting(userSetting instance);
    partial void UpdateuserSetting(userSetting instance);
    partial void DeleteuserSetting(userSetting instance);
    partial void InsertbusinessPartnerApplication(businessPartnerApplication instance);
    partial void UpdatebusinessPartnerApplication(businessPartnerApplication instance);
    partial void DeletebusinessPartnerApplication(businessPartnerApplication instance);
    partial void Insertitem(item instance);
    partial void Updateitem(item instance);
    partial void Deleteitem(item instance);
    partial void InsertsalesOrderLine(salesOrderLine instance);
    partial void UpdatesalesOrderLine(salesOrderLine instance);
    partial void DeletesalesOrderLine(salesOrderLine instance);
    partial void InsertdeliveryLine(deliveryLine instance);
    partial void UpdatedeliveryLine(deliveryLine instance);
    partial void DeletedeliveryLine(deliveryLine instance);
    partial void InsertusageReport(usageReport instance);
    partial void UpdateusageReport(usageReport instance);
    partial void DeleteusageReport(usageReport instance);
    #endregion
		
		public DALPortalDataContext() : 
				base(global::VanLeeuwen.Projects.WebPortal.DataAccess.Properties.Settings.Default.PortalConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DALPortalDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DALPortalDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DALPortalDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DALPortalDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<application> applications
		{
			get
			{
				return this.GetTable<application>();
			}
		}
		
		public System.Data.Linq.Table<warehouse> warehouses
		{
			get
			{
				return this.GetTable<warehouse>();
			}
		}
		
		public System.Data.Linq.Table<applicationAccess> applicationAccesses
		{
			get
			{
				return this.GetTable<applicationAccess>();
			}
		}
		
		public System.Data.Linq.Table<applicationRole> applicationRoles
		{
			get
			{
				return this.GetTable<applicationRole>();
			}
		}
		
		public System.Data.Linq.Table<Application1> Application1s
		{
			get
			{
				return this.GetTable<Application1>();
			}
		}
		
		public System.Data.Linq.Table<batchDocument> batchDocuments
		{
			get
			{
				return this.GetTable<batchDocument>();
			}
		}
		
		public System.Data.Linq.Table<colli> collis
		{
			get
			{
				return this.GetTable<colli>();
			}
		}
		
		public System.Data.Linq.Table<colliLine> colliLines
		{
			get
			{
				return this.GetTable<colliLine>();
			}
		}
		
		public System.Data.Linq.Table<colliType> colliTypes
		{
			get
			{
				return this.GetTable<colliType>();
			}
		}
		
		public System.Data.Linq.Table<colliUnit> colliUnits
		{
			get
			{
				return this.GetTable<colliUnit>();
			}
		}
		
		public System.Data.Linq.Table<company> companies
		{
			get
			{
				return this.GetTable<company>();
			}
		}
		
		public System.Data.Linq.Table<companyGroup> companyGroups
		{
			get
			{
				return this.GetTable<companyGroup>();
			}
		}
		
		public System.Data.Linq.Table<companyGroupForBp> companyGroupForBps
		{
			get
			{
				return this.GetTable<companyGroupForBp>();
			}
		}
		
		public System.Data.Linq.Table<companyGroupForItem> companyGroupForItems
		{
			get
			{
				return this.GetTable<companyGroupForItem>();
			}
		}
		
		public System.Data.Linq.Table<companySection> companySections
		{
			get
			{
				return this.GetTable<companySection>();
			}
		}
		
		public System.Data.Linq.Table<contactPerson> contactPersons
		{
			get
			{
				return this.GetTable<contactPerson>();
			}
		}
		
		public System.Data.Linq.Table<contactPersonProject> contactPersonProjects
		{
			get
			{
				return this.GetTable<contactPersonProject>();
			}
		}
		
		public System.Data.Linq.Table<country> countries
		{
			get
			{
				return this.GetTable<country>();
			}
		}
		
		public System.Data.Linq.Table<currency> currencies
		{
			get
			{
				return this.GetTable<currency>();
			}
		}
		
		public System.Data.Linq.Table<docStatus> docStatus
		{
			get
			{
				return this.GetTable<docStatus>();
			}
		}
		
		public System.Data.Linq.Table<document> documents
		{
			get
			{
				return this.GetTable<document>();
			}
		}
		
		public System.Data.Linq.Table<goodsReceipt> goodsReceipts
		{
			get
			{
				return this.GetTable<goodsReceipt>();
			}
		}
		
		public System.Data.Linq.Table<goodsReceiptLine> goodsReceiptLines
		{
			get
			{
				return this.GetTable<goodsReceiptLine>();
			}
		}
		
		public System.Data.Linq.Table<inspection> inspections
		{
			get
			{
				return this.GetTable<inspection>();
			}
		}
		
		public System.Data.Linq.Table<inspectionLine> inspectionLines
		{
			get
			{
				return this.GetTable<inspectionLine>();
			}
		}
		
		public System.Data.Linq.Table<itemGroup> itemGroups
		{
			get
			{
				return this.GetTable<itemGroup>();
			}
		}
		
		public System.Data.Linq.Table<itemVLunar> itemVLunars
		{
			get
			{
				return this.GetTable<itemVLunar>();
			}
		}
		
		public System.Data.Linq.Table<language> languages
		{
			get
			{
				return this.GetTable<language>();
			}
		}
		
		public System.Data.Linq.Table<lineStatus> lineStatus
		{
			get
			{
				return this.GetTable<lineStatus>();
			}
		}
		
		public System.Data.Linq.Table<lineType> lineTypes
		{
			get
			{
				return this.GetTable<lineType>();
			}
		}
		
		public System.Data.Linq.Table<packList> packLists
		{
			get
			{
				return this.GetTable<packList>();
			}
		}
		
		public System.Data.Linq.Table<priceItem> priceItems
		{
			get
			{
				return this.GetTable<priceItem>();
			}
		}
		
		public System.Data.Linq.Table<priceList> priceLists
		{
			get
			{
				return this.GetTable<priceList>();
			}
		}
		
		public System.Data.Linq.Table<Profile> Profiles
		{
			get
			{
				return this.GetTable<Profile>();
			}
		}
		
		public System.Data.Linq.Table<project> projects
		{
			get
			{
				return this.GetTable<project>();
			}
		}
		
		public System.Data.Linq.Table<purchaseOrder> purchaseOrders
		{
			get
			{
				return this.GetTable<purchaseOrder>();
			}
		}
		
		public System.Data.Linq.Table<purchaseOrderLine> purchaseOrderLines
		{
			get
			{
				return this.GetTable<purchaseOrderLine>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<salesOrder> salesOrders
		{
			get
			{
				return this.GetTable<salesOrder>();
			}
		}
		
		public System.Data.Linq.Table<shoppingCart> shoppingCarts
		{
			get
			{
				return this.GetTable<shoppingCart>();
			}
		}
		
		public System.Data.Linq.Table<stock> stocks
		{
			get
			{
				return this.GetTable<stock>();
			}
		}
		
		public System.Data.Linq.Table<translate> translates
		{
			get
			{
				return this.GetTable<translate>();
			}
		}
		
		public System.Data.Linq.Table<transport> transports
		{
			get
			{
				return this.GetTable<transport>();
			}
		}
		
		public System.Data.Linq.Table<transportProject> transportProjects
		{
			get
			{
				return this.GetTable<transportProject>();
			}
		}
		
		public System.Data.Linq.Table<transportType> transportTypes
		{
			get
			{
				return this.GetTable<transportType>();
			}
		}
		
		public System.Data.Linq.Table<unitOfMeasure> unitOfMeasures
		{
			get
			{
				return this.GetTable<unitOfMeasure>();
			}
		}
		
		public System.Data.Linq.Table<unitOfMeasureLink> unitOfMeasureLinks
		{
			get
			{
				return this.GetTable<unitOfMeasureLink>();
			}
		}
		
		public System.Data.Linq.Table<unitOfMeasureOrg> unitOfMeasureOrgs
		{
			get
			{
				return this.GetTable<unitOfMeasureOrg>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UsersInRole> UsersInRoles
		{
			get
			{
				return this.GetTable<UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<batch> batches
		{
			get
			{
				return this.GetTable<batch>();
			}
		}
		
		public System.Data.Linq.Table<delivery> deliveries
		{
			get
			{
				return this.GetTable<delivery>();
			}
		}
		
		public System.Data.Linq.Table<vw_item> vw_items
		{
			get
			{
				return this.GetTable<vw_item>();
			}
		}
		
		public System.Data.Linq.Table<declarationOfPermanceDocument> declarationOfPermanceDocuments
		{
			get
			{
				return this.GetTable<declarationOfPermanceDocument>();
			}
		}
		
		public System.Data.Linq.Table<vw_businessPartnerDocument> vw_businessPartnerDocuments
		{
			get
			{
				return this.GetTable<vw_businessPartnerDocument>();
			}
		}
		
		public System.Data.Linq.Table<vw_BusinessPartnerDocumentsBusinessPartnerBusinessPartnerSearch> vw_BusinessPartnerDocumentsBusinessPartnerBusinessPartnerSearches
		{
			get
			{
				return this.GetTable<vw_BusinessPartnerDocumentsBusinessPartnerBusinessPartnerSearch>();
			}
		}
		
		public System.Data.Linq.Table<businessPartnerSearch> businessPartnerSearches
		{
			get
			{
				return this.GetTable<businessPartnerSearch>();
			}
		}
		
		public System.Data.Linq.Table<userRole> userRoles
		{
			get
			{
				return this.GetTable<userRole>();
			}
		}
		
		public System.Data.Linq.Table<vw_name_in_user> vw_name_in_users
		{
			get
			{
				return this.GetTable<vw_name_in_user>();
			}
		}
		
		public System.Data.Linq.Table<businessPartner> businessPartners
		{
			get
			{
				return this.GetTable<businessPartner>();
			}
		}
		
		public System.Data.Linq.Table<certificateDownloaded> certificateDownloadeds
		{
			get
			{
				return this.GetTable<certificateDownloaded>();
			}
		}
		
		public System.Data.Linq.Table<certificateModel> certificateModels
		{
			get
			{
				return this.GetTable<certificateModel>();
			}
		}
		
		public System.Data.Linq.Table<certificateBundle> certificateBundles
		{
			get
			{
				return this.GetTable<certificateBundle>();
			}
		}
		
		public System.Data.Linq.Table<userSetting> userSettings
		{
			get
			{
				return this.GetTable<userSetting>();
			}
		}
		
		public System.Data.Linq.Table<businessPartnerApplication> businessPartnerApplications
		{
			get
			{
				return this.GetTable<businessPartnerApplication>();
			}
		}
		
		public System.Data.Linq.Table<item> items
		{
			get
			{
				return this.GetTable<item>();
			}
		}
		
		public System.Data.Linq.Table<salesOrderLine> salesOrderLines
		{
			get
			{
				return this.GetTable<salesOrderLine>();
			}
		}
		
		public System.Data.Linq.Table<deliveryLine> deliveryLines
		{
			get
			{
				return this.GetTable<deliveryLine>();
			}
		}
		
		public System.Data.Linq.Table<usageReport> usageReports
		{
			get
			{
				return this.GetTable<usageReport>();
			}
		}
		
		public System.Data.Linq.Table<vw_DeliveryLine> vw_DeliveryLines
		{
			get
			{
				return this.GetTable<vw_DeliveryLine>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.application")]
	public partial class application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _applicationCode;
		
		private string _applicationName;
		
		private EntitySet<applicationAccess> _applicationAccesses;
		
		private EntitySet<applicationRole> _applicationRoles;
		
		private EntitySet<shoppingCart> _shoppingCarts;
		
		private EntitySet<businessPartnerApplication> _businessPartnerApplications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnapplicationCodeChanging(string value);
    partial void OnapplicationCodeChanged();
    partial void OnapplicationNameChanging(string value);
    partial void OnapplicationNameChanged();
    #endregion
		
		public application()
		{
			this._applicationAccesses = new EntitySet<applicationAccess>(new Action<applicationAccess>(this.attach_applicationAccesses), new Action<applicationAccess>(this.detach_applicationAccesses));
			this._applicationRoles = new EntitySet<applicationRole>(new Action<applicationRole>(this.attach_applicationRoles), new Action<applicationRole>(this.detach_applicationRoles));
			this._shoppingCarts = new EntitySet<shoppingCart>(new Action<shoppingCart>(this.attach_shoppingCarts), new Action<shoppingCart>(this.detach_shoppingCarts));
			this._businessPartnerApplications = new EntitySet<businessPartnerApplication>(new Action<businessPartnerApplication>(this.attach_businessPartnerApplications), new Action<businessPartnerApplication>(this.detach_businessPartnerApplications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_applicationCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string applicationCode
		{
			get
			{
				return this._applicationCode;
			}
			set
			{
				if ((this._applicationCode != value))
				{
					this.OnapplicationCodeChanging(value);
					this.SendPropertyChanging();
					this._applicationCode = value;
					this.SendPropertyChanged("applicationCode");
					this.OnapplicationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_applicationName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string applicationName
		{
			get
			{
				return this._applicationName;
			}
			set
			{
				if ((this._applicationName != value))
				{
					this.OnapplicationNameChanging(value);
					this.SendPropertyChanging();
					this._applicationName = value;
					this.SendPropertyChanged("applicationName");
					this.OnapplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="application_applicationAccess", Storage="_applicationAccesses", ThisKey="applicationCode", OtherKey="applicationCode")]
		public EntitySet<applicationAccess> applicationAccesses
		{
			get
			{
				return this._applicationAccesses;
			}
			set
			{
				this._applicationAccesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="application_applicationRole", Storage="_applicationRoles", ThisKey="applicationCode", OtherKey="applicationCode")]
		public EntitySet<applicationRole> applicationRoles
		{
			get
			{
				return this._applicationRoles;
			}
			set
			{
				this._applicationRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="application_shoppingCart", Storage="_shoppingCarts", ThisKey="applicationCode", OtherKey="applicationCode")]
		public EntitySet<shoppingCart> shoppingCarts
		{
			get
			{
				return this._shoppingCarts;
			}
			set
			{
				this._shoppingCarts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="application_businessPartnerApplication", Storage="_businessPartnerApplications", ThisKey="applicationCode", OtherKey="applicationCode")]
		public EntitySet<businessPartnerApplication> businessPartnerApplications
		{
			get
			{
				return this._businessPartnerApplications;
			}
			set
			{
				this._businessPartnerApplications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_applicationAccesses(applicationAccess entity)
		{
			this.SendPropertyChanging();
			entity.application = this;
		}
		
		private void detach_applicationAccesses(applicationAccess entity)
		{
			this.SendPropertyChanging();
			entity.application = null;
		}
		
		private void attach_applicationRoles(applicationRole entity)
		{
			this.SendPropertyChanging();
			entity.application = this;
		}
		
		private void detach_applicationRoles(applicationRole entity)
		{
			this.SendPropertyChanging();
			entity.application = null;
		}
		
		private void attach_shoppingCarts(shoppingCart entity)
		{
			this.SendPropertyChanging();
			entity.application = this;
		}
		
		private void detach_shoppingCarts(shoppingCart entity)
		{
			this.SendPropertyChanging();
			entity.application = null;
		}
		
		private void attach_businessPartnerApplications(businessPartnerApplication entity)
		{
			this.SendPropertyChanging();
			entity.application = this;
		}
		
		private void detach_businessPartnerApplications(businessPartnerApplication entity)
		{
			this.SendPropertyChanging();
			entity.application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.warehouse")]
	public partial class warehouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _warehouseId;
		
		private string _companyCode;
		
		private string _warehouseCode;
		
		private string _warehouseName;
		
		private EntitySet<stock> _stocks;
		
		private EntityRef<company> _company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnwarehouseIdChanging(int value);
    partial void OnwarehouseIdChanged();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    partial void OnwarehouseCodeChanging(string value);
    partial void OnwarehouseCodeChanged();
    partial void OnwarehouseNameChanging(string value);
    partial void OnwarehouseNameChanged();
    #endregion
		
		public warehouse()
		{
			this._stocks = new EntitySet<stock>(new Action<stock>(this.attach_stocks), new Action<stock>(this.detach_stocks));
			this._company = default(EntityRef<company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouseId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int warehouseId
		{
			get
			{
				return this._warehouseId;
			}
			set
			{
				if ((this._warehouseId != value))
				{
					this.OnwarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._warehouseId = value;
					this.SendPropertyChanged("warehouseId");
					this.OnwarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					if (this._company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouseCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string warehouseCode
		{
			get
			{
				return this._warehouseCode;
			}
			set
			{
				if ((this._warehouseCode != value))
				{
					this.OnwarehouseCodeChanging(value);
					this.SendPropertyChanging();
					this._warehouseCode = value;
					this.SendPropertyChanged("warehouseCode");
					this.OnwarehouseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouseName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string warehouseName
		{
			get
			{
				return this._warehouseName;
			}
			set
			{
				if ((this._warehouseName != value))
				{
					this.OnwarehouseNameChanging(value);
					this.SendPropertyChanging();
					this._warehouseName = value;
					this.SendPropertyChanged("warehouseName");
					this.OnwarehouseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="warehouse_stock", Storage="_stocks", ThisKey="warehouseId", OtherKey="warehouseId")]
		public EntitySet<stock> stocks
		{
			get
			{
				return this._stocks;
			}
			set
			{
				this._stocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_warehouse", Storage="_company", ThisKey="companyCode", OtherKey="companyCode", IsForeignKey=true)]
		public company company
		{
			get
			{
				return this._company.Entity;
			}
			set
			{
				company previousValue = this._company.Entity;
				if (((previousValue != value) 
							|| (this._company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._company.Entity = null;
						previousValue.warehouses.Remove(this);
					}
					this._company.Entity = value;
					if ((value != null))
					{
						value.warehouses.Add(this);
						this._companyCode = value.companyCode;
					}
					else
					{
						this._companyCode = default(string);
					}
					this.SendPropertyChanged("company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_stocks(stock entity)
		{
			this.SendPropertyChanging();
			entity.warehouse = this;
		}
		
		private void detach_stocks(stock entity)
		{
			this.SendPropertyChanging();
			entity.warehouse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.applicationAccess")]
	public partial class applicationAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _userId;
		
		private string _applicationCode;
		
		private bool _hasAccess;
		
		private System.Guid _roleId;
		
		private EntityRef<application> _application;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<userSetting> _userSetting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OnapplicationCodeChanging(string value);
    partial void OnapplicationCodeChanged();
    partial void OnhasAccessChanging(bool value);
    partial void OnhasAccessChanged();
    partial void OnroleIdChanging(System.Guid value);
    partial void OnroleIdChanged();
    #endregion
		
		public applicationAccess()
		{
			this._application = default(EntityRef<application>);
			this._Role = default(EntityRef<Role>);
			this._userSetting = default(EntityRef<userSetting>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._userSetting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_applicationCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string applicationCode
		{
			get
			{
				return this._applicationCode;
			}
			set
			{
				if ((this._applicationCode != value))
				{
					if (this._application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnapplicationCodeChanging(value);
					this.SendPropertyChanging();
					this._applicationCode = value;
					this.SendPropertyChanged("applicationCode");
					this.OnapplicationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasAccess", DbType="Bit NOT NULL")]
		public bool hasAccess
		{
			get
			{
				return this._hasAccess;
			}
			set
			{
				if ((this._hasAccess != value))
				{
					this.OnhasAccessChanging(value);
					this.SendPropertyChanging();
					this._hasAccess = value;
					this.SendPropertyChanged("hasAccess");
					this.OnhasAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid roleId
		{
			get
			{
				return this._roleId;
			}
			set
			{
				if ((this._roleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnroleIdChanging(value);
					this.SendPropertyChanging();
					this._roleId = value;
					this.SendPropertyChanged("roleId");
					this.OnroleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="application_applicationAccess", Storage="_application", ThisKey="applicationCode", OtherKey="applicationCode", IsForeignKey=true)]
		public application application
		{
			get
			{
				return this._application.Entity;
			}
			set
			{
				application previousValue = this._application.Entity;
				if (((previousValue != value) 
							|| (this._application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._application.Entity = null;
						previousValue.applicationAccesses.Remove(this);
					}
					this._application.Entity = value;
					if ((value != null))
					{
						value.applicationAccesses.Add(this);
						this._applicationCode = value.applicationCode;
					}
					else
					{
						this._applicationCode = default(string);
					}
					this.SendPropertyChanged("application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_applicationAccess", Storage="_Role", ThisKey="roleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.applicationAccesses.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.applicationAccesses.Add(this);
						this._roleId = value.RoleId;
					}
					else
					{
						this._roleId = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="userSetting_applicationAccess", Storage="_userSetting", ThisKey="userId", OtherKey="userId", IsForeignKey=true)]
		public userSetting userSetting
		{
			get
			{
				return this._userSetting.Entity;
			}
			set
			{
				userSetting previousValue = this._userSetting.Entity;
				if (((previousValue != value) 
							|| (this._userSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._userSetting.Entity = null;
						previousValue.applicationAccesses.Remove(this);
					}
					this._userSetting.Entity = value;
					if ((value != null))
					{
						value.applicationAccesses.Add(this);
						this._userId = value.userId;
					}
					else
					{
						this._userId = default(System.Guid);
					}
					this.SendPropertyChanged("userSetting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.applicationRole")]
	public partial class applicationRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _roleCode;
		
		private string _applicationCode;
		
		private string _description;
		
		private EntitySet<userRole> _userRoles;
		
		private EntityRef<application> _application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnroleCodeChanging(string value);
    partial void OnroleCodeChanged();
    partial void OnapplicationCodeChanging(string value);
    partial void OnapplicationCodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public applicationRole()
		{
			this._userRoles = new EntitySet<userRole>(new Action<userRole>(this.attach_userRoles), new Action<userRole>(this.detach_userRoles));
			this._application = default(EntityRef<application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string roleCode
		{
			get
			{
				return this._roleCode;
			}
			set
			{
				if ((this._roleCode != value))
				{
					this.OnroleCodeChanging(value);
					this.SendPropertyChanging();
					this._roleCode = value;
					this.SendPropertyChanged("roleCode");
					this.OnroleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_applicationCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string applicationCode
		{
			get
			{
				return this._applicationCode;
			}
			set
			{
				if ((this._applicationCode != value))
				{
					if (this._application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnapplicationCodeChanging(value);
					this.SendPropertyChanging();
					this._applicationCode = value;
					this.SendPropertyChanged("applicationCode");
					this.OnapplicationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="applicationRole_userRole", Storage="_userRoles", ThisKey="roleCode", OtherKey="roleCode")]
		public EntitySet<userRole> userRoles
		{
			get
			{
				return this._userRoles;
			}
			set
			{
				this._userRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="application_applicationRole", Storage="_application", ThisKey="applicationCode", OtherKey="applicationCode", IsForeignKey=true)]
		public application application
		{
			get
			{
				return this._application.Entity;
			}
			set
			{
				application previousValue = this._application.Entity;
				if (((previousValue != value) 
							|| (this._application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._application.Entity = null;
						previousValue.applicationRoles.Remove(this);
					}
					this._application.Entity = value;
					if ((value != null))
					{
						value.applicationRoles.Add(this);
						this._applicationCode = value.applicationCode;
					}
					else
					{
						this._applicationCode = default(string);
					}
					this.SendPropertyChanged("application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_userRoles(userRole entity)
		{
			this.SendPropertyChanging();
			entity.applicationRole = this;
		}
		
		private void detach_userRoles(userRole entity)
		{
			this.SendPropertyChanging();
			entity.applicationRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Applications")]
	public partial class Application1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private string _ApplicationName;
		
		private string _Description;
		
		private EntitySet<Role> _Roles;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Application1()
		{
			this._Roles = new EntitySet<Role>(new Action<Role>(this.attach_Roles), new Action<Role>(this.detach_Roles));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(235) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application1_Role", Storage="_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<Role> Roles
		{
			get
			{
				return this._Roles;
			}
			set
			{
				this._Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application1_User", Storage="_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Roles(Role entity)
		{
			this.SendPropertyChanging();
			entity.Application1 = this;
		}
		
		private void detach_Roles(Role entity)
		{
			this.SendPropertyChanging();
			entity.Application1 = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Application1 = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Application1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.batchDocument")]
	public partial class batchDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _baseDocId;
		
		private int _baseLineNum;
		
		private int _batchId;
		
		private string _baseDocType;
		
		private decimal _quantity;
		
		private EntityRef<document> _document;
		
		private EntityRef<batch> _batch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbaseDocIdChanging(int value);
    partial void OnbaseDocIdChanged();
    partial void OnbaseLineNumChanging(int value);
    partial void OnbaseLineNumChanged();
    partial void OnbatchIdChanging(int value);
    partial void OnbatchIdChanged();
    partial void OnbaseDocTypeChanging(string value);
    partial void OnbaseDocTypeChanged();
    partial void OnquantityChanging(decimal value);
    partial void OnquantityChanged();
    #endregion
		
		public batchDocument()
		{
			this._document = default(EntityRef<document>);
			this._batch = default(EntityRef<batch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int baseDocId
		{
			get
			{
				return this._baseDocId;
			}
			set
			{
				if ((this._baseDocId != value))
				{
					this.OnbaseDocIdChanging(value);
					this.SendPropertyChanging();
					this._baseDocId = value;
					this.SendPropertyChanged("baseDocId");
					this.OnbaseDocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseLineNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int baseLineNum
		{
			get
			{
				return this._baseLineNum;
			}
			set
			{
				if ((this._baseLineNum != value))
				{
					this.OnbaseLineNumChanging(value);
					this.SendPropertyChanging();
					this._baseLineNum = value;
					this.SendPropertyChanged("baseLineNum");
					this.OnbaseLineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_batchId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int batchId
		{
			get
			{
				return this._batchId;
			}
			set
			{
				if ((this._batchId != value))
				{
					if (this._batch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbatchIdChanging(value);
					this.SendPropertyChanging();
					this._batchId = value;
					this.SendPropertyChanged("batchId");
					this.OnbatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocType", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string baseDocType
		{
			get
			{
				return this._baseDocType;
			}
			set
			{
				if ((this._baseDocType != value))
				{
					if (this._document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbaseDocTypeChanging(value);
					this.SendPropertyChanging();
					this._baseDocType = value;
					this.SendPropertyChanged("baseDocType");
					this.OnbaseDocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Decimal(20,6) NOT NULL")]
		public decimal quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_batchDocument", Storage="_document", ThisKey="baseDocType", OtherKey="docType", IsForeignKey=true)]
		public document document
		{
			get
			{
				return this._document.Entity;
			}
			set
			{
				document previousValue = this._document.Entity;
				if (((previousValue != value) 
							|| (this._document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._document.Entity = null;
						previousValue.batchDocuments.Remove(this);
					}
					this._document.Entity = value;
					if ((value != null))
					{
						value.batchDocuments.Add(this);
						this._baseDocType = value.docType;
					}
					else
					{
						this._baseDocType = default(string);
					}
					this.SendPropertyChanged("document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="batch_batchDocument", Storage="_batch", ThisKey="batchId", OtherKey="batchId", IsForeignKey=true)]
		public batch batch
		{
			get
			{
				return this._batch.Entity;
			}
			set
			{
				batch previousValue = this._batch.Entity;
				if (((previousValue != value) 
							|| (this._batch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._batch.Entity = null;
						previousValue.batchDocuments.Remove(this);
					}
					this._batch.Entity = value;
					if ((value != null))
					{
						value.batchDocuments.Add(this);
						this._batchId = value.batchId;
					}
					else
					{
						this._batchId = default(int);
					}
					this.SendPropertyChanged("batch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.colli")]
	public partial class colli : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _colliId;
		
		private string _colliNumber;
		
		private string _colliUnitCode;
		
		private int _packListId;
		
		private System.Nullable<decimal> _length;
		
		private System.Nullable<decimal> _width;
		
		private System.Nullable<decimal> _heigth;
		
		private System.Nullable<decimal> _weightGross;
		
		private System.Nullable<decimal> _weightNett;
		
		private System.Nullable<decimal> _cubicMeters;
		
		private EntitySet<colliLine> _colliLines;
		
		private EntityRef<colliUnit> _colliUnit;
		
		private EntityRef<packList> _packList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncolliIdChanging(int value);
    partial void OncolliIdChanged();
    partial void OncolliNumberChanging(string value);
    partial void OncolliNumberChanged();
    partial void OncolliUnitCodeChanging(string value);
    partial void OncolliUnitCodeChanged();
    partial void OnpackListIdChanging(int value);
    partial void OnpackListIdChanged();
    partial void OnlengthChanging(System.Nullable<decimal> value);
    partial void OnlengthChanged();
    partial void OnwidthChanging(System.Nullable<decimal> value);
    partial void OnwidthChanged();
    partial void OnheigthChanging(System.Nullable<decimal> value);
    partial void OnheigthChanged();
    partial void OnweightGrossChanging(System.Nullable<decimal> value);
    partial void OnweightGrossChanged();
    partial void OnweightNettChanging(System.Nullable<decimal> value);
    partial void OnweightNettChanged();
    partial void OncubicMetersChanging(System.Nullable<decimal> value);
    partial void OncubicMetersChanged();
    #endregion
		
		public colli()
		{
			this._colliLines = new EntitySet<colliLine>(new Action<colliLine>(this.attach_colliLines), new Action<colliLine>(this.detach_colliLines));
			this._colliUnit = default(EntityRef<colliUnit>);
			this._packList = default(EntityRef<packList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colliId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int colliId
		{
			get
			{
				return this._colliId;
			}
			set
			{
				if ((this._colliId != value))
				{
					this.OncolliIdChanging(value);
					this.SendPropertyChanging();
					this._colliId = value;
					this.SendPropertyChanged("colliId");
					this.OncolliIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colliNumber", DbType="NVarChar(50)")]
		public string colliNumber
		{
			get
			{
				return this._colliNumber;
			}
			set
			{
				if ((this._colliNumber != value))
				{
					this.OncolliNumberChanging(value);
					this.SendPropertyChanging();
					this._colliNumber = value;
					this.SendPropertyChanged("colliNumber");
					this.OncolliNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colliUnitCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string colliUnitCode
		{
			get
			{
				return this._colliUnitCode;
			}
			set
			{
				if ((this._colliUnitCode != value))
				{
					if (this._colliUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncolliUnitCodeChanging(value);
					this.SendPropertyChanging();
					this._colliUnitCode = value;
					this.SendPropertyChanged("colliUnitCode");
					this.OncolliUnitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packListId", DbType="Int NOT NULL")]
		public int packListId
		{
			get
			{
				return this._packListId;
			}
			set
			{
				if ((this._packListId != value))
				{
					if (this._packList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpackListIdChanging(value);
					this.SendPropertyChanging();
					this._packListId = value;
					this.SendPropertyChanged("packListId");
					this.OnpackListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_length", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> length
		{
			get
			{
				return this._length;
			}
			set
			{
				if ((this._length != value))
				{
					this.OnlengthChanging(value);
					this.SendPropertyChanging();
					this._length = value;
					this.SendPropertyChanged("length");
					this.OnlengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_width", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> width
		{
			get
			{
				return this._width;
			}
			set
			{
				if ((this._width != value))
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_heigth", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> heigth
		{
			get
			{
				return this._heigth;
			}
			set
			{
				if ((this._heigth != value))
				{
					this.OnheigthChanging(value);
					this.SendPropertyChanging();
					this._heigth = value;
					this.SendPropertyChanged("heigth");
					this.OnheigthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weightGross", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> weightGross
		{
			get
			{
				return this._weightGross;
			}
			set
			{
				if ((this._weightGross != value))
				{
					this.OnweightGrossChanging(value);
					this.SendPropertyChanging();
					this._weightGross = value;
					this.SendPropertyChanged("weightGross");
					this.OnweightGrossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weightNett", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> weightNett
		{
			get
			{
				return this._weightNett;
			}
			set
			{
				if ((this._weightNett != value))
				{
					this.OnweightNettChanging(value);
					this.SendPropertyChanging();
					this._weightNett = value;
					this.SendPropertyChanged("weightNett");
					this.OnweightNettChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cubicMeters", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> cubicMeters
		{
			get
			{
				return this._cubicMeters;
			}
			set
			{
				if ((this._cubicMeters != value))
				{
					this.OncubicMetersChanging(value);
					this.SendPropertyChanging();
					this._cubicMeters = value;
					this.SendPropertyChanged("cubicMeters");
					this.OncubicMetersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="colli_colliLine", Storage="_colliLines", ThisKey="colliId", OtherKey="colliId")]
		public EntitySet<colliLine> colliLines
		{
			get
			{
				return this._colliLines;
			}
			set
			{
				this._colliLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="colliUnit_colli", Storage="_colliUnit", ThisKey="colliUnitCode", OtherKey="colliUnitCode", IsForeignKey=true)]
		public colliUnit colliUnit
		{
			get
			{
				return this._colliUnit.Entity;
			}
			set
			{
				colliUnit previousValue = this._colliUnit.Entity;
				if (((previousValue != value) 
							|| (this._colliUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._colliUnit.Entity = null;
						previousValue.collis.Remove(this);
					}
					this._colliUnit.Entity = value;
					if ((value != null))
					{
						value.collis.Add(this);
						this._colliUnitCode = value.colliUnitCode;
					}
					else
					{
						this._colliUnitCode = default(string);
					}
					this.SendPropertyChanged("colliUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="packList_colli", Storage="_packList", ThisKey="packListId", OtherKey="packListId", IsForeignKey=true)]
		public packList packList
		{
			get
			{
				return this._packList.Entity;
			}
			set
			{
				packList previousValue = this._packList.Entity;
				if (((previousValue != value) 
							|| (this._packList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._packList.Entity = null;
						previousValue.collis.Remove(this);
					}
					this._packList.Entity = value;
					if ((value != null))
					{
						value.collis.Add(this);
						this._packListId = value.packListId;
					}
					else
					{
						this._packListId = default(int);
					}
					this.SendPropertyChanged("packList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_colliLines(colliLine entity)
		{
			this.SendPropertyChanging();
			entity.colli = this;
		}
		
		private void detach_colliLines(colliLine entity)
		{
			this.SendPropertyChanging();
			entity.colli = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.colliLine")]
	public partial class colliLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _colliId;
		
		private int _lineNum;
		
		private int _baseDocId;
		
		private int _baseLineNum;
		
		private string _baseDocType;
		
		private decimal _quantity1;
		
		private string _uomCode1;
		
		private System.Nullable<decimal> _quantity2;
		
		private string _uomCode2;
		
		private decimal _weight;
		
		private EntityRef<colli> _colli;
		
		private EntityRef<document> _document;
		
		private EntityRef<unitOfMeasure> _unitOfMeasure;
		
		private EntityRef<unitOfMeasure> _unitOfMeasure1;
		
		private EntityRef<deliveryLine> _deliveryLine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncolliIdChanging(int value);
    partial void OncolliIdChanged();
    partial void OnlineNumChanging(int value);
    partial void OnlineNumChanged();
    partial void OnbaseDocIdChanging(int value);
    partial void OnbaseDocIdChanged();
    partial void OnbaseLineNumChanging(int value);
    partial void OnbaseLineNumChanged();
    partial void OnbaseDocTypeChanging(string value);
    partial void OnbaseDocTypeChanged();
    partial void Onquantity1Changing(decimal value);
    partial void Onquantity1Changed();
    partial void OnuomCode1Changing(string value);
    partial void OnuomCode1Changed();
    partial void Onquantity2Changing(System.Nullable<decimal> value);
    partial void Onquantity2Changed();
    partial void OnuomCode2Changing(string value);
    partial void OnuomCode2Changed();
    partial void OnweightChanging(decimal value);
    partial void OnweightChanged();
    #endregion
		
		public colliLine()
		{
			this._colli = default(EntityRef<colli>);
			this._document = default(EntityRef<document>);
			this._unitOfMeasure = default(EntityRef<unitOfMeasure>);
			this._unitOfMeasure1 = default(EntityRef<unitOfMeasure>);
			this._deliveryLine = default(EntityRef<deliveryLine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colliId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int colliId
		{
			get
			{
				return this._colliId;
			}
			set
			{
				if ((this._colliId != value))
				{
					if (this._colli.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncolliIdChanging(value);
					this.SendPropertyChanging();
					this._colliId = value;
					this.SendPropertyChanged("colliId");
					this.OncolliIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int lineNum
		{
			get
			{
				return this._lineNum;
			}
			set
			{
				if ((this._lineNum != value))
				{
					this.OnlineNumChanging(value);
					this.SendPropertyChanging();
					this._lineNum = value;
					this.SendPropertyChanged("lineNum");
					this.OnlineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocId", DbType="Int NOT NULL")]
		public int baseDocId
		{
			get
			{
				return this._baseDocId;
			}
			set
			{
				if ((this._baseDocId != value))
				{
					if (this._deliveryLine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbaseDocIdChanging(value);
					this.SendPropertyChanging();
					this._baseDocId = value;
					this.SendPropertyChanged("baseDocId");
					this.OnbaseDocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseLineNum", DbType="Int NOT NULL")]
		public int baseLineNum
		{
			get
			{
				return this._baseLineNum;
			}
			set
			{
				if ((this._baseLineNum != value))
				{
					if (this._deliveryLine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbaseLineNumChanging(value);
					this.SendPropertyChanging();
					this._baseLineNum = value;
					this.SendPropertyChanged("baseLineNum");
					this.OnbaseLineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string baseDocType
		{
			get
			{
				return this._baseDocType;
			}
			set
			{
				if ((this._baseDocType != value))
				{
					if (this._document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbaseDocTypeChanging(value);
					this.SendPropertyChanging();
					this._baseDocType = value;
					this.SendPropertyChanged("baseDocType");
					this.OnbaseDocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity1", DbType="Decimal(20,6) NOT NULL")]
		public decimal quantity1
		{
			get
			{
				return this._quantity1;
			}
			set
			{
				if ((this._quantity1 != value))
				{
					this.Onquantity1Changing(value);
					this.SendPropertyChanging();
					this._quantity1 = value;
					this.SendPropertyChanged("quantity1");
					this.Onquantity1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomCode1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string uomCode1
		{
			get
			{
				return this._uomCode1;
			}
			set
			{
				if ((this._uomCode1 != value))
				{
					if (this._unitOfMeasure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuomCode1Changing(value);
					this.SendPropertyChanging();
					this._uomCode1 = value;
					this.SendPropertyChanged("uomCode1");
					this.OnuomCode1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity2", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> quantity2
		{
			get
			{
				return this._quantity2;
			}
			set
			{
				if ((this._quantity2 != value))
				{
					this.Onquantity2Changing(value);
					this.SendPropertyChanging();
					this._quantity2 = value;
					this.SendPropertyChanged("quantity2");
					this.Onquantity2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomCode2", DbType="NVarChar(50)")]
		public string uomCode2
		{
			get
			{
				return this._uomCode2;
			}
			set
			{
				if ((this._uomCode2 != value))
				{
					if (this._unitOfMeasure1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuomCode2Changing(value);
					this.SendPropertyChanging();
					this._uomCode2 = value;
					this.SendPropertyChanged("uomCode2");
					this.OnuomCode2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Decimal(20,6) NOT NULL")]
		public decimal weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="colli_colliLine", Storage="_colli", ThisKey="colliId", OtherKey="colliId", IsForeignKey=true)]
		public colli colli
		{
			get
			{
				return this._colli.Entity;
			}
			set
			{
				colli previousValue = this._colli.Entity;
				if (((previousValue != value) 
							|| (this._colli.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._colli.Entity = null;
						previousValue.colliLines.Remove(this);
					}
					this._colli.Entity = value;
					if ((value != null))
					{
						value.colliLines.Add(this);
						this._colliId = value.colliId;
					}
					else
					{
						this._colliId = default(int);
					}
					this.SendPropertyChanged("colli");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_colliLine", Storage="_document", ThisKey="baseDocType", OtherKey="docType", IsForeignKey=true)]
		public document document
		{
			get
			{
				return this._document.Entity;
			}
			set
			{
				document previousValue = this._document.Entity;
				if (((previousValue != value) 
							|| (this._document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._document.Entity = null;
						previousValue.colliLines.Remove(this);
					}
					this._document.Entity = value;
					if ((value != null))
					{
						value.colliLines.Add(this);
						this._baseDocType = value.docType;
					}
					else
					{
						this._baseDocType = default(string);
					}
					this.SendPropertyChanged("document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasure_colliLine", Storage="_unitOfMeasure", ThisKey="uomCode1", OtherKey="uomCode", IsForeignKey=true)]
		public unitOfMeasure unitOfMeasure
		{
			get
			{
				return this._unitOfMeasure.Entity;
			}
			set
			{
				unitOfMeasure previousValue = this._unitOfMeasure.Entity;
				if (((previousValue != value) 
							|| (this._unitOfMeasure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._unitOfMeasure.Entity = null;
						previousValue.colliLines.Remove(this);
					}
					this._unitOfMeasure.Entity = value;
					if ((value != null))
					{
						value.colliLines.Add(this);
						this._uomCode1 = value.uomCode;
					}
					else
					{
						this._uomCode1 = default(string);
					}
					this.SendPropertyChanged("unitOfMeasure");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasure_colliLine1", Storage="_unitOfMeasure1", ThisKey="uomCode2", OtherKey="uomCode", IsForeignKey=true)]
		public unitOfMeasure unitOfMeasure1
		{
			get
			{
				return this._unitOfMeasure1.Entity;
			}
			set
			{
				unitOfMeasure previousValue = this._unitOfMeasure1.Entity;
				if (((previousValue != value) 
							|| (this._unitOfMeasure1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._unitOfMeasure1.Entity = null;
						previousValue.colliLines1.Remove(this);
					}
					this._unitOfMeasure1.Entity = value;
					if ((value != null))
					{
						value.colliLines1.Add(this);
						this._uomCode2 = value.uomCode;
					}
					else
					{
						this._uomCode2 = default(string);
					}
					this.SendPropertyChanged("unitOfMeasure1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="deliveryLine_colliLine", Storage="_deliveryLine", ThisKey="baseDocId,baseLineNum", OtherKey="docId,lineNum", IsForeignKey=true)]
		public deliveryLine deliveryLine
		{
			get
			{
				return this._deliveryLine.Entity;
			}
			set
			{
				deliveryLine previousValue = this._deliveryLine.Entity;
				if (((previousValue != value) 
							|| (this._deliveryLine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._deliveryLine.Entity = null;
						previousValue.colliLines.Remove(this);
					}
					this._deliveryLine.Entity = value;
					if ((value != null))
					{
						value.colliLines.Add(this);
						this._baseDocId = value.docId;
						this._baseLineNum = value.lineNum;
					}
					else
					{
						this._baseDocId = default(int);
						this._baseLineNum = default(int);
					}
					this.SendPropertyChanged("deliveryLine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.colliType")]
	public partial class colliType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _colliTypeCode;
		
		private string _description;
		
		private EntitySet<colliUnit> _colliUnits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncolliTypeCodeChanging(string value);
    partial void OncolliTypeCodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public colliType()
		{
			this._colliUnits = new EntitySet<colliUnit>(new Action<colliUnit>(this.attach_colliUnits), new Action<colliUnit>(this.detach_colliUnits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colliTypeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string colliTypeCode
		{
			get
			{
				return this._colliTypeCode;
			}
			set
			{
				if ((this._colliTypeCode != value))
				{
					this.OncolliTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._colliTypeCode = value;
					this.SendPropertyChanged("colliTypeCode");
					this.OncolliTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="colliType_colliUnit", Storage="_colliUnits", ThisKey="colliTypeCode", OtherKey="colliTypeCode")]
		public EntitySet<colliUnit> colliUnits
		{
			get
			{
				return this._colliUnits;
			}
			set
			{
				this._colliUnits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_colliUnits(colliUnit entity)
		{
			this.SendPropertyChanging();
			entity.colliType = this;
		}
		
		private void detach_colliUnits(colliUnit entity)
		{
			this.SendPropertyChanging();
			entity.colliType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.colliUnit")]
	public partial class colliUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _colliUnitCode;
		
		private string _colliTypeCode;
		
		private string _description;
		
		private System.Nullable<decimal> _length;
		
		private System.Nullable<decimal> _width;
		
		private System.Nullable<decimal> _heigth;
		
		private System.Nullable<decimal> _weightAdditional;
		
		private EntitySet<colli> _collis;
		
		private EntityRef<colliType> _colliType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncolliUnitCodeChanging(string value);
    partial void OncolliUnitCodeChanged();
    partial void OncolliTypeCodeChanging(string value);
    partial void OncolliTypeCodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnlengthChanging(System.Nullable<decimal> value);
    partial void OnlengthChanged();
    partial void OnwidthChanging(System.Nullable<decimal> value);
    partial void OnwidthChanged();
    partial void OnheigthChanging(System.Nullable<decimal> value);
    partial void OnheigthChanged();
    partial void OnweightAdditionalChanging(System.Nullable<decimal> value);
    partial void OnweightAdditionalChanged();
    #endregion
		
		public colliUnit()
		{
			this._collis = new EntitySet<colli>(new Action<colli>(this.attach_collis), new Action<colli>(this.detach_collis));
			this._colliType = default(EntityRef<colliType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colliUnitCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string colliUnitCode
		{
			get
			{
				return this._colliUnitCode;
			}
			set
			{
				if ((this._colliUnitCode != value))
				{
					this.OncolliUnitCodeChanging(value);
					this.SendPropertyChanging();
					this._colliUnitCode = value;
					this.SendPropertyChanged("colliUnitCode");
					this.OncolliUnitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colliTypeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string colliTypeCode
		{
			get
			{
				return this._colliTypeCode;
			}
			set
			{
				if ((this._colliTypeCode != value))
				{
					if (this._colliType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncolliTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._colliTypeCode = value;
					this.SendPropertyChanged("colliTypeCode");
					this.OncolliTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_length", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> length
		{
			get
			{
				return this._length;
			}
			set
			{
				if ((this._length != value))
				{
					this.OnlengthChanging(value);
					this.SendPropertyChanging();
					this._length = value;
					this.SendPropertyChanged("length");
					this.OnlengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_width", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> width
		{
			get
			{
				return this._width;
			}
			set
			{
				if ((this._width != value))
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_heigth", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> heigth
		{
			get
			{
				return this._heigth;
			}
			set
			{
				if ((this._heigth != value))
				{
					this.OnheigthChanging(value);
					this.SendPropertyChanging();
					this._heigth = value;
					this.SendPropertyChanged("heigth");
					this.OnheigthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weightAdditional", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> weightAdditional
		{
			get
			{
				return this._weightAdditional;
			}
			set
			{
				if ((this._weightAdditional != value))
				{
					this.OnweightAdditionalChanging(value);
					this.SendPropertyChanging();
					this._weightAdditional = value;
					this.SendPropertyChanged("weightAdditional");
					this.OnweightAdditionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="colliUnit_colli", Storage="_collis", ThisKey="colliUnitCode", OtherKey="colliUnitCode")]
		public EntitySet<colli> collis
		{
			get
			{
				return this._collis;
			}
			set
			{
				this._collis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="colliType_colliUnit", Storage="_colliType", ThisKey="colliTypeCode", OtherKey="colliTypeCode", IsForeignKey=true)]
		public colliType colliType
		{
			get
			{
				return this._colliType.Entity;
			}
			set
			{
				colliType previousValue = this._colliType.Entity;
				if (((previousValue != value) 
							|| (this._colliType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._colliType.Entity = null;
						previousValue.colliUnits.Remove(this);
					}
					this._colliType.Entity = value;
					if ((value != null))
					{
						value.colliUnits.Add(this);
						this._colliTypeCode = value.colliTypeCode;
					}
					else
					{
						this._colliTypeCode = default(string);
					}
					this.SendPropertyChanged("colliType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_collis(colli entity)
		{
			this.SendPropertyChanging();
			entity.colliUnit = this;
		}
		
		private void detach_collis(colli entity)
		{
			this.SendPropertyChanging();
			entity.colliUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.company")]
	public partial class company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _companyCode;
		
		private string _companyName;
		
		private string _currencyCode;
		
		private EntitySet<warehouse> _warehouses;
		
		private EntitySet<companyGroupForBp> _companyGroupForBps;
		
		private EntitySet<companyGroupForItem> _companyGroupForItems;
		
		private EntitySet<companySection> _companySections;
		
		private EntitySet<goodsReceipt> _goodsReceipts;
		
		private EntitySet<priceItem> _priceItems;
		
		private EntitySet<project> _projects;
		
		private EntitySet<purchaseOrder> _purchaseOrders;
		
		private EntitySet<salesOrder> _salesOrders;
		
		private EntitySet<shoppingCart> _shoppingCarts;
		
		private EntitySet<batch> _batches;
		
		private EntitySet<delivery> _deliveries;
		
		private EntitySet<businessPartner> _businessPartners;
		
		private EntitySet<certificateDownloaded> _certificateDownloadeds;
		
		private EntitySet<userSetting> _userSettings;
		
		private EntitySet<item> _items;
		
		private EntityRef<currency> _currency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    partial void OncompanyNameChanging(string value);
    partial void OncompanyNameChanged();
    partial void OncurrencyCodeChanging(string value);
    partial void OncurrencyCodeChanged();
    #endregion
		
		public company()
		{
			this._warehouses = new EntitySet<warehouse>(new Action<warehouse>(this.attach_warehouses), new Action<warehouse>(this.detach_warehouses));
			this._companyGroupForBps = new EntitySet<companyGroupForBp>(new Action<companyGroupForBp>(this.attach_companyGroupForBps), new Action<companyGroupForBp>(this.detach_companyGroupForBps));
			this._companyGroupForItems = new EntitySet<companyGroupForItem>(new Action<companyGroupForItem>(this.attach_companyGroupForItems), new Action<companyGroupForItem>(this.detach_companyGroupForItems));
			this._companySections = new EntitySet<companySection>(new Action<companySection>(this.attach_companySections), new Action<companySection>(this.detach_companySections));
			this._goodsReceipts = new EntitySet<goodsReceipt>(new Action<goodsReceipt>(this.attach_goodsReceipts), new Action<goodsReceipt>(this.detach_goodsReceipts));
			this._priceItems = new EntitySet<priceItem>(new Action<priceItem>(this.attach_priceItems), new Action<priceItem>(this.detach_priceItems));
			this._projects = new EntitySet<project>(new Action<project>(this.attach_projects), new Action<project>(this.detach_projects));
			this._purchaseOrders = new EntitySet<purchaseOrder>(new Action<purchaseOrder>(this.attach_purchaseOrders), new Action<purchaseOrder>(this.detach_purchaseOrders));
			this._salesOrders = new EntitySet<salesOrder>(new Action<salesOrder>(this.attach_salesOrders), new Action<salesOrder>(this.detach_salesOrders));
			this._shoppingCarts = new EntitySet<shoppingCart>(new Action<shoppingCart>(this.attach_shoppingCarts), new Action<shoppingCart>(this.detach_shoppingCarts));
			this._batches = new EntitySet<batch>(new Action<batch>(this.attach_batches), new Action<batch>(this.detach_batches));
			this._deliveries = new EntitySet<delivery>(new Action<delivery>(this.attach_deliveries), new Action<delivery>(this.detach_deliveries));
			this._businessPartners = new EntitySet<businessPartner>(new Action<businessPartner>(this.attach_businessPartners), new Action<businessPartner>(this.detach_businessPartners));
			this._certificateDownloadeds = new EntitySet<certificateDownloaded>(new Action<certificateDownloaded>(this.attach_certificateDownloadeds), new Action<certificateDownloaded>(this.detach_certificateDownloadeds));
			this._userSettings = new EntitySet<userSetting>(new Action<userSetting>(this.attach_userSettings), new Action<userSetting>(this.detach_userSettings));
			this._items = new EntitySet<item>(new Action<item>(this.attach_items), new Action<item>(this.detach_items));
			this._currency = default(EntityRef<currency>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string companyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this.OncompanyNameChanging(value);
					this.SendPropertyChanging();
					this._companyName = value;
					this.SendPropertyChanged("companyName");
					this.OncompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string currencyCode
		{
			get
			{
				return this._currencyCode;
			}
			set
			{
				if ((this._currencyCode != value))
				{
					if (this._currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._currencyCode = value;
					this.SendPropertyChanged("currencyCode");
					this.OncurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_warehouse", Storage="_warehouses", ThisKey="companyCode", OtherKey="companyCode")]
		public EntitySet<warehouse> warehouses
		{
			get
			{
				return this._warehouses;
			}
			set
			{
				this._warehouses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_companyGroupForBp", Storage="_companyGroupForBps", ThisKey="companyCode", OtherKey="companyCode")]
		public EntitySet<companyGroupForBp> companyGroupForBps
		{
			get
			{
				return this._companyGroupForBps;
			}
			set
			{
				this._companyGroupForBps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_companyGroupForItem", Storage="_companyGroupForItems", ThisKey="companyCode", OtherKey="companyCode")]
		public EntitySet<companyGroupForItem> companyGroupForItems
		{
			get
			{
				return this._companyGroupForItems;
			}
			set
			{
				this._companyGroupForItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_companySection", Storage="_companySections", ThisKey="companyCode", OtherKey="CompanyCode")]
		public EntitySet<companySection> companySections
		{
			get
			{
				return this._companySections;
			}
			set
			{
				this._companySections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_goodsReceipt", Storage="_goodsReceipts", ThisKey="companyCode", OtherKey="companyCode")]
		public EntitySet<goodsReceipt> goodsReceipts
		{
			get
			{
				return this._goodsReceipts;
			}
			set
			{
				this._goodsReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_priceItem", Storage="_priceItems", ThisKey="companyCode", OtherKey="companyCode")]
		public EntitySet<priceItem> priceItems
		{
			get
			{
				return this._priceItems;
			}
			set
			{
				this._priceItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_project", Storage="_projects", ThisKey="companyCode", OtherKey="companyCode")]
		public EntitySet<project> projects
		{
			get
			{
				return this._projects;
			}
			set
			{
				this._projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_purchaseOrder", Storage="_purchaseOrders", ThisKey="companyCode", OtherKey="companyCode")]
		public EntitySet<purchaseOrder> purchaseOrders
		{
			get
			{
				return this._purchaseOrders;
			}
			set
			{
				this._purchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_salesOrder", Storage="_salesOrders", ThisKey="companyCode", OtherKey="companyCode")]
		public EntitySet<salesOrder> salesOrders
		{
			get
			{
				return this._salesOrders;
			}
			set
			{
				this._salesOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_shoppingCart", Storage="_shoppingCarts", ThisKey="companyCode", OtherKey="companyCode")]
		public EntitySet<shoppingCart> shoppingCarts
		{
			get
			{
				return this._shoppingCarts;
			}
			set
			{
				this._shoppingCarts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_batch", Storage="_batches", ThisKey="companyCode", OtherKey="companyCode")]
		public EntitySet<batch> batches
		{
			get
			{
				return this._batches;
			}
			set
			{
				this._batches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_delivery", Storage="_deliveries", ThisKey="companyCode", OtherKey="companyCode")]
		public EntitySet<delivery> deliveries
		{
			get
			{
				return this._deliveries;
			}
			set
			{
				this._deliveries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_businessPartner", Storage="_businessPartners", ThisKey="companyCode", OtherKey="companyCode")]
		public EntitySet<businessPartner> businessPartners
		{
			get
			{
				return this._businessPartners;
			}
			set
			{
				this._businessPartners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_certificateDownloaded", Storage="_certificateDownloadeds", ThisKey="companyCode", OtherKey="companyCode")]
		public EntitySet<certificateDownloaded> certificateDownloadeds
		{
			get
			{
				return this._certificateDownloadeds;
			}
			set
			{
				this._certificateDownloadeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_userSetting", Storage="_userSettings", ThisKey="companyCode", OtherKey="companyCode")]
		public EntitySet<userSetting> userSettings
		{
			get
			{
				return this._userSettings;
			}
			set
			{
				this._userSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_item", Storage="_items", ThisKey="companyCode", OtherKey="companyCode")]
		public EntitySet<item> items
		{
			get
			{
				return this._items;
			}
			set
			{
				this._items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="currency_company", Storage="_currency", ThisKey="currencyCode", OtherKey="currencyCode", IsForeignKey=true)]
		public currency currency
		{
			get
			{
				return this._currency.Entity;
			}
			set
			{
				currency previousValue = this._currency.Entity;
				if (((previousValue != value) 
							|| (this._currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._currency.Entity = null;
						previousValue.companies.Remove(this);
					}
					this._currency.Entity = value;
					if ((value != null))
					{
						value.companies.Add(this);
						this._currencyCode = value.currencyCode;
					}
					else
					{
						this._currencyCode = default(string);
					}
					this.SendPropertyChanged("currency");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_warehouses(warehouse entity)
		{
			this.SendPropertyChanging();
			entity.company = this;
		}
		
		private void detach_warehouses(warehouse entity)
		{
			this.SendPropertyChanging();
			entity.company = null;
		}
		
		private void attach_companyGroupForBps(companyGroupForBp entity)
		{
			this.SendPropertyChanging();
			entity.company = this;
		}
		
		private void detach_companyGroupForBps(companyGroupForBp entity)
		{
			this.SendPropertyChanging();
			entity.company = null;
		}
		
		private void attach_companyGroupForItems(companyGroupForItem entity)
		{
			this.SendPropertyChanging();
			entity.company = this;
		}
		
		private void detach_companyGroupForItems(companyGroupForItem entity)
		{
			this.SendPropertyChanging();
			entity.company = null;
		}
		
		private void attach_companySections(companySection entity)
		{
			this.SendPropertyChanging();
			entity.company = this;
		}
		
		private void detach_companySections(companySection entity)
		{
			this.SendPropertyChanging();
			entity.company = null;
		}
		
		private void attach_goodsReceipts(goodsReceipt entity)
		{
			this.SendPropertyChanging();
			entity.company = this;
		}
		
		private void detach_goodsReceipts(goodsReceipt entity)
		{
			this.SendPropertyChanging();
			entity.company = null;
		}
		
		private void attach_priceItems(priceItem entity)
		{
			this.SendPropertyChanging();
			entity.company = this;
		}
		
		private void detach_priceItems(priceItem entity)
		{
			this.SendPropertyChanging();
			entity.company = null;
		}
		
		private void attach_projects(project entity)
		{
			this.SendPropertyChanging();
			entity.company = this;
		}
		
		private void detach_projects(project entity)
		{
			this.SendPropertyChanging();
			entity.company = null;
		}
		
		private void attach_purchaseOrders(purchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.company = this;
		}
		
		private void detach_purchaseOrders(purchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.company = null;
		}
		
		private void attach_salesOrders(salesOrder entity)
		{
			this.SendPropertyChanging();
			entity.company = this;
		}
		
		private void detach_salesOrders(salesOrder entity)
		{
			this.SendPropertyChanging();
			entity.company = null;
		}
		
		private void attach_shoppingCarts(shoppingCart entity)
		{
			this.SendPropertyChanging();
			entity.company = this;
		}
		
		private void detach_shoppingCarts(shoppingCart entity)
		{
			this.SendPropertyChanging();
			entity.company = null;
		}
		
		private void attach_batches(batch entity)
		{
			this.SendPropertyChanging();
			entity.company = this;
		}
		
		private void detach_batches(batch entity)
		{
			this.SendPropertyChanging();
			entity.company = null;
		}
		
		private void attach_deliveries(delivery entity)
		{
			this.SendPropertyChanging();
			entity.company = this;
		}
		
		private void detach_deliveries(delivery entity)
		{
			this.SendPropertyChanging();
			entity.company = null;
		}
		
		private void attach_businessPartners(businessPartner entity)
		{
			this.SendPropertyChanging();
			entity.company = this;
		}
		
		private void detach_businessPartners(businessPartner entity)
		{
			this.SendPropertyChanging();
			entity.company = null;
		}
		
		private void attach_certificateDownloadeds(certificateDownloaded entity)
		{
			this.SendPropertyChanging();
			entity.company = this;
		}
		
		private void detach_certificateDownloadeds(certificateDownloaded entity)
		{
			this.SendPropertyChanging();
			entity.company = null;
		}
		
		private void attach_userSettings(userSetting entity)
		{
			this.SendPropertyChanging();
			entity.company = this;
		}
		
		private void detach_userSettings(userSetting entity)
		{
			this.SendPropertyChanging();
			entity.company = null;
		}
		
		private void attach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.company = this;
		}
		
		private void detach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.companyGroup")]
	public partial class companyGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _companyGroupCode;
		
		private string _description;
		
		private EntitySet<companyGroupForBp> _companyGroupForBps;
		
		private EntitySet<companyGroupForItem> _companyGroupForItems;
		
		private EntitySet<businessPartner> _businessPartners;
		
		private EntitySet<item> _items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncompanyGroupCodeChanging(string value);
    partial void OncompanyGroupCodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public companyGroup()
		{
			this._companyGroupForBps = new EntitySet<companyGroupForBp>(new Action<companyGroupForBp>(this.attach_companyGroupForBps), new Action<companyGroupForBp>(this.detach_companyGroupForBps));
			this._companyGroupForItems = new EntitySet<companyGroupForItem>(new Action<companyGroupForItem>(this.attach_companyGroupForItems), new Action<companyGroupForItem>(this.detach_companyGroupForItems));
			this._businessPartners = new EntitySet<businessPartner>(new Action<businessPartner>(this.attach_businessPartners), new Action<businessPartner>(this.detach_businessPartners));
			this._items = new EntitySet<item>(new Action<item>(this.attach_items), new Action<item>(this.detach_items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyGroupCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string companyGroupCode
		{
			get
			{
				return this._companyGroupCode;
			}
			set
			{
				if ((this._companyGroupCode != value))
				{
					this.OncompanyGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._companyGroupCode = value;
					this.SendPropertyChanged("companyGroupCode");
					this.OncompanyGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="companyGroup_companyGroupForBp", Storage="_companyGroupForBps", ThisKey="companyGroupCode", OtherKey="companyGroupCode")]
		public EntitySet<companyGroupForBp> companyGroupForBps
		{
			get
			{
				return this._companyGroupForBps;
			}
			set
			{
				this._companyGroupForBps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="companyGroup_companyGroupForItem", Storage="_companyGroupForItems", ThisKey="companyGroupCode", OtherKey="companyGroupCode")]
		public EntitySet<companyGroupForItem> companyGroupForItems
		{
			get
			{
				return this._companyGroupForItems;
			}
			set
			{
				this._companyGroupForItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="companyGroup_businessPartner", Storage="_businessPartners", ThisKey="companyGroupCode", OtherKey="companyGroupCode")]
		public EntitySet<businessPartner> businessPartners
		{
			get
			{
				return this._businessPartners;
			}
			set
			{
				this._businessPartners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="companyGroup_item", Storage="_items", ThisKey="companyGroupCode", OtherKey="companyGroupCode")]
		public EntitySet<item> items
		{
			get
			{
				return this._items;
			}
			set
			{
				this._items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_companyGroupForBps(companyGroupForBp entity)
		{
			this.SendPropertyChanging();
			entity.companyGroup = this;
		}
		
		private void detach_companyGroupForBps(companyGroupForBp entity)
		{
			this.SendPropertyChanging();
			entity.companyGroup = null;
		}
		
		private void attach_companyGroupForItems(companyGroupForItem entity)
		{
			this.SendPropertyChanging();
			entity.companyGroup = this;
		}
		
		private void detach_companyGroupForItems(companyGroupForItem entity)
		{
			this.SendPropertyChanging();
			entity.companyGroup = null;
		}
		
		private void attach_businessPartners(businessPartner entity)
		{
			this.SendPropertyChanging();
			entity.companyGroup = this;
		}
		
		private void detach_businessPartners(businessPartner entity)
		{
			this.SendPropertyChanging();
			entity.companyGroup = null;
		}
		
		private void attach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.companyGroup = this;
		}
		
		private void detach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.companyGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.companyGroupForBp")]
	public partial class companyGroupForBp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _companyGroupCode;
		
		private string _companyCode;
		
		private EntityRef<company> _company;
		
		private EntityRef<companyGroup> _companyGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncompanyGroupCodeChanging(string value);
    partial void OncompanyGroupCodeChanged();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    #endregion
		
		public companyGroupForBp()
		{
			this._company = default(EntityRef<company>);
			this._companyGroup = default(EntityRef<companyGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyGroupCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string companyGroupCode
		{
			get
			{
				return this._companyGroupCode;
			}
			set
			{
				if ((this._companyGroupCode != value))
				{
					if (this._companyGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._companyGroupCode = value;
					this.SendPropertyChanged("companyGroupCode");
					this.OncompanyGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					if (this._company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_companyGroupForBp", Storage="_company", ThisKey="companyCode", OtherKey="companyCode", IsForeignKey=true)]
		public company company
		{
			get
			{
				return this._company.Entity;
			}
			set
			{
				company previousValue = this._company.Entity;
				if (((previousValue != value) 
							|| (this._company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._company.Entity = null;
						previousValue.companyGroupForBps.Remove(this);
					}
					this._company.Entity = value;
					if ((value != null))
					{
						value.companyGroupForBps.Add(this);
						this._companyCode = value.companyCode;
					}
					else
					{
						this._companyCode = default(string);
					}
					this.SendPropertyChanged("company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="companyGroup_companyGroupForBp", Storage="_companyGroup", ThisKey="companyGroupCode", OtherKey="companyGroupCode", IsForeignKey=true)]
		public companyGroup companyGroup
		{
			get
			{
				return this._companyGroup.Entity;
			}
			set
			{
				companyGroup previousValue = this._companyGroup.Entity;
				if (((previousValue != value) 
							|| (this._companyGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._companyGroup.Entity = null;
						previousValue.companyGroupForBps.Remove(this);
					}
					this._companyGroup.Entity = value;
					if ((value != null))
					{
						value.companyGroupForBps.Add(this);
						this._companyGroupCode = value.companyGroupCode;
					}
					else
					{
						this._companyGroupCode = default(string);
					}
					this.SendPropertyChanged("companyGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.companyGroupForItems")]
	public partial class companyGroupForItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _companyCode;
		
		private string _companyGroupCode;
		
		private EntityRef<company> _company;
		
		private EntityRef<companyGroup> _companyGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    partial void OncompanyGroupCodeChanging(string value);
    partial void OncompanyGroupCodeChanged();
    #endregion
		
		public companyGroupForItem()
		{
			this._company = default(EntityRef<company>);
			this._companyGroup = default(EntityRef<companyGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					if (this._company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyGroupCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string companyGroupCode
		{
			get
			{
				return this._companyGroupCode;
			}
			set
			{
				if ((this._companyGroupCode != value))
				{
					if (this._companyGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._companyGroupCode = value;
					this.SendPropertyChanged("companyGroupCode");
					this.OncompanyGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_companyGroupForItem", Storage="_company", ThisKey="companyCode", OtherKey="companyCode", IsForeignKey=true)]
		public company company
		{
			get
			{
				return this._company.Entity;
			}
			set
			{
				company previousValue = this._company.Entity;
				if (((previousValue != value) 
							|| (this._company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._company.Entity = null;
						previousValue.companyGroupForItems.Remove(this);
					}
					this._company.Entity = value;
					if ((value != null))
					{
						value.companyGroupForItems.Add(this);
						this._companyCode = value.companyCode;
					}
					else
					{
						this._companyCode = default(string);
					}
					this.SendPropertyChanged("company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="companyGroup_companyGroupForItem", Storage="_companyGroup", ThisKey="companyGroupCode", OtherKey="companyGroupCode", IsForeignKey=true)]
		public companyGroup companyGroup
		{
			get
			{
				return this._companyGroup.Entity;
			}
			set
			{
				companyGroup previousValue = this._companyGroup.Entity;
				if (((previousValue != value) 
							|| (this._companyGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._companyGroup.Entity = null;
						previousValue.companyGroupForItems.Remove(this);
					}
					this._companyGroup.Entity = value;
					if ((value != null))
					{
						value.companyGroupForItems.Add(this);
						this._companyGroupCode = value.companyGroupCode;
					}
					else
					{
						this._companyGroupCode = default(string);
					}
					this.SendPropertyChanged("companyGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.companySection")]
	public partial class companySection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CompanyCode;
		
		private string _CompanySectionCode;
		
		private EntityRef<company> _company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnCompanySectionCodeChanging(string value);
    partial void OnCompanySectionCodeChanged();
    #endregion
		
		public companySection()
		{
			this._company = default(EntityRef<company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					if (this._company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanySectionCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompanySectionCode
		{
			get
			{
				return this._CompanySectionCode;
			}
			set
			{
				if ((this._CompanySectionCode != value))
				{
					this.OnCompanySectionCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanySectionCode = value;
					this.SendPropertyChanged("CompanySectionCode");
					this.OnCompanySectionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_companySection", Storage="_company", ThisKey="CompanyCode", OtherKey="companyCode", IsForeignKey=true)]
		public company company
		{
			get
			{
				return this._company.Entity;
			}
			set
			{
				company previousValue = this._company.Entity;
				if (((previousValue != value) 
							|| (this._company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._company.Entity = null;
						previousValue.companySections.Remove(this);
					}
					this._company.Entity = value;
					if ((value != null))
					{
						value.companySections.Add(this);
						this._CompanyCode = value.companyCode;
					}
					else
					{
						this._CompanyCode = default(string);
					}
					this.SendPropertyChanged("company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.contactPerson")]
	public partial class contactPerson : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _contactPersonId;
		
		private string _contactPersonCode;
		
		private int _businessPartnerId;
		
		private string _firstName;
		
		private string _lastName;
		
		private string _eMail;
		
		private string _gender;
		
		private string _telephoneNumber1;
		
		private string _telephoneNumber2;
		
		private System.Nullable<System.DateTime> _birthDate;
		
		private string _title;
		
		private System.Nullable<System.Guid> _userId;
		
		private bool _isWebContact;
		
		private EntitySet<contactPersonProject> _contactPersonProjects;
		
		private EntitySet<businessPartner> _businessPartners;
		
		private EntitySet<certificateDownloaded> _certificateDownloadeds;
		
		private EntitySet<usageReport> _usageReports;
		
		private EntityRef<User> _User;
		
		private EntityRef<businessPartner> _businessPartner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncontactPersonIdChanging(int value);
    partial void OncontactPersonIdChanged();
    partial void OncontactPersonCodeChanging(string value);
    partial void OncontactPersonCodeChanged();
    partial void OnbusinessPartnerIdChanging(int value);
    partial void OnbusinessPartnerIdChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OneMailChanging(string value);
    partial void OneMailChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OntelephoneNumber1Changing(string value);
    partial void OntelephoneNumber1Changed();
    partial void OntelephoneNumber2Changing(string value);
    partial void OntelephoneNumber2Changed();
    partial void OnbirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthDateChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnuserIdChanging(System.Nullable<System.Guid> value);
    partial void OnuserIdChanged();
    partial void OnisWebContactChanging(bool value);
    partial void OnisWebContactChanged();
    #endregion
		
		public contactPerson()
		{
			this._contactPersonProjects = new EntitySet<contactPersonProject>(new Action<contactPersonProject>(this.attach_contactPersonProjects), new Action<contactPersonProject>(this.detach_contactPersonProjects));
			this._businessPartners = new EntitySet<businessPartner>(new Action<businessPartner>(this.attach_businessPartners), new Action<businessPartner>(this.detach_businessPartners));
			this._certificateDownloadeds = new EntitySet<certificateDownloaded>(new Action<certificateDownloaded>(this.attach_certificateDownloadeds), new Action<certificateDownloaded>(this.detach_certificateDownloadeds));
			this._usageReports = new EntitySet<usageReport>(new Action<usageReport>(this.attach_usageReports), new Action<usageReport>(this.detach_usageReports));
			this._User = default(EntityRef<User>);
			this._businessPartner = default(EntityRef<businessPartner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactPersonId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int contactPersonId
		{
			get
			{
				return this._contactPersonId;
			}
			set
			{
				if ((this._contactPersonId != value))
				{
					this.OncontactPersonIdChanging(value);
					this.SendPropertyChanging();
					this._contactPersonId = value;
					this.SendPropertyChanged("contactPersonId");
					this.OncontactPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactPersonCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string contactPersonCode
		{
			get
			{
				return this._contactPersonCode;
			}
			set
			{
				if ((this._contactPersonCode != value))
				{
					this.OncontactPersonCodeChanging(value);
					this.SendPropertyChanging();
					this._contactPersonCode = value;
					this.SendPropertyChanged("contactPersonCode");
					this.OncontactPersonCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessPartnerId", DbType="Int NOT NULL")]
		public int businessPartnerId
		{
			get
			{
				return this._businessPartnerId;
			}
			set
			{
				if ((this._businessPartnerId != value))
				{
					if (this._businessPartner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbusinessPartnerIdChanging(value);
					this.SendPropertyChanging();
					this._businessPartnerId = value;
					this.SendPropertyChanged("businessPartnerId");
					this.OnbusinessPartnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="VarChar(255)")]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="VarChar(255)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eMail", DbType="VarChar(255)")]
		public string eMail
		{
			get
			{
				return this._eMail;
			}
			set
			{
				if ((this._eMail != value))
				{
					this.OneMailChanging(value);
					this.SendPropertyChanging();
					this._eMail = value;
					this.SendPropertyChanged("eMail");
					this.OneMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(2)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephoneNumber1", DbType="VarChar(255)")]
		public string telephoneNumber1
		{
			get
			{
				return this._telephoneNumber1;
			}
			set
			{
				if ((this._telephoneNumber1 != value))
				{
					this.OntelephoneNumber1Changing(value);
					this.SendPropertyChanging();
					this._telephoneNumber1 = value;
					this.SendPropertyChanged("telephoneNumber1");
					this.OntelephoneNumber1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephoneNumber2", DbType="VarChar(255)")]
		public string telephoneNumber2
		{
			get
			{
				return this._telephoneNumber2;
			}
			set
			{
				if ((this._telephoneNumber2 != value))
				{
					this.OntelephoneNumber2Changing(value);
					this.SendPropertyChanging();
					this._telephoneNumber2 = value;
					this.SendPropertyChanged("telephoneNumber2");
					this.OntelephoneNumber2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthDate", DbType="Date")]
		public System.Nullable<System.DateTime> birthDate
		{
			get
			{
				return this._birthDate;
			}
			set
			{
				if ((this._birthDate != value))
				{
					this.OnbirthDateChanging(value);
					this.SendPropertyChanging();
					this._birthDate = value;
					this.SendPropertyChanged("birthDate");
					this.OnbirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(255)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isWebContact", DbType="Bit NOT NULL")]
		public bool isWebContact
		{
			get
			{
				return this._isWebContact;
			}
			set
			{
				if ((this._isWebContact != value))
				{
					this.OnisWebContactChanging(value);
					this.SendPropertyChanging();
					this._isWebContact = value;
					this.SendPropertyChanged("isWebContact");
					this.OnisWebContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contactPerson_contactPersonProject", Storage="_contactPersonProjects", ThisKey="contactPersonId", OtherKey="contactPersonId")]
		public EntitySet<contactPersonProject> contactPersonProjects
		{
			get
			{
				return this._contactPersonProjects;
			}
			set
			{
				this._contactPersonProjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contactPerson_businessPartner", Storage="_businessPartners", ThisKey="contactPersonId", OtherKey="defaultContactPersonId")]
		public EntitySet<businessPartner> businessPartners
		{
			get
			{
				return this._businessPartners;
			}
			set
			{
				this._businessPartners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contactPerson_certificateDownloaded", Storage="_certificateDownloadeds", ThisKey="contactPersonId", OtherKey="contactPersonId")]
		public EntitySet<certificateDownloaded> certificateDownloadeds
		{
			get
			{
				return this._certificateDownloadeds;
			}
			set
			{
				this._certificateDownloadeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contactPerson_usageReport", Storage="_usageReports", ThisKey="contactPersonId", OtherKey="contactPersonId")]
		public EntitySet<usageReport> usageReports
		{
			get
			{
				return this._usageReports;
			}
			set
			{
				this._usageReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_contactPerson", Storage="_User", ThisKey="userId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.contactPersons.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.contactPersons.Add(this);
						this._userId = value.UserId;
					}
					else
					{
						this._userId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_contactPerson", Storage="_businessPartner", ThisKey="businessPartnerId", OtherKey="businessPartnerId", IsForeignKey=true)]
		public businessPartner businessPartner
		{
			get
			{
				return this._businessPartner.Entity;
			}
			set
			{
				businessPartner previousValue = this._businessPartner.Entity;
				if (((previousValue != value) 
							|| (this._businessPartner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._businessPartner.Entity = null;
						previousValue.contactPersons.Remove(this);
					}
					this._businessPartner.Entity = value;
					if ((value != null))
					{
						value.contactPersons.Add(this);
						this._businessPartnerId = value.businessPartnerId;
					}
					else
					{
						this._businessPartnerId = default(int);
					}
					this.SendPropertyChanged("businessPartner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contactPersonProjects(contactPersonProject entity)
		{
			this.SendPropertyChanging();
			entity.contactPerson = this;
		}
		
		private void detach_contactPersonProjects(contactPersonProject entity)
		{
			this.SendPropertyChanging();
			entity.contactPerson = null;
		}
		
		private void attach_businessPartners(businessPartner entity)
		{
			this.SendPropertyChanging();
			entity.contactPerson = this;
		}
		
		private void detach_businessPartners(businessPartner entity)
		{
			this.SendPropertyChanging();
			entity.contactPerson = null;
		}
		
		private void attach_certificateDownloadeds(certificateDownloaded entity)
		{
			this.SendPropertyChanging();
			entity.contactPerson = this;
		}
		
		private void detach_certificateDownloadeds(certificateDownloaded entity)
		{
			this.SendPropertyChanging();
			entity.contactPerson = null;
		}
		
		private void attach_usageReports(usageReport entity)
		{
			this.SendPropertyChanging();
			entity.contactPerson = this;
		}
		
		private void detach_usageReports(usageReport entity)
		{
			this.SendPropertyChanging();
			entity.contactPerson = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.contactPersonProject")]
	public partial class contactPersonProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _projectCode;
		
		private int _contactPersonId;
		
		private EntityRef<contactPerson> _contactPerson;
		
		private EntityRef<project> _project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojectCodeChanging(string value);
    partial void OnprojectCodeChanged();
    partial void OncontactPersonIdChanging(int value);
    partial void OncontactPersonIdChanged();
    #endregion
		
		public contactPersonProject()
		{
			this._contactPerson = default(EntityRef<contactPerson>);
			this._project = default(EntityRef<project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string projectCode
		{
			get
			{
				return this._projectCode;
			}
			set
			{
				if ((this._projectCode != value))
				{
					if (this._project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectCodeChanging(value);
					this.SendPropertyChanging();
					this._projectCode = value;
					this.SendPropertyChanged("projectCode");
					this.OnprojectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactPersonId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int contactPersonId
		{
			get
			{
				return this._contactPersonId;
			}
			set
			{
				if ((this._contactPersonId != value))
				{
					if (this._contactPerson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncontactPersonIdChanging(value);
					this.SendPropertyChanging();
					this._contactPersonId = value;
					this.SendPropertyChanged("contactPersonId");
					this.OncontactPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contactPerson_contactPersonProject", Storage="_contactPerson", ThisKey="contactPersonId", OtherKey="contactPersonId", IsForeignKey=true)]
		public contactPerson contactPerson
		{
			get
			{
				return this._contactPerson.Entity;
			}
			set
			{
				contactPerson previousValue = this._contactPerson.Entity;
				if (((previousValue != value) 
							|| (this._contactPerson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._contactPerson.Entity = null;
						previousValue.contactPersonProjects.Remove(this);
					}
					this._contactPerson.Entity = value;
					if ((value != null))
					{
						value.contactPersonProjects.Add(this);
						this._contactPersonId = value.contactPersonId;
					}
					else
					{
						this._contactPersonId = default(int);
					}
					this.SendPropertyChanged("contactPerson");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_contactPersonProject", Storage="_project", ThisKey="projectCode", OtherKey="projectCode", IsForeignKey=true)]
		public project project
		{
			get
			{
				return this._project.Entity;
			}
			set
			{
				project previousValue = this._project.Entity;
				if (((previousValue != value) 
							|| (this._project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project.Entity = null;
						previousValue.contactPersonProjects.Remove(this);
					}
					this._project.Entity = value;
					if ((value != null))
					{
						value.contactPersonProjects.Add(this);
						this._projectCode = value.projectCode;
					}
					else
					{
						this._projectCode = default(string);
					}
					this.SendPropertyChanged("project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.country")]
	public partial class country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _countryCode;
		
		private string _description;
		
		private EntitySet<businessPartner> _businessPartners;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncountryCodeChanging(string value);
    partial void OncountryCodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public country()
		{
			this._businessPartners = new EntitySet<businessPartner>(new Action<businessPartner>(this.attach_businessPartners), new Action<businessPartner>(this.detach_businessPartners));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string countryCode
		{
			get
			{
				return this._countryCode;
			}
			set
			{
				if ((this._countryCode != value))
				{
					this.OncountryCodeChanging(value);
					this.SendPropertyChanging();
					this._countryCode = value;
					this.SendPropertyChanged("countryCode");
					this.OncountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="country_businessPartner", Storage="_businessPartners", ThisKey="countryCode", OtherKey="countryCode")]
		public EntitySet<businessPartner> businessPartners
		{
			get
			{
				return this._businessPartners;
			}
			set
			{
				this._businessPartners.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_businessPartners(businessPartner entity)
		{
			this.SendPropertyChanging();
			entity.country = this;
		}
		
		private void detach_businessPartners(businessPartner entity)
		{
			this.SendPropertyChanging();
			entity.country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.currency")]
	public partial class currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _currencyCode;
		
		private string _description;
		
		private EntitySet<company> _companies;
		
		private EntitySet<goodsReceipt> _goodsReceipts;
		
		private EntitySet<purchaseOrder> _purchaseOrders;
		
		private EntitySet<salesOrder> _salesOrders;
		
		private EntitySet<delivery> _deliveries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncurrencyCodeChanging(string value);
    partial void OncurrencyCodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public currency()
		{
			this._companies = new EntitySet<company>(new Action<company>(this.attach_companies), new Action<company>(this.detach_companies));
			this._goodsReceipts = new EntitySet<goodsReceipt>(new Action<goodsReceipt>(this.attach_goodsReceipts), new Action<goodsReceipt>(this.detach_goodsReceipts));
			this._purchaseOrders = new EntitySet<purchaseOrder>(new Action<purchaseOrder>(this.attach_purchaseOrders), new Action<purchaseOrder>(this.detach_purchaseOrders));
			this._salesOrders = new EntitySet<salesOrder>(new Action<salesOrder>(this.attach_salesOrders), new Action<salesOrder>(this.detach_salesOrders));
			this._deliveries = new EntitySet<delivery>(new Action<delivery>(this.attach_deliveries), new Action<delivery>(this.detach_deliveries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyCode", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string currencyCode
		{
			get
			{
				return this._currencyCode;
			}
			set
			{
				if ((this._currencyCode != value))
				{
					this.OncurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._currencyCode = value;
					this.SendPropertyChanged("currencyCode");
					this.OncurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="currency_company", Storage="_companies", ThisKey="currencyCode", OtherKey="currencyCode")]
		public EntitySet<company> companies
		{
			get
			{
				return this._companies;
			}
			set
			{
				this._companies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="currency_goodsReceipt", Storage="_goodsReceipts", ThisKey="currencyCode", OtherKey="currencyCode")]
		public EntitySet<goodsReceipt> goodsReceipts
		{
			get
			{
				return this._goodsReceipts;
			}
			set
			{
				this._goodsReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="currency_purchaseOrder", Storage="_purchaseOrders", ThisKey="currencyCode", OtherKey="currencyCode")]
		public EntitySet<purchaseOrder> purchaseOrders
		{
			get
			{
				return this._purchaseOrders;
			}
			set
			{
				this._purchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="currency_salesOrder", Storage="_salesOrders", ThisKey="currencyCode", OtherKey="currencyCode")]
		public EntitySet<salesOrder> salesOrders
		{
			get
			{
				return this._salesOrders;
			}
			set
			{
				this._salesOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="currency_delivery", Storage="_deliveries", ThisKey="currencyCode", OtherKey="currencyCode")]
		public EntitySet<delivery> deliveries
		{
			get
			{
				return this._deliveries;
			}
			set
			{
				this._deliveries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_companies(company entity)
		{
			this.SendPropertyChanging();
			entity.currency = this;
		}
		
		private void detach_companies(company entity)
		{
			this.SendPropertyChanging();
			entity.currency = null;
		}
		
		private void attach_goodsReceipts(goodsReceipt entity)
		{
			this.SendPropertyChanging();
			entity.currency = this;
		}
		
		private void detach_goodsReceipts(goodsReceipt entity)
		{
			this.SendPropertyChanging();
			entity.currency = null;
		}
		
		private void attach_purchaseOrders(purchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.currency = this;
		}
		
		private void detach_purchaseOrders(purchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.currency = null;
		}
		
		private void attach_salesOrders(salesOrder entity)
		{
			this.SendPropertyChanging();
			entity.currency = this;
		}
		
		private void detach_salesOrders(salesOrder entity)
		{
			this.SendPropertyChanging();
			entity.currency = null;
		}
		
		private void attach_deliveries(delivery entity)
		{
			this.SendPropertyChanging();
			entity.currency = this;
		}
		
		private void detach_deliveries(delivery entity)
		{
			this.SendPropertyChanging();
			entity.currency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.docStatus")]
	public partial class docStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _docStatusCode;
		
		private string _description;
		
		private EntitySet<goodsReceipt> _goodsReceipts;
		
		private EntitySet<purchaseOrder> _purchaseOrders;
		
		private EntitySet<salesOrder> _salesOrders;
		
		private EntitySet<delivery> _deliveries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndocStatusCodeChanging(string value);
    partial void OndocStatusCodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public docStatus()
		{
			this._goodsReceipts = new EntitySet<goodsReceipt>(new Action<goodsReceipt>(this.attach_goodsReceipts), new Action<goodsReceipt>(this.detach_goodsReceipts));
			this._purchaseOrders = new EntitySet<purchaseOrder>(new Action<purchaseOrder>(this.attach_purchaseOrders), new Action<purchaseOrder>(this.detach_purchaseOrders));
			this._salesOrders = new EntitySet<salesOrder>(new Action<salesOrder>(this.attach_salesOrders), new Action<salesOrder>(this.detach_salesOrders));
			this._deliveries = new EntitySet<delivery>(new Action<delivery>(this.attach_deliveries), new Action<delivery>(this.detach_deliveries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docStatusCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string docStatusCode
		{
			get
			{
				return this._docStatusCode;
			}
			set
			{
				if ((this._docStatusCode != value))
				{
					this.OndocStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._docStatusCode = value;
					this.SendPropertyChanged("docStatusCode");
					this.OndocStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="docStatus_goodsReceipt", Storage="_goodsReceipts", ThisKey="docStatusCode", OtherKey="docStatusCode")]
		public EntitySet<goodsReceipt> goodsReceipts
		{
			get
			{
				return this._goodsReceipts;
			}
			set
			{
				this._goodsReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="docStatus_purchaseOrder", Storage="_purchaseOrders", ThisKey="docStatusCode", OtherKey="docStatusCode")]
		public EntitySet<purchaseOrder> purchaseOrders
		{
			get
			{
				return this._purchaseOrders;
			}
			set
			{
				this._purchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="docStatus_salesOrder", Storage="_salesOrders", ThisKey="docStatusCode", OtherKey="docStatusCode")]
		public EntitySet<salesOrder> salesOrders
		{
			get
			{
				return this._salesOrders;
			}
			set
			{
				this._salesOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="docStatus_delivery", Storage="_deliveries", ThisKey="docStatusCode", OtherKey="docStatusCode")]
		public EntitySet<delivery> deliveries
		{
			get
			{
				return this._deliveries;
			}
			set
			{
				this._deliveries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_goodsReceipts(goodsReceipt entity)
		{
			this.SendPropertyChanging();
			entity.docStatus = this;
		}
		
		private void detach_goodsReceipts(goodsReceipt entity)
		{
			this.SendPropertyChanging();
			entity.docStatus = null;
		}
		
		private void attach_purchaseOrders(purchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.docStatus = this;
		}
		
		private void detach_purchaseOrders(purchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.docStatus = null;
		}
		
		private void attach_salesOrders(salesOrder entity)
		{
			this.SendPropertyChanging();
			entity.docStatus = this;
		}
		
		private void detach_salesOrders(salesOrder entity)
		{
			this.SendPropertyChanging();
			entity.docStatus = null;
		}
		
		private void attach_deliveries(delivery entity)
		{
			this.SendPropertyChanging();
			entity.docStatus = this;
		}
		
		private void detach_deliveries(delivery entity)
		{
			this.SendPropertyChanging();
			entity.docStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.document")]
	public partial class document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _docType;
		
		private string _description;
		
		private EntitySet<batchDocument> _batchDocuments;
		
		private EntitySet<colliLine> _colliLines;
		
		private EntitySet<goodsReceipt> _goodsReceipts;
		
		private EntitySet<goodsReceiptLine> _goodsReceiptLines;
		
		private EntitySet<goodsReceiptLine> _goodsReceiptLines1;
		
		private EntitySet<inspection> _inspections;
		
		private EntitySet<inspectionLine> _inspectionLines;
		
		private EntitySet<purchaseOrder> _purchaseOrders;
		
		private EntitySet<purchaseOrderLine> _purchaseOrderLines;
		
		private EntitySet<salesOrder> _salesOrders;
		
		private EntitySet<transport> _transports;
		
		private EntitySet<delivery> _deliveries;
		
		private EntitySet<certificateDownloaded> _certificateDownloadeds;
		
		private EntitySet<salesOrderLine> _salesOrderLines;
		
		private EntitySet<deliveryLine> _deliveryLines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndocTypeChanging(string value);
    partial void OndocTypeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public document()
		{
			this._batchDocuments = new EntitySet<batchDocument>(new Action<batchDocument>(this.attach_batchDocuments), new Action<batchDocument>(this.detach_batchDocuments));
			this._colliLines = new EntitySet<colliLine>(new Action<colliLine>(this.attach_colliLines), new Action<colliLine>(this.detach_colliLines));
			this._goodsReceipts = new EntitySet<goodsReceipt>(new Action<goodsReceipt>(this.attach_goodsReceipts), new Action<goodsReceipt>(this.detach_goodsReceipts));
			this._goodsReceiptLines = new EntitySet<goodsReceiptLine>(new Action<goodsReceiptLine>(this.attach_goodsReceiptLines), new Action<goodsReceiptLine>(this.detach_goodsReceiptLines));
			this._goodsReceiptLines1 = new EntitySet<goodsReceiptLine>(new Action<goodsReceiptLine>(this.attach_goodsReceiptLines1), new Action<goodsReceiptLine>(this.detach_goodsReceiptLines1));
			this._inspections = new EntitySet<inspection>(new Action<inspection>(this.attach_inspections), new Action<inspection>(this.detach_inspections));
			this._inspectionLines = new EntitySet<inspectionLine>(new Action<inspectionLine>(this.attach_inspectionLines), new Action<inspectionLine>(this.detach_inspectionLines));
			this._purchaseOrders = new EntitySet<purchaseOrder>(new Action<purchaseOrder>(this.attach_purchaseOrders), new Action<purchaseOrder>(this.detach_purchaseOrders));
			this._purchaseOrderLines = new EntitySet<purchaseOrderLine>(new Action<purchaseOrderLine>(this.attach_purchaseOrderLines), new Action<purchaseOrderLine>(this.detach_purchaseOrderLines));
			this._salesOrders = new EntitySet<salesOrder>(new Action<salesOrder>(this.attach_salesOrders), new Action<salesOrder>(this.detach_salesOrders));
			this._transports = new EntitySet<transport>(new Action<transport>(this.attach_transports), new Action<transport>(this.detach_transports));
			this._deliveries = new EntitySet<delivery>(new Action<delivery>(this.attach_deliveries), new Action<delivery>(this.detach_deliveries));
			this._certificateDownloadeds = new EntitySet<certificateDownloaded>(new Action<certificateDownloaded>(this.attach_certificateDownloadeds), new Action<certificateDownloaded>(this.detach_certificateDownloadeds));
			this._salesOrderLines = new EntitySet<salesOrderLine>(new Action<salesOrderLine>(this.attach_salesOrderLines), new Action<salesOrderLine>(this.detach_salesOrderLines));
			this._deliveryLines = new EntitySet<deliveryLine>(new Action<deliveryLine>(this.attach_deliveryLines), new Action<deliveryLine>(this.detach_deliveryLines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docType", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string docType
		{
			get
			{
				return this._docType;
			}
			set
			{
				if ((this._docType != value))
				{
					this.OndocTypeChanging(value);
					this.SendPropertyChanging();
					this._docType = value;
					this.SendPropertyChanged("docType");
					this.OndocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_batchDocument", Storage="_batchDocuments", ThisKey="docType", OtherKey="baseDocType")]
		public EntitySet<batchDocument> batchDocuments
		{
			get
			{
				return this._batchDocuments;
			}
			set
			{
				this._batchDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_colliLine", Storage="_colliLines", ThisKey="docType", OtherKey="baseDocType")]
		public EntitySet<colliLine> colliLines
		{
			get
			{
				return this._colliLines;
			}
			set
			{
				this._colliLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_goodsReceipt", Storage="_goodsReceipts", ThisKey="docType", OtherKey="docType")]
		public EntitySet<goodsReceipt> goodsReceipts
		{
			get
			{
				return this._goodsReceipts;
			}
			set
			{
				this._goodsReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_goodsReceiptLine", Storage="_goodsReceiptLines", ThisKey="docType", OtherKey="docType")]
		public EntitySet<goodsReceiptLine> goodsReceiptLines
		{
			get
			{
				return this._goodsReceiptLines;
			}
			set
			{
				this._goodsReceiptLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_goodsReceiptLine1", Storage="_goodsReceiptLines1", ThisKey="docType", OtherKey="baseDocType")]
		public EntitySet<goodsReceiptLine> goodsReceiptLines1
		{
			get
			{
				return this._goodsReceiptLines1;
			}
			set
			{
				this._goodsReceiptLines1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_inspection", Storage="_inspections", ThisKey="docType", OtherKey="docType")]
		public EntitySet<inspection> inspections
		{
			get
			{
				return this._inspections;
			}
			set
			{
				this._inspections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_inspectionLine", Storage="_inspectionLines", ThisKey="docType", OtherKey="baseDocType")]
		public EntitySet<inspectionLine> inspectionLines
		{
			get
			{
				return this._inspectionLines;
			}
			set
			{
				this._inspectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_purchaseOrder", Storage="_purchaseOrders", ThisKey="docType", OtherKey="docType")]
		public EntitySet<purchaseOrder> purchaseOrders
		{
			get
			{
				return this._purchaseOrders;
			}
			set
			{
				this._purchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_purchaseOrderLine", Storage="_purchaseOrderLines", ThisKey="docType", OtherKey="docType")]
		public EntitySet<purchaseOrderLine> purchaseOrderLines
		{
			get
			{
				return this._purchaseOrderLines;
			}
			set
			{
				this._purchaseOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_salesOrder", Storage="_salesOrders", ThisKey="docType", OtherKey="docType")]
		public EntitySet<salesOrder> salesOrders
		{
			get
			{
				return this._salesOrders;
			}
			set
			{
				this._salesOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_transport", Storage="_transports", ThisKey="docType", OtherKey="baseDocType")]
		public EntitySet<transport> transports
		{
			get
			{
				return this._transports;
			}
			set
			{
				this._transports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_delivery", Storage="_deliveries", ThisKey="docType", OtherKey="docType")]
		public EntitySet<delivery> deliveries
		{
			get
			{
				return this._deliveries;
			}
			set
			{
				this._deliveries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_certificateDownloaded", Storage="_certificateDownloadeds", ThisKey="docType", OtherKey="baseDocType")]
		public EntitySet<certificateDownloaded> certificateDownloadeds
		{
			get
			{
				return this._certificateDownloadeds;
			}
			set
			{
				this._certificateDownloadeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_salesOrderLine", Storage="_salesOrderLines", ThisKey="docType", OtherKey="docType")]
		public EntitySet<salesOrderLine> salesOrderLines
		{
			get
			{
				return this._salesOrderLines;
			}
			set
			{
				this._salesOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_deliveryLine", Storage="_deliveryLines", ThisKey="docType", OtherKey="docType")]
		public EntitySet<deliveryLine> deliveryLines
		{
			get
			{
				return this._deliveryLines;
			}
			set
			{
				this._deliveryLines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_batchDocuments(batchDocument entity)
		{
			this.SendPropertyChanging();
			entity.document = this;
		}
		
		private void detach_batchDocuments(batchDocument entity)
		{
			this.SendPropertyChanging();
			entity.document = null;
		}
		
		private void attach_colliLines(colliLine entity)
		{
			this.SendPropertyChanging();
			entity.document = this;
		}
		
		private void detach_colliLines(colliLine entity)
		{
			this.SendPropertyChanging();
			entity.document = null;
		}
		
		private void attach_goodsReceipts(goodsReceipt entity)
		{
			this.SendPropertyChanging();
			entity.document = this;
		}
		
		private void detach_goodsReceipts(goodsReceipt entity)
		{
			this.SendPropertyChanging();
			entity.document = null;
		}
		
		private void attach_goodsReceiptLines(goodsReceiptLine entity)
		{
			this.SendPropertyChanging();
			entity.document = this;
		}
		
		private void detach_goodsReceiptLines(goodsReceiptLine entity)
		{
			this.SendPropertyChanging();
			entity.document = null;
		}
		
		private void attach_goodsReceiptLines1(goodsReceiptLine entity)
		{
			this.SendPropertyChanging();
			entity.document1 = this;
		}
		
		private void detach_goodsReceiptLines1(goodsReceiptLine entity)
		{
			this.SendPropertyChanging();
			entity.document1 = null;
		}
		
		private void attach_inspections(inspection entity)
		{
			this.SendPropertyChanging();
			entity.document = this;
		}
		
		private void detach_inspections(inspection entity)
		{
			this.SendPropertyChanging();
			entity.document = null;
		}
		
		private void attach_inspectionLines(inspectionLine entity)
		{
			this.SendPropertyChanging();
			entity.document = this;
		}
		
		private void detach_inspectionLines(inspectionLine entity)
		{
			this.SendPropertyChanging();
			entity.document = null;
		}
		
		private void attach_purchaseOrders(purchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.document = this;
		}
		
		private void detach_purchaseOrders(purchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.document = null;
		}
		
		private void attach_purchaseOrderLines(purchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.document = this;
		}
		
		private void detach_purchaseOrderLines(purchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.document = null;
		}
		
		private void attach_salesOrders(salesOrder entity)
		{
			this.SendPropertyChanging();
			entity.document = this;
		}
		
		private void detach_salesOrders(salesOrder entity)
		{
			this.SendPropertyChanging();
			entity.document = null;
		}
		
		private void attach_transports(transport entity)
		{
			this.SendPropertyChanging();
			entity.document = this;
		}
		
		private void detach_transports(transport entity)
		{
			this.SendPropertyChanging();
			entity.document = null;
		}
		
		private void attach_deliveries(delivery entity)
		{
			this.SendPropertyChanging();
			entity.document = this;
		}
		
		private void detach_deliveries(delivery entity)
		{
			this.SendPropertyChanging();
			entity.document = null;
		}
		
		private void attach_certificateDownloadeds(certificateDownloaded entity)
		{
			this.SendPropertyChanging();
			entity.document = this;
		}
		
		private void detach_certificateDownloadeds(certificateDownloaded entity)
		{
			this.SendPropertyChanging();
			entity.document = null;
		}
		
		private void attach_salesOrderLines(salesOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.document = this;
		}
		
		private void detach_salesOrderLines(salesOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.document = null;
		}
		
		private void attach_deliveryLines(deliveryLine entity)
		{
			this.SendPropertyChanging();
			entity.document = this;
		}
		
		private void detach_deliveryLines(deliveryLine entity)
		{
			this.SendPropertyChanging();
			entity.document = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.goodsReceipt")]
	public partial class goodsReceipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _docId;
		
		private string _documentNumber;
		
		private string _companyCode;
		
		private int _businessPartnerId;
		
		private System.DateTime _timeStampCreated;
		
		private System.Nullable<System.DateTime> _timeStampLastUpdate;
		
		private string _docType;
		
		private System.DateTime _docDate;
		
		private string _projectCode;
		
		private System.DateTime _createDate;
		
		private string _docStatusCode;
		
		private System.Nullable<System.DateTime> _receiptDate;
		
		private string _currencyCode;
		
		private System.Nullable<decimal> _currencyRate;
		
		private EntitySet<goodsReceiptLine> _goodsReceiptLines;
		
		private EntityRef<company> _company;
		
		private EntityRef<currency> _currency;
		
		private EntityRef<docStatus> _docStatus;
		
		private EntityRef<document> _document;
		
		private EntityRef<project> _project;
		
		private EntityRef<businessPartner> _businessPartner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndocIdChanging(int value);
    partial void OndocIdChanged();
    partial void OndocumentNumberChanging(string value);
    partial void OndocumentNumberChanged();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    partial void OnbusinessPartnerIdChanging(int value);
    partial void OnbusinessPartnerIdChanged();
    partial void OntimeStampCreatedChanging(System.DateTime value);
    partial void OntimeStampCreatedChanged();
    partial void OntimeStampLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OntimeStampLastUpdateChanged();
    partial void OndocTypeChanging(string value);
    partial void OndocTypeChanged();
    partial void OndocDateChanging(System.DateTime value);
    partial void OndocDateChanged();
    partial void OnprojectCodeChanging(string value);
    partial void OnprojectCodeChanged();
    partial void OncreateDateChanging(System.DateTime value);
    partial void OncreateDateChanged();
    partial void OndocStatusCodeChanging(string value);
    partial void OndocStatusCodeChanged();
    partial void OnreceiptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnreceiptDateChanged();
    partial void OncurrencyCodeChanging(string value);
    partial void OncurrencyCodeChanged();
    partial void OncurrencyRateChanging(System.Nullable<decimal> value);
    partial void OncurrencyRateChanged();
    #endregion
		
		public goodsReceipt()
		{
			this._goodsReceiptLines = new EntitySet<goodsReceiptLine>(new Action<goodsReceiptLine>(this.attach_goodsReceiptLines), new Action<goodsReceiptLine>(this.detach_goodsReceiptLines));
			this._company = default(EntityRef<company>);
			this._currency = default(EntityRef<currency>);
			this._docStatus = default(EntityRef<docStatus>);
			this._document = default(EntityRef<document>);
			this._project = default(EntityRef<project>);
			this._businessPartner = default(EntityRef<businessPartner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int docId
		{
			get
			{
				return this._docId;
			}
			set
			{
				if ((this._docId != value))
				{
					this.OndocIdChanging(value);
					this.SendPropertyChanging();
					this._docId = value;
					this.SendPropertyChanged("docId");
					this.OndocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string documentNumber
		{
			get
			{
				return this._documentNumber;
			}
			set
			{
				if ((this._documentNumber != value))
				{
					this.OndocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._documentNumber = value;
					this.SendPropertyChanged("documentNumber");
					this.OndocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					if (this._company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessPartnerId", DbType="Int NOT NULL")]
		public int businessPartnerId
		{
			get
			{
				return this._businessPartnerId;
			}
			set
			{
				if ((this._businessPartnerId != value))
				{
					if (this._businessPartner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbusinessPartnerIdChanging(value);
					this.SendPropertyChanging();
					this._businessPartnerId = value;
					this.SendPropertyChanged("businessPartnerId");
					this.OnbusinessPartnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStampCreated", DbType="DateTime NOT NULL")]
		public System.DateTime timeStampCreated
		{
			get
			{
				return this._timeStampCreated;
			}
			set
			{
				if ((this._timeStampCreated != value))
				{
					this.OntimeStampCreatedChanging(value);
					this.SendPropertyChanging();
					this._timeStampCreated = value;
					this.SendPropertyChanged("timeStampCreated");
					this.OntimeStampCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStampLastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> timeStampLastUpdate
		{
			get
			{
				return this._timeStampLastUpdate;
			}
			set
			{
				if ((this._timeStampLastUpdate != value))
				{
					this.OntimeStampLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._timeStampLastUpdate = value;
					this.SendPropertyChanged("timeStampLastUpdate");
					this.OntimeStampLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string docType
		{
			get
			{
				return this._docType;
			}
			set
			{
				if ((this._docType != value))
				{
					if (this._document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndocTypeChanging(value);
					this.SendPropertyChanging();
					this._docType = value;
					this.SendPropertyChanged("docType");
					this.OndocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docDate", DbType="DateTime NOT NULL")]
		public System.DateTime docDate
		{
			get
			{
				return this._docDate;
			}
			set
			{
				if ((this._docDate != value))
				{
					this.OndocDateChanging(value);
					this.SendPropertyChanging();
					this._docDate = value;
					this.SendPropertyChanged("docDate");
					this.OndocDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectCode", DbType="NVarChar(50)")]
		public string projectCode
		{
			get
			{
				return this._projectCode;
			}
			set
			{
				if ((this._projectCode != value))
				{
					if (this._project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectCodeChanging(value);
					this.SendPropertyChanging();
					this._projectCode = value;
					this.SendPropertyChanged("projectCode");
					this.OnprojectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="DateTime NOT NULL")]
		public System.DateTime createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this.OncreateDateChanging(value);
					this.SendPropertyChanging();
					this._createDate = value;
					this.SendPropertyChanged("createDate");
					this.OncreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docStatusCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string docStatusCode
		{
			get
			{
				return this._docStatusCode;
			}
			set
			{
				if ((this._docStatusCode != value))
				{
					if (this._docStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndocStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._docStatusCode = value;
					this.SendPropertyChanged("docStatusCode");
					this.OndocStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiptDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> receiptDate
		{
			get
			{
				return this._receiptDate;
			}
			set
			{
				if ((this._receiptDate != value))
				{
					this.OnreceiptDateChanging(value);
					this.SendPropertyChanging();
					this._receiptDate = value;
					this.SendPropertyChanged("receiptDate");
					this.OnreceiptDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string currencyCode
		{
			get
			{
				return this._currencyCode;
			}
			set
			{
				if ((this._currencyCode != value))
				{
					if (this._currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._currencyCode = value;
					this.SendPropertyChanged("currencyCode");
					this.OncurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyRate", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> currencyRate
		{
			get
			{
				return this._currencyRate;
			}
			set
			{
				if ((this._currencyRate != value))
				{
					this.OncurrencyRateChanging(value);
					this.SendPropertyChanging();
					this._currencyRate = value;
					this.SendPropertyChanged("currencyRate");
					this.OncurrencyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="goodsReceipt_goodsReceiptLine", Storage="_goodsReceiptLines", ThisKey="docId", OtherKey="docId")]
		public EntitySet<goodsReceiptLine> goodsReceiptLines
		{
			get
			{
				return this._goodsReceiptLines;
			}
			set
			{
				this._goodsReceiptLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_goodsReceipt", Storage="_company", ThisKey="companyCode", OtherKey="companyCode", IsForeignKey=true)]
		public company company
		{
			get
			{
				return this._company.Entity;
			}
			set
			{
				company previousValue = this._company.Entity;
				if (((previousValue != value) 
							|| (this._company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._company.Entity = null;
						previousValue.goodsReceipts.Remove(this);
					}
					this._company.Entity = value;
					if ((value != null))
					{
						value.goodsReceipts.Add(this);
						this._companyCode = value.companyCode;
					}
					else
					{
						this._companyCode = default(string);
					}
					this.SendPropertyChanged("company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="currency_goodsReceipt", Storage="_currency", ThisKey="currencyCode", OtherKey="currencyCode", IsForeignKey=true)]
		public currency currency
		{
			get
			{
				return this._currency.Entity;
			}
			set
			{
				currency previousValue = this._currency.Entity;
				if (((previousValue != value) 
							|| (this._currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._currency.Entity = null;
						previousValue.goodsReceipts.Remove(this);
					}
					this._currency.Entity = value;
					if ((value != null))
					{
						value.goodsReceipts.Add(this);
						this._currencyCode = value.currencyCode;
					}
					else
					{
						this._currencyCode = default(string);
					}
					this.SendPropertyChanged("currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="docStatus_goodsReceipt", Storage="_docStatus", ThisKey="docStatusCode", OtherKey="docStatusCode", IsForeignKey=true)]
		public docStatus docStatus
		{
			get
			{
				return this._docStatus.Entity;
			}
			set
			{
				docStatus previousValue = this._docStatus.Entity;
				if (((previousValue != value) 
							|| (this._docStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._docStatus.Entity = null;
						previousValue.goodsReceipts.Remove(this);
					}
					this._docStatus.Entity = value;
					if ((value != null))
					{
						value.goodsReceipts.Add(this);
						this._docStatusCode = value.docStatusCode;
					}
					else
					{
						this._docStatusCode = default(string);
					}
					this.SendPropertyChanged("docStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_goodsReceipt", Storage="_document", ThisKey="docType", OtherKey="docType", IsForeignKey=true)]
		public document document
		{
			get
			{
				return this._document.Entity;
			}
			set
			{
				document previousValue = this._document.Entity;
				if (((previousValue != value) 
							|| (this._document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._document.Entity = null;
						previousValue.goodsReceipts.Remove(this);
					}
					this._document.Entity = value;
					if ((value != null))
					{
						value.goodsReceipts.Add(this);
						this._docType = value.docType;
					}
					else
					{
						this._docType = default(string);
					}
					this.SendPropertyChanged("document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_goodsReceipt", Storage="_project", ThisKey="projectCode", OtherKey="projectCode", IsForeignKey=true)]
		public project project
		{
			get
			{
				return this._project.Entity;
			}
			set
			{
				project previousValue = this._project.Entity;
				if (((previousValue != value) 
							|| (this._project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project.Entity = null;
						previousValue.goodsReceipts.Remove(this);
					}
					this._project.Entity = value;
					if ((value != null))
					{
						value.goodsReceipts.Add(this);
						this._projectCode = value.projectCode;
					}
					else
					{
						this._projectCode = default(string);
					}
					this.SendPropertyChanged("project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_goodsReceipt", Storage="_businessPartner", ThisKey="businessPartnerId", OtherKey="businessPartnerId", IsForeignKey=true)]
		public businessPartner businessPartner
		{
			get
			{
				return this._businessPartner.Entity;
			}
			set
			{
				businessPartner previousValue = this._businessPartner.Entity;
				if (((previousValue != value) 
							|| (this._businessPartner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._businessPartner.Entity = null;
						previousValue.goodsReceipts.Remove(this);
					}
					this._businessPartner.Entity = value;
					if ((value != null))
					{
						value.goodsReceipts.Add(this);
						this._businessPartnerId = value.businessPartnerId;
					}
					else
					{
						this._businessPartnerId = default(int);
					}
					this.SendPropertyChanged("businessPartner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_goodsReceiptLines(goodsReceiptLine entity)
		{
			this.SendPropertyChanging();
			entity.goodsReceipt = this;
		}
		
		private void detach_goodsReceiptLines(goodsReceiptLine entity)
		{
			this.SendPropertyChanging();
			entity.goodsReceipt = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.goodsReceiptLine")]
	public partial class goodsReceiptLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _docId;
		
		private int _lineNum;
		
		private int _itemId;
		
		private decimal _quantity;
		
		private string _uomCode;
		
		private string _uomCodeOrg;
		
		private decimal _weight;
		
		private decimal _price;
		
		private decimal _lineTotal;
		
		private string _lineTypeCode;
		
		private string _lineStatusCode;
		
		private System.DateTime _receiptDate;
		
		private string _docType;
		
		private int _baseDocId;
		
		private int _baseLineNum;
		
		private string _baseDocType;
		
		private EntityRef<document> _document;
		
		private EntityRef<document> _document1;
		
		private EntityRef<goodsReceipt> _goodsReceipt;
		
		private EntityRef<lineStatus> _lineStatus;
		
		private EntityRef<lineType> _lineType;
		
		private EntityRef<purchaseOrderLine> _purchaseOrderLine;
		
		private EntityRef<unitOfMeasure> _unitOfMeasure;
		
		private EntityRef<item> _item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndocIdChanging(int value);
    partial void OndocIdChanged();
    partial void OnlineNumChanging(int value);
    partial void OnlineNumChanged();
    partial void OnitemIdChanging(int value);
    partial void OnitemIdChanged();
    partial void OnquantityChanging(decimal value);
    partial void OnquantityChanged();
    partial void OnuomCodeChanging(string value);
    partial void OnuomCodeChanged();
    partial void OnuomCodeOrgChanging(string value);
    partial void OnuomCodeOrgChanged();
    partial void OnweightChanging(decimal value);
    partial void OnweightChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OnlineTotalChanging(decimal value);
    partial void OnlineTotalChanged();
    partial void OnlineTypeCodeChanging(string value);
    partial void OnlineTypeCodeChanged();
    partial void OnlineStatusCodeChanging(string value);
    partial void OnlineStatusCodeChanged();
    partial void OnreceiptDateChanging(System.DateTime value);
    partial void OnreceiptDateChanged();
    partial void OndocTypeChanging(string value);
    partial void OndocTypeChanged();
    partial void OnbaseDocIdChanging(int value);
    partial void OnbaseDocIdChanged();
    partial void OnbaseLineNumChanging(int value);
    partial void OnbaseLineNumChanged();
    partial void OnbaseDocTypeChanging(string value);
    partial void OnbaseDocTypeChanged();
    #endregion
		
		public goodsReceiptLine()
		{
			this._document = default(EntityRef<document>);
			this._document1 = default(EntityRef<document>);
			this._goodsReceipt = default(EntityRef<goodsReceipt>);
			this._lineStatus = default(EntityRef<lineStatus>);
			this._lineType = default(EntityRef<lineType>);
			this._purchaseOrderLine = default(EntityRef<purchaseOrderLine>);
			this._unitOfMeasure = default(EntityRef<unitOfMeasure>);
			this._item = default(EntityRef<item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int docId
		{
			get
			{
				return this._docId;
			}
			set
			{
				if ((this._docId != value))
				{
					if (this._goodsReceipt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndocIdChanging(value);
					this.SendPropertyChanging();
					this._docId = value;
					this.SendPropertyChanged("docId");
					this.OndocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int lineNum
		{
			get
			{
				return this._lineNum;
			}
			set
			{
				if ((this._lineNum != value))
				{
					this.OnlineNumChanging(value);
					this.SendPropertyChanging();
					this._lineNum = value;
					this.SendPropertyChanged("lineNum");
					this.OnlineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemId", DbType="Int NOT NULL")]
		public int itemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					if (this._item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnitemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("itemId");
					this.OnitemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Decimal(20,6) NOT NULL")]
		public decimal quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string uomCode
		{
			get
			{
				return this._uomCode;
			}
			set
			{
				if ((this._uomCode != value))
				{
					if (this._unitOfMeasure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuomCodeChanging(value);
					this.SendPropertyChanging();
					this._uomCode = value;
					this.SendPropertyChanged("uomCode");
					this.OnuomCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomCodeOrg", DbType="NVarChar(50)")]
		public string uomCodeOrg
		{
			get
			{
				return this._uomCodeOrg;
			}
			set
			{
				if ((this._uomCodeOrg != value))
				{
					this.OnuomCodeOrgChanging(value);
					this.SendPropertyChanging();
					this._uomCodeOrg = value;
					this.SendPropertyChanged("uomCodeOrg");
					this.OnuomCodeOrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Decimal(20,6) NOT NULL")]
		public decimal weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(20,6) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineTotal", DbType="Decimal(20,6) NOT NULL")]
		public decimal lineTotal
		{
			get
			{
				return this._lineTotal;
			}
			set
			{
				if ((this._lineTotal != value))
				{
					this.OnlineTotalChanging(value);
					this.SendPropertyChanging();
					this._lineTotal = value;
					this.SendPropertyChanged("lineTotal");
					this.OnlineTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineTypeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lineTypeCode
		{
			get
			{
				return this._lineTypeCode;
			}
			set
			{
				if ((this._lineTypeCode != value))
				{
					if (this._lineType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlineTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._lineTypeCode = value;
					this.SendPropertyChanged("lineTypeCode");
					this.OnlineTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineStatusCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string lineStatusCode
		{
			get
			{
				return this._lineStatusCode;
			}
			set
			{
				if ((this._lineStatusCode != value))
				{
					if (this._lineStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlineStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._lineStatusCode = value;
					this.SendPropertyChanged("lineStatusCode");
					this.OnlineStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiptDate", DbType="DateTime NOT NULL")]
		public System.DateTime receiptDate
		{
			get
			{
				return this._receiptDate;
			}
			set
			{
				if ((this._receiptDate != value))
				{
					this.OnreceiptDateChanging(value);
					this.SendPropertyChanging();
					this._receiptDate = value;
					this.SendPropertyChanged("receiptDate");
					this.OnreceiptDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string docType
		{
			get
			{
				return this._docType;
			}
			set
			{
				if ((this._docType != value))
				{
					if (this._document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndocTypeChanging(value);
					this.SendPropertyChanging();
					this._docType = value;
					this.SendPropertyChanged("docType");
					this.OndocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocId", DbType="Int NOT NULL")]
		public int baseDocId
		{
			get
			{
				return this._baseDocId;
			}
			set
			{
				if ((this._baseDocId != value))
				{
					if (this._purchaseOrderLine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbaseDocIdChanging(value);
					this.SendPropertyChanging();
					this._baseDocId = value;
					this.SendPropertyChanged("baseDocId");
					this.OnbaseDocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseLineNum", DbType="Int NOT NULL")]
		public int baseLineNum
		{
			get
			{
				return this._baseLineNum;
			}
			set
			{
				if ((this._baseLineNum != value))
				{
					if (this._purchaseOrderLine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbaseLineNumChanging(value);
					this.SendPropertyChanging();
					this._baseLineNum = value;
					this.SendPropertyChanged("baseLineNum");
					this.OnbaseLineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string baseDocType
		{
			get
			{
				return this._baseDocType;
			}
			set
			{
				if ((this._baseDocType != value))
				{
					if (this._document1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbaseDocTypeChanging(value);
					this.SendPropertyChanging();
					this._baseDocType = value;
					this.SendPropertyChanged("baseDocType");
					this.OnbaseDocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_goodsReceiptLine", Storage="_document", ThisKey="docType", OtherKey="docType", IsForeignKey=true)]
		public document document
		{
			get
			{
				return this._document.Entity;
			}
			set
			{
				document previousValue = this._document.Entity;
				if (((previousValue != value) 
							|| (this._document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._document.Entity = null;
						previousValue.goodsReceiptLines.Remove(this);
					}
					this._document.Entity = value;
					if ((value != null))
					{
						value.goodsReceiptLines.Add(this);
						this._docType = value.docType;
					}
					else
					{
						this._docType = default(string);
					}
					this.SendPropertyChanged("document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_goodsReceiptLine1", Storage="_document1", ThisKey="baseDocType", OtherKey="docType", IsForeignKey=true)]
		public document document1
		{
			get
			{
				return this._document1.Entity;
			}
			set
			{
				document previousValue = this._document1.Entity;
				if (((previousValue != value) 
							|| (this._document1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._document1.Entity = null;
						previousValue.goodsReceiptLines1.Remove(this);
					}
					this._document1.Entity = value;
					if ((value != null))
					{
						value.goodsReceiptLines1.Add(this);
						this._baseDocType = value.docType;
					}
					else
					{
						this._baseDocType = default(string);
					}
					this.SendPropertyChanged("document1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="goodsReceipt_goodsReceiptLine", Storage="_goodsReceipt", ThisKey="docId", OtherKey="docId", IsForeignKey=true)]
		public goodsReceipt goodsReceipt
		{
			get
			{
				return this._goodsReceipt.Entity;
			}
			set
			{
				goodsReceipt previousValue = this._goodsReceipt.Entity;
				if (((previousValue != value) 
							|| (this._goodsReceipt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._goodsReceipt.Entity = null;
						previousValue.goodsReceiptLines.Remove(this);
					}
					this._goodsReceipt.Entity = value;
					if ((value != null))
					{
						value.goodsReceiptLines.Add(this);
						this._docId = value.docId;
					}
					else
					{
						this._docId = default(int);
					}
					this.SendPropertyChanged("goodsReceipt");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lineStatus_goodsReceiptLine", Storage="_lineStatus", ThisKey="lineStatusCode", OtherKey="lineStatusCode", IsForeignKey=true)]
		public lineStatus lineStatus
		{
			get
			{
				return this._lineStatus.Entity;
			}
			set
			{
				lineStatus previousValue = this._lineStatus.Entity;
				if (((previousValue != value) 
							|| (this._lineStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lineStatus.Entity = null;
						previousValue.goodsReceiptLines.Remove(this);
					}
					this._lineStatus.Entity = value;
					if ((value != null))
					{
						value.goodsReceiptLines.Add(this);
						this._lineStatusCode = value.lineStatusCode;
					}
					else
					{
						this._lineStatusCode = default(string);
					}
					this.SendPropertyChanged("lineStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lineType_goodsReceiptLine", Storage="_lineType", ThisKey="lineTypeCode", OtherKey="lineTypeCode", IsForeignKey=true)]
		public lineType lineType
		{
			get
			{
				return this._lineType.Entity;
			}
			set
			{
				lineType previousValue = this._lineType.Entity;
				if (((previousValue != value) 
							|| (this._lineType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lineType.Entity = null;
						previousValue.goodsReceiptLines.Remove(this);
					}
					this._lineType.Entity = value;
					if ((value != null))
					{
						value.goodsReceiptLines.Add(this);
						this._lineTypeCode = value.lineTypeCode;
					}
					else
					{
						this._lineTypeCode = default(string);
					}
					this.SendPropertyChanged("lineType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="purchaseOrderLine_goodsReceiptLine", Storage="_purchaseOrderLine", ThisKey="baseDocId,baseLineNum", OtherKey="docId,lineNum", IsForeignKey=true)]
		public purchaseOrderLine purchaseOrderLine
		{
			get
			{
				return this._purchaseOrderLine.Entity;
			}
			set
			{
				purchaseOrderLine previousValue = this._purchaseOrderLine.Entity;
				if (((previousValue != value) 
							|| (this._purchaseOrderLine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._purchaseOrderLine.Entity = null;
						previousValue.goodsReceiptLines.Remove(this);
					}
					this._purchaseOrderLine.Entity = value;
					if ((value != null))
					{
						value.goodsReceiptLines.Add(this);
						this._baseDocId = value.docId;
						this._baseLineNum = value.lineNum;
					}
					else
					{
						this._baseDocId = default(int);
						this._baseLineNum = default(int);
					}
					this.SendPropertyChanged("purchaseOrderLine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasure_goodsReceiptLine", Storage="_unitOfMeasure", ThisKey="uomCode", OtherKey="uomCode", IsForeignKey=true)]
		public unitOfMeasure unitOfMeasure
		{
			get
			{
				return this._unitOfMeasure.Entity;
			}
			set
			{
				unitOfMeasure previousValue = this._unitOfMeasure.Entity;
				if (((previousValue != value) 
							|| (this._unitOfMeasure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._unitOfMeasure.Entity = null;
						previousValue.goodsReceiptLines.Remove(this);
					}
					this._unitOfMeasure.Entity = value;
					if ((value != null))
					{
						value.goodsReceiptLines.Add(this);
						this._uomCode = value.uomCode;
					}
					else
					{
						this._uomCode = default(string);
					}
					this.SendPropertyChanged("unitOfMeasure");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_goodsReceiptLine", Storage="_item", ThisKey="itemId", OtherKey="itemId", IsForeignKey=true)]
		public item item
		{
			get
			{
				return this._item.Entity;
			}
			set
			{
				item previousValue = this._item.Entity;
				if (((previousValue != value) 
							|| (this._item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item.Entity = null;
						previousValue.goodsReceiptLines.Remove(this);
					}
					this._item.Entity = value;
					if ((value != null))
					{
						value.goodsReceiptLines.Add(this);
						this._itemId = value.itemId;
					}
					else
					{
						this._itemId = default(int);
					}
					this.SendPropertyChanged("item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inspection")]
	public partial class inspection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _docId;
		
		private int _docNum;
		
		private System.DateTime _docDate;
		
		private System.DateTime _timeStampCreated;
		
		private System.Nullable<System.DateTime> _timeStampLastUpdate;
		
		private string _projectCode;
		
		private string _docType;
		
		private EntitySet<inspectionLine> _inspectionLines;
		
		private EntityRef<document> _document;
		
		private EntityRef<project> _project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndocIdChanging(int value);
    partial void OndocIdChanged();
    partial void OndocNumChanging(int value);
    partial void OndocNumChanged();
    partial void OndocDateChanging(System.DateTime value);
    partial void OndocDateChanged();
    partial void OntimeStampCreatedChanging(System.DateTime value);
    partial void OntimeStampCreatedChanged();
    partial void OntimeStampLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OntimeStampLastUpdateChanged();
    partial void OnprojectCodeChanging(string value);
    partial void OnprojectCodeChanged();
    partial void OndocTypeChanging(string value);
    partial void OndocTypeChanged();
    #endregion
		
		public inspection()
		{
			this._inspectionLines = new EntitySet<inspectionLine>(new Action<inspectionLine>(this.attach_inspectionLines), new Action<inspectionLine>(this.detach_inspectionLines));
			this._document = default(EntityRef<document>);
			this._project = default(EntityRef<project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int docId
		{
			get
			{
				return this._docId;
			}
			set
			{
				if ((this._docId != value))
				{
					this.OndocIdChanging(value);
					this.SendPropertyChanging();
					this._docId = value;
					this.SendPropertyChanged("docId");
					this.OndocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docNum", DbType="Int NOT NULL")]
		public int docNum
		{
			get
			{
				return this._docNum;
			}
			set
			{
				if ((this._docNum != value))
				{
					this.OndocNumChanging(value);
					this.SendPropertyChanging();
					this._docNum = value;
					this.SendPropertyChanged("docNum");
					this.OndocNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docDate", DbType="DateTime NOT NULL")]
		public System.DateTime docDate
		{
			get
			{
				return this._docDate;
			}
			set
			{
				if ((this._docDate != value))
				{
					this.OndocDateChanging(value);
					this.SendPropertyChanging();
					this._docDate = value;
					this.SendPropertyChanged("docDate");
					this.OndocDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStampCreated", DbType="DateTime NOT NULL")]
		public System.DateTime timeStampCreated
		{
			get
			{
				return this._timeStampCreated;
			}
			set
			{
				if ((this._timeStampCreated != value))
				{
					this.OntimeStampCreatedChanging(value);
					this.SendPropertyChanging();
					this._timeStampCreated = value;
					this.SendPropertyChanged("timeStampCreated");
					this.OntimeStampCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStampLastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> timeStampLastUpdate
		{
			get
			{
				return this._timeStampLastUpdate;
			}
			set
			{
				if ((this._timeStampLastUpdate != value))
				{
					this.OntimeStampLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._timeStampLastUpdate = value;
					this.SendPropertyChanged("timeStampLastUpdate");
					this.OntimeStampLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string projectCode
		{
			get
			{
				return this._projectCode;
			}
			set
			{
				if ((this._projectCode != value))
				{
					if (this._project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectCodeChanging(value);
					this.SendPropertyChanging();
					this._projectCode = value;
					this.SendPropertyChanged("projectCode");
					this.OnprojectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string docType
		{
			get
			{
				return this._docType;
			}
			set
			{
				if ((this._docType != value))
				{
					if (this._document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndocTypeChanging(value);
					this.SendPropertyChanging();
					this._docType = value;
					this.SendPropertyChanged("docType");
					this.OndocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="inspection_inspectionLine", Storage="_inspectionLines", ThisKey="docId", OtherKey="docId")]
		public EntitySet<inspectionLine> inspectionLines
		{
			get
			{
				return this._inspectionLines;
			}
			set
			{
				this._inspectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_inspection", Storage="_document", ThisKey="docType", OtherKey="docType", IsForeignKey=true)]
		public document document
		{
			get
			{
				return this._document.Entity;
			}
			set
			{
				document previousValue = this._document.Entity;
				if (((previousValue != value) 
							|| (this._document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._document.Entity = null;
						previousValue.inspections.Remove(this);
					}
					this._document.Entity = value;
					if ((value != null))
					{
						value.inspections.Add(this);
						this._docType = value.docType;
					}
					else
					{
						this._docType = default(string);
					}
					this.SendPropertyChanged("document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_inspection", Storage="_project", ThisKey="projectCode", OtherKey="projectCode", IsForeignKey=true)]
		public project project
		{
			get
			{
				return this._project.Entity;
			}
			set
			{
				project previousValue = this._project.Entity;
				if (((previousValue != value) 
							|| (this._project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project.Entity = null;
						previousValue.inspections.Remove(this);
					}
					this._project.Entity = value;
					if ((value != null))
					{
						value.inspections.Add(this);
						this._projectCode = value.projectCode;
					}
					else
					{
						this._projectCode = default(string);
					}
					this.SendPropertyChanged("project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_inspectionLines(inspectionLine entity)
		{
			this.SendPropertyChanging();
			entity.inspection = this;
		}
		
		private void detach_inspectionLines(inspectionLine entity)
		{
			this.SendPropertyChanging();
			entity.inspection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inspectionLine")]
	public partial class inspectionLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _docId;
		
		private int _lineNum;
		
		private decimal _quantity;
		
		private string _uomCode;
		
		private string _uomCodeOrg;
		
		private bool _statusInspection;
		
		private bool _statusRelease;
		
		private System.Nullable<System.DateTime> _inspectionDate1;
		
		private System.Nullable<System.DateTime> _inspectionDate2;
		
		private System.Nullable<System.DateTime> _inspectionDate3;
		
		private System.Nullable<System.DateTime> _releaseDate1;
		
		private System.Nullable<System.DateTime> _releaseDate2;
		
		private System.Nullable<System.DateTime> _releaseDate3;
		
		private System.Nullable<long> _reportNumber;
		
		private int _baseDocId;
		
		private int _baseLineNum;
		
		private string _baseDocType;
		
		private EntityRef<document> _document;
		
		private EntityRef<inspection> _inspection;
		
		private EntityRef<purchaseOrderLine> _purchaseOrderLine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndocIdChanging(int value);
    partial void OndocIdChanged();
    partial void OnlineNumChanging(int value);
    partial void OnlineNumChanged();
    partial void OnquantityChanging(decimal value);
    partial void OnquantityChanged();
    partial void OnuomCodeChanging(string value);
    partial void OnuomCodeChanged();
    partial void OnuomCodeOrgChanging(string value);
    partial void OnuomCodeOrgChanged();
    partial void OnstatusInspectionChanging(bool value);
    partial void OnstatusInspectionChanged();
    partial void OnstatusReleaseChanging(bool value);
    partial void OnstatusReleaseChanged();
    partial void OninspectionDate1Changing(System.Nullable<System.DateTime> value);
    partial void OninspectionDate1Changed();
    partial void OninspectionDate2Changing(System.Nullable<System.DateTime> value);
    partial void OninspectionDate2Changed();
    partial void OninspectionDate3Changing(System.Nullable<System.DateTime> value);
    partial void OninspectionDate3Changed();
    partial void OnreleaseDate1Changing(System.Nullable<System.DateTime> value);
    partial void OnreleaseDate1Changed();
    partial void OnreleaseDate2Changing(System.Nullable<System.DateTime> value);
    partial void OnreleaseDate2Changed();
    partial void OnreleaseDate3Changing(System.Nullable<System.DateTime> value);
    partial void OnreleaseDate3Changed();
    partial void OnreportNumberChanging(System.Nullable<long> value);
    partial void OnreportNumberChanged();
    partial void OnbaseDocIdChanging(int value);
    partial void OnbaseDocIdChanged();
    partial void OnbaseLineNumChanging(int value);
    partial void OnbaseLineNumChanged();
    partial void OnbaseDocTypeChanging(string value);
    partial void OnbaseDocTypeChanged();
    #endregion
		
		public inspectionLine()
		{
			this._document = default(EntityRef<document>);
			this._inspection = default(EntityRef<inspection>);
			this._purchaseOrderLine = default(EntityRef<purchaseOrderLine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int docId
		{
			get
			{
				return this._docId;
			}
			set
			{
				if ((this._docId != value))
				{
					if (this._inspection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndocIdChanging(value);
					this.SendPropertyChanging();
					this._docId = value;
					this.SendPropertyChanged("docId");
					this.OndocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int lineNum
		{
			get
			{
				return this._lineNum;
			}
			set
			{
				if ((this._lineNum != value))
				{
					this.OnlineNumChanging(value);
					this.SendPropertyChanging();
					this._lineNum = value;
					this.SendPropertyChanged("lineNum");
					this.OnlineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Decimal(20,6) NOT NULL")]
		public decimal quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string uomCode
		{
			get
			{
				return this._uomCode;
			}
			set
			{
				if ((this._uomCode != value))
				{
					this.OnuomCodeChanging(value);
					this.SendPropertyChanging();
					this._uomCode = value;
					this.SendPropertyChanged("uomCode");
					this.OnuomCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomCodeOrg", DbType="NVarChar(50)")]
		public string uomCodeOrg
		{
			get
			{
				return this._uomCodeOrg;
			}
			set
			{
				if ((this._uomCodeOrg != value))
				{
					this.OnuomCodeOrgChanging(value);
					this.SendPropertyChanging();
					this._uomCodeOrg = value;
					this.SendPropertyChanged("uomCodeOrg");
					this.OnuomCodeOrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusInspection", DbType="Bit NOT NULL")]
		public bool statusInspection
		{
			get
			{
				return this._statusInspection;
			}
			set
			{
				if ((this._statusInspection != value))
				{
					this.OnstatusInspectionChanging(value);
					this.SendPropertyChanging();
					this._statusInspection = value;
					this.SendPropertyChanged("statusInspection");
					this.OnstatusInspectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusRelease", DbType="Bit NOT NULL")]
		public bool statusRelease
		{
			get
			{
				return this._statusRelease;
			}
			set
			{
				if ((this._statusRelease != value))
				{
					this.OnstatusReleaseChanging(value);
					this.SendPropertyChanging();
					this._statusRelease = value;
					this.SendPropertyChanged("statusRelease");
					this.OnstatusReleaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inspectionDate1", DbType="DateTime")]
		public System.Nullable<System.DateTime> inspectionDate1
		{
			get
			{
				return this._inspectionDate1;
			}
			set
			{
				if ((this._inspectionDate1 != value))
				{
					this.OninspectionDate1Changing(value);
					this.SendPropertyChanging();
					this._inspectionDate1 = value;
					this.SendPropertyChanged("inspectionDate1");
					this.OninspectionDate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inspectionDate2", DbType="DateTime")]
		public System.Nullable<System.DateTime> inspectionDate2
		{
			get
			{
				return this._inspectionDate2;
			}
			set
			{
				if ((this._inspectionDate2 != value))
				{
					this.OninspectionDate2Changing(value);
					this.SendPropertyChanging();
					this._inspectionDate2 = value;
					this.SendPropertyChanged("inspectionDate2");
					this.OninspectionDate2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inspectionDate3", DbType="DateTime")]
		public System.Nullable<System.DateTime> inspectionDate3
		{
			get
			{
				return this._inspectionDate3;
			}
			set
			{
				if ((this._inspectionDate3 != value))
				{
					this.OninspectionDate3Changing(value);
					this.SendPropertyChanging();
					this._inspectionDate3 = value;
					this.SendPropertyChanged("inspectionDate3");
					this.OninspectionDate3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_releaseDate1", DbType="DateTime")]
		public System.Nullable<System.DateTime> releaseDate1
		{
			get
			{
				return this._releaseDate1;
			}
			set
			{
				if ((this._releaseDate1 != value))
				{
					this.OnreleaseDate1Changing(value);
					this.SendPropertyChanging();
					this._releaseDate1 = value;
					this.SendPropertyChanged("releaseDate1");
					this.OnreleaseDate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_releaseDate2", DbType="DateTime")]
		public System.Nullable<System.DateTime> releaseDate2
		{
			get
			{
				return this._releaseDate2;
			}
			set
			{
				if ((this._releaseDate2 != value))
				{
					this.OnreleaseDate2Changing(value);
					this.SendPropertyChanging();
					this._releaseDate2 = value;
					this.SendPropertyChanged("releaseDate2");
					this.OnreleaseDate2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_releaseDate3", DbType="DateTime")]
		public System.Nullable<System.DateTime> releaseDate3
		{
			get
			{
				return this._releaseDate3;
			}
			set
			{
				if ((this._releaseDate3 != value))
				{
					this.OnreleaseDate3Changing(value);
					this.SendPropertyChanging();
					this._releaseDate3 = value;
					this.SendPropertyChanged("releaseDate3");
					this.OnreleaseDate3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reportNumber", DbType="BigInt")]
		public System.Nullable<long> reportNumber
		{
			get
			{
				return this._reportNumber;
			}
			set
			{
				if ((this._reportNumber != value))
				{
					this.OnreportNumberChanging(value);
					this.SendPropertyChanging();
					this._reportNumber = value;
					this.SendPropertyChanged("reportNumber");
					this.OnreportNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocId", DbType="Int NOT NULL")]
		public int baseDocId
		{
			get
			{
				return this._baseDocId;
			}
			set
			{
				if ((this._baseDocId != value))
				{
					if (this._purchaseOrderLine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbaseDocIdChanging(value);
					this.SendPropertyChanging();
					this._baseDocId = value;
					this.SendPropertyChanged("baseDocId");
					this.OnbaseDocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseLineNum", DbType="Int NOT NULL")]
		public int baseLineNum
		{
			get
			{
				return this._baseLineNum;
			}
			set
			{
				if ((this._baseLineNum != value))
				{
					if (this._purchaseOrderLine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbaseLineNumChanging(value);
					this.SendPropertyChanging();
					this._baseLineNum = value;
					this.SendPropertyChanged("baseLineNum");
					this.OnbaseLineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string baseDocType
		{
			get
			{
				return this._baseDocType;
			}
			set
			{
				if ((this._baseDocType != value))
				{
					if (this._document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbaseDocTypeChanging(value);
					this.SendPropertyChanging();
					this._baseDocType = value;
					this.SendPropertyChanged("baseDocType");
					this.OnbaseDocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_inspectionLine", Storage="_document", ThisKey="baseDocType", OtherKey="docType", IsForeignKey=true)]
		public document document
		{
			get
			{
				return this._document.Entity;
			}
			set
			{
				document previousValue = this._document.Entity;
				if (((previousValue != value) 
							|| (this._document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._document.Entity = null;
						previousValue.inspectionLines.Remove(this);
					}
					this._document.Entity = value;
					if ((value != null))
					{
						value.inspectionLines.Add(this);
						this._baseDocType = value.docType;
					}
					else
					{
						this._baseDocType = default(string);
					}
					this.SendPropertyChanged("document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="inspection_inspectionLine", Storage="_inspection", ThisKey="docId", OtherKey="docId", IsForeignKey=true)]
		public inspection inspection
		{
			get
			{
				return this._inspection.Entity;
			}
			set
			{
				inspection previousValue = this._inspection.Entity;
				if (((previousValue != value) 
							|| (this._inspection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._inspection.Entity = null;
						previousValue.inspectionLines.Remove(this);
					}
					this._inspection.Entity = value;
					if ((value != null))
					{
						value.inspectionLines.Add(this);
						this._docId = value.docId;
					}
					else
					{
						this._docId = default(int);
					}
					this.SendPropertyChanged("inspection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="purchaseOrderLine_inspectionLine", Storage="_purchaseOrderLine", ThisKey="baseDocId,baseLineNum", OtherKey="docId,lineNum", IsForeignKey=true)]
		public purchaseOrderLine purchaseOrderLine
		{
			get
			{
				return this._purchaseOrderLine.Entity;
			}
			set
			{
				purchaseOrderLine previousValue = this._purchaseOrderLine.Entity;
				if (((previousValue != value) 
							|| (this._purchaseOrderLine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._purchaseOrderLine.Entity = null;
						previousValue.inspectionLines.Remove(this);
					}
					this._purchaseOrderLine.Entity = value;
					if ((value != null))
					{
						value.inspectionLines.Add(this);
						this._baseDocId = value.docId;
						this._baseLineNum = value.lineNum;
					}
					else
					{
						this._baseDocId = default(int);
						this._baseLineNum = default(int);
					}
					this.SendPropertyChanged("purchaseOrderLine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.itemGroup")]
	public partial class itemGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _itemGroupCode;
		
		private string _itemGroupName;
		
		private EntitySet<item> _items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnitemGroupCodeChanging(string value);
    partial void OnitemGroupCodeChanged();
    partial void OnitemGroupNameChanging(string value);
    partial void OnitemGroupNameChanged();
    #endregion
		
		public itemGroup()
		{
			this._items = new EntitySet<item>(new Action<item>(this.attach_items), new Action<item>(this.detach_items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemGroupCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string itemGroupCode
		{
			get
			{
				return this._itemGroupCode;
			}
			set
			{
				if ((this._itemGroupCode != value))
				{
					this.OnitemGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._itemGroupCode = value;
					this.SendPropertyChanged("itemGroupCode");
					this.OnitemGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemGroupName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string itemGroupName
		{
			get
			{
				return this._itemGroupName;
			}
			set
			{
				if ((this._itemGroupName != value))
				{
					this.OnitemGroupNameChanging(value);
					this.SendPropertyChanging();
					this._itemGroupName = value;
					this.SendPropertyChanged("itemGroupName");
					this.OnitemGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="itemGroup_item", Storage="_items", ThisKey="itemGroupCode", OtherKey="itemGroupCode")]
		public EntitySet<item> items
		{
			get
			{
				return this._items;
			}
			set
			{
				this._items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.itemGroup = this;
		}
		
		private void detach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.itemGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.itemVLunar")]
	public partial class itemVLunar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _vLunarCode;
		
		private System.Nullable<int> _itemId;
		
		private string _outsideDiameter1;
		
		private string _outsideDiameter2;
		
		private string _outsideDiameter3;
		
		private string _wallThickness1;
		
		private string _wallThickness2;
		
		private string _type;
		
		private string _specification;
		
		private string _length;
		
		private string _treatmentHeat;
		
		private string _treatmentSurface;
		
		private string _ends;
		
		private string _cdi;
		
		private string _supplier;
		
		private string _other;
		
		private System.Nullable<bool> _certificates;
		
		private System.Nullable<decimal> _version;
		
		private EntityRef<item> _item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnvLunarCodeChanging(string value);
    partial void OnvLunarCodeChanged();
    partial void OnitemIdChanging(System.Nullable<int> value);
    partial void OnitemIdChanged();
    partial void OnoutsideDiameter1Changing(string value);
    partial void OnoutsideDiameter1Changed();
    partial void OnoutsideDiameter2Changing(string value);
    partial void OnoutsideDiameter2Changed();
    partial void OnoutsideDiameter3Changing(string value);
    partial void OnoutsideDiameter3Changed();
    partial void OnwallThickness1Changing(string value);
    partial void OnwallThickness1Changed();
    partial void OnwallThickness2Changing(string value);
    partial void OnwallThickness2Changed();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnspecificationChanging(string value);
    partial void OnspecificationChanged();
    partial void OnlengthChanging(string value);
    partial void OnlengthChanged();
    partial void OntreatmentHeatChanging(string value);
    partial void OntreatmentHeatChanged();
    partial void OntreatmentSurfaceChanging(string value);
    partial void OntreatmentSurfaceChanged();
    partial void OnendsChanging(string value);
    partial void OnendsChanged();
    partial void OncdiChanging(string value);
    partial void OncdiChanged();
    partial void OnsupplierChanging(string value);
    partial void OnsupplierChanged();
    partial void OnotherChanging(string value);
    partial void OnotherChanged();
    partial void OncertificatesChanging(System.Nullable<bool> value);
    partial void OncertificatesChanged();
    partial void OnversionChanging(System.Nullable<decimal> value);
    partial void OnversionChanged();
    #endregion
		
		public itemVLunar()
		{
			this._item = default(EntityRef<item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vLunarCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string vLunarCode
		{
			get
			{
				return this._vLunarCode;
			}
			set
			{
				if ((this._vLunarCode != value))
				{
					this.OnvLunarCodeChanging(value);
					this.SendPropertyChanging();
					this._vLunarCode = value;
					this.SendPropertyChanged("vLunarCode");
					this.OnvLunarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemId", DbType="Int")]
		public System.Nullable<int> itemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					if (this._item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnitemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("itemId");
					this.OnitemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outsideDiameter1", DbType="VarChar(255)")]
		public string outsideDiameter1
		{
			get
			{
				return this._outsideDiameter1;
			}
			set
			{
				if ((this._outsideDiameter1 != value))
				{
					this.OnoutsideDiameter1Changing(value);
					this.SendPropertyChanging();
					this._outsideDiameter1 = value;
					this.SendPropertyChanged("outsideDiameter1");
					this.OnoutsideDiameter1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outsideDiameter2", DbType="VarChar(255)")]
		public string outsideDiameter2
		{
			get
			{
				return this._outsideDiameter2;
			}
			set
			{
				if ((this._outsideDiameter2 != value))
				{
					this.OnoutsideDiameter2Changing(value);
					this.SendPropertyChanging();
					this._outsideDiameter2 = value;
					this.SendPropertyChanged("outsideDiameter2");
					this.OnoutsideDiameter2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outsideDiameter3", DbType="VarChar(255)")]
		public string outsideDiameter3
		{
			get
			{
				return this._outsideDiameter3;
			}
			set
			{
				if ((this._outsideDiameter3 != value))
				{
					this.OnoutsideDiameter3Changing(value);
					this.SendPropertyChanging();
					this._outsideDiameter3 = value;
					this.SendPropertyChanged("outsideDiameter3");
					this.OnoutsideDiameter3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wallThickness1", DbType="VarChar(255)")]
		public string wallThickness1
		{
			get
			{
				return this._wallThickness1;
			}
			set
			{
				if ((this._wallThickness1 != value))
				{
					this.OnwallThickness1Changing(value);
					this.SendPropertyChanging();
					this._wallThickness1 = value;
					this.SendPropertyChanged("wallThickness1");
					this.OnwallThickness1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wallThickness2", DbType="VarChar(255)")]
		public string wallThickness2
		{
			get
			{
				return this._wallThickness2;
			}
			set
			{
				if ((this._wallThickness2 != value))
				{
					this.OnwallThickness2Changing(value);
					this.SendPropertyChanging();
					this._wallThickness2 = value;
					this.SendPropertyChanged("wallThickness2");
					this.OnwallThickness2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(255)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specification", DbType="VarChar(255)")]
		public string specification
		{
			get
			{
				return this._specification;
			}
			set
			{
				if ((this._specification != value))
				{
					this.OnspecificationChanging(value);
					this.SendPropertyChanging();
					this._specification = value;
					this.SendPropertyChanged("specification");
					this.OnspecificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_length", DbType="VarChar(255)")]
		public string length
		{
			get
			{
				return this._length;
			}
			set
			{
				if ((this._length != value))
				{
					this.OnlengthChanging(value);
					this.SendPropertyChanging();
					this._length = value;
					this.SendPropertyChanged("length");
					this.OnlengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_treatmentHeat", DbType="VarChar(255)")]
		public string treatmentHeat
		{
			get
			{
				return this._treatmentHeat;
			}
			set
			{
				if ((this._treatmentHeat != value))
				{
					this.OntreatmentHeatChanging(value);
					this.SendPropertyChanging();
					this._treatmentHeat = value;
					this.SendPropertyChanged("treatmentHeat");
					this.OntreatmentHeatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_treatmentSurface", DbType="VarChar(255)")]
		public string treatmentSurface
		{
			get
			{
				return this._treatmentSurface;
			}
			set
			{
				if ((this._treatmentSurface != value))
				{
					this.OntreatmentSurfaceChanging(value);
					this.SendPropertyChanging();
					this._treatmentSurface = value;
					this.SendPropertyChanged("treatmentSurface");
					this.OntreatmentSurfaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ends", DbType="VarChar(255)")]
		public string ends
		{
			get
			{
				return this._ends;
			}
			set
			{
				if ((this._ends != value))
				{
					this.OnendsChanging(value);
					this.SendPropertyChanging();
					this._ends = value;
					this.SendPropertyChanged("ends");
					this.OnendsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdi", DbType="VarChar(255)")]
		public string cdi
		{
			get
			{
				return this._cdi;
			}
			set
			{
				if ((this._cdi != value))
				{
					this.OncdiChanging(value);
					this.SendPropertyChanging();
					this._cdi = value;
					this.SendPropertyChanged("cdi");
					this.OncdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier", DbType="VarChar(255)")]
		public string supplier
		{
			get
			{
				return this._supplier;
			}
			set
			{
				if ((this._supplier != value))
				{
					this.OnsupplierChanging(value);
					this.SendPropertyChanging();
					this._supplier = value;
					this.SendPropertyChanged("supplier");
					this.OnsupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_other", DbType="VarChar(255)")]
		public string other
		{
			get
			{
				return this._other;
			}
			set
			{
				if ((this._other != value))
				{
					this.OnotherChanging(value);
					this.SendPropertyChanging();
					this._other = value;
					this.SendPropertyChanged("other");
					this.OnotherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_certificates", DbType="Bit")]
		public System.Nullable<bool> certificates
		{
			get
			{
				return this._certificates;
			}
			set
			{
				if ((this._certificates != value))
				{
					this.OncertificatesChanging(value);
					this.SendPropertyChanging();
					this._certificates = value;
					this.SendPropertyChanged("certificates");
					this.OncertificatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((this._version != value))
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_itemVLunar", Storage="_item", ThisKey="itemId", OtherKey="itemId", IsForeignKey=true)]
		public item item
		{
			get
			{
				return this._item.Entity;
			}
			set
			{
				item previousValue = this._item.Entity;
				if (((previousValue != value) 
							|| (this._item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item.Entity = null;
						previousValue.itemVLunars.Remove(this);
					}
					this._item.Entity = value;
					if ((value != null))
					{
						value.itemVLunars.Add(this);
						this._itemId = value.itemId;
					}
					else
					{
						this._itemId = default(Nullable<int>);
					}
					this.SendPropertyChanged("item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.language")]
	public partial class language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _languageCode;
		
		private string _description;
		
		private EntitySet<translate> _translates;
		
		private EntitySet<businessPartner> _businessPartners;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlanguageCodeChanging(string value);
    partial void OnlanguageCodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public language()
		{
			this._translates = new EntitySet<translate>(new Action<translate>(this.attach_translates), new Action<translate>(this.detach_translates));
			this._businessPartners = new EntitySet<businessPartner>(new Action<businessPartner>(this.attach_businessPartners), new Action<businessPartner>(this.detach_businessPartners));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_languageCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string languageCode
		{
			get
			{
				return this._languageCode;
			}
			set
			{
				if ((this._languageCode != value))
				{
					this.OnlanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._languageCode = value;
					this.SendPropertyChanged("languageCode");
					this.OnlanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="language_translate", Storage="_translates", ThisKey="languageCode", OtherKey="languageCode")]
		public EntitySet<translate> translates
		{
			get
			{
				return this._translates;
			}
			set
			{
				this._translates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="language_businessPartner", Storage="_businessPartners", ThisKey="languageCode", OtherKey="languageCode")]
		public EntitySet<businessPartner> businessPartners
		{
			get
			{
				return this._businessPartners;
			}
			set
			{
				this._businessPartners.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_translates(translate entity)
		{
			this.SendPropertyChanging();
			entity.language = this;
		}
		
		private void detach_translates(translate entity)
		{
			this.SendPropertyChanging();
			entity.language = null;
		}
		
		private void attach_businessPartners(businessPartner entity)
		{
			this.SendPropertyChanging();
			entity.language = this;
		}
		
		private void detach_businessPartners(businessPartner entity)
		{
			this.SendPropertyChanging();
			entity.language = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lineStatus")]
	public partial class lineStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _lineStatusCode;
		
		private string _description;
		
		private EntitySet<goodsReceiptLine> _goodsReceiptLines;
		
		private EntitySet<purchaseOrderLine> _purchaseOrderLines;
		
		private EntitySet<salesOrderLine> _salesOrderLines;
		
		private EntitySet<deliveryLine> _deliveryLines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlineStatusCodeChanging(string value);
    partial void OnlineStatusCodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public lineStatus()
		{
			this._goodsReceiptLines = new EntitySet<goodsReceiptLine>(new Action<goodsReceiptLine>(this.attach_goodsReceiptLines), new Action<goodsReceiptLine>(this.detach_goodsReceiptLines));
			this._purchaseOrderLines = new EntitySet<purchaseOrderLine>(new Action<purchaseOrderLine>(this.attach_purchaseOrderLines), new Action<purchaseOrderLine>(this.detach_purchaseOrderLines));
			this._salesOrderLines = new EntitySet<salesOrderLine>(new Action<salesOrderLine>(this.attach_salesOrderLines), new Action<salesOrderLine>(this.detach_salesOrderLines));
			this._deliveryLines = new EntitySet<deliveryLine>(new Action<deliveryLine>(this.attach_deliveryLines), new Action<deliveryLine>(this.detach_deliveryLines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineStatusCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string lineStatusCode
		{
			get
			{
				return this._lineStatusCode;
			}
			set
			{
				if ((this._lineStatusCode != value))
				{
					this.OnlineStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._lineStatusCode = value;
					this.SendPropertyChanged("lineStatusCode");
					this.OnlineStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lineStatus_goodsReceiptLine", Storage="_goodsReceiptLines", ThisKey="lineStatusCode", OtherKey="lineStatusCode")]
		public EntitySet<goodsReceiptLine> goodsReceiptLines
		{
			get
			{
				return this._goodsReceiptLines;
			}
			set
			{
				this._goodsReceiptLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lineStatus_purchaseOrderLine", Storage="_purchaseOrderLines", ThisKey="lineStatusCode", OtherKey="lineStatusCode")]
		public EntitySet<purchaseOrderLine> purchaseOrderLines
		{
			get
			{
				return this._purchaseOrderLines;
			}
			set
			{
				this._purchaseOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lineStatus_salesOrderLine", Storage="_salesOrderLines", ThisKey="lineStatusCode", OtherKey="lineStatusCode")]
		public EntitySet<salesOrderLine> salesOrderLines
		{
			get
			{
				return this._salesOrderLines;
			}
			set
			{
				this._salesOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lineStatus_deliveryLine", Storage="_deliveryLines", ThisKey="lineStatusCode", OtherKey="lineStatusCode")]
		public EntitySet<deliveryLine> deliveryLines
		{
			get
			{
				return this._deliveryLines;
			}
			set
			{
				this._deliveryLines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_goodsReceiptLines(goodsReceiptLine entity)
		{
			this.SendPropertyChanging();
			entity.lineStatus = this;
		}
		
		private void detach_goodsReceiptLines(goodsReceiptLine entity)
		{
			this.SendPropertyChanging();
			entity.lineStatus = null;
		}
		
		private void attach_purchaseOrderLines(purchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.lineStatus = this;
		}
		
		private void detach_purchaseOrderLines(purchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.lineStatus = null;
		}
		
		private void attach_salesOrderLines(salesOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.lineStatus = this;
		}
		
		private void detach_salesOrderLines(salesOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.lineStatus = null;
		}
		
		private void attach_deliveryLines(deliveryLine entity)
		{
			this.SendPropertyChanging();
			entity.lineStatus = this;
		}
		
		private void detach_deliveryLines(deliveryLine entity)
		{
			this.SendPropertyChanging();
			entity.lineStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lineType")]
	public partial class lineType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _lineTypeCode;
		
		private string _description;
		
		private EntitySet<goodsReceiptLine> _goodsReceiptLines;
		
		private EntitySet<purchaseOrderLine> _purchaseOrderLines;
		
		private EntitySet<salesOrderLine> _salesOrderLines;
		
		private EntitySet<deliveryLine> _deliveryLines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlineTypeCodeChanging(string value);
    partial void OnlineTypeCodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public lineType()
		{
			this._goodsReceiptLines = new EntitySet<goodsReceiptLine>(new Action<goodsReceiptLine>(this.attach_goodsReceiptLines), new Action<goodsReceiptLine>(this.detach_goodsReceiptLines));
			this._purchaseOrderLines = new EntitySet<purchaseOrderLine>(new Action<purchaseOrderLine>(this.attach_purchaseOrderLines), new Action<purchaseOrderLine>(this.detach_purchaseOrderLines));
			this._salesOrderLines = new EntitySet<salesOrderLine>(new Action<salesOrderLine>(this.attach_salesOrderLines), new Action<salesOrderLine>(this.detach_salesOrderLines));
			this._deliveryLines = new EntitySet<deliveryLine>(new Action<deliveryLine>(this.attach_deliveryLines), new Action<deliveryLine>(this.detach_deliveryLines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineTypeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string lineTypeCode
		{
			get
			{
				return this._lineTypeCode;
			}
			set
			{
				if ((this._lineTypeCode != value))
				{
					this.OnlineTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._lineTypeCode = value;
					this.SendPropertyChanged("lineTypeCode");
					this.OnlineTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lineType_goodsReceiptLine", Storage="_goodsReceiptLines", ThisKey="lineTypeCode", OtherKey="lineTypeCode")]
		public EntitySet<goodsReceiptLine> goodsReceiptLines
		{
			get
			{
				return this._goodsReceiptLines;
			}
			set
			{
				this._goodsReceiptLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lineType_purchaseOrderLine", Storage="_purchaseOrderLines", ThisKey="lineTypeCode", OtherKey="lineTypeCode")]
		public EntitySet<purchaseOrderLine> purchaseOrderLines
		{
			get
			{
				return this._purchaseOrderLines;
			}
			set
			{
				this._purchaseOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lineType_salesOrderLine", Storage="_salesOrderLines", ThisKey="lineTypeCode", OtherKey="lineTypeCode")]
		public EntitySet<salesOrderLine> salesOrderLines
		{
			get
			{
				return this._salesOrderLines;
			}
			set
			{
				this._salesOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lineType_deliveryLine", Storage="_deliveryLines", ThisKey="lineTypeCode", OtherKey="lineTypeCode")]
		public EntitySet<deliveryLine> deliveryLines
		{
			get
			{
				return this._deliveryLines;
			}
			set
			{
				this._deliveryLines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_goodsReceiptLines(goodsReceiptLine entity)
		{
			this.SendPropertyChanging();
			entity.lineType = this;
		}
		
		private void detach_goodsReceiptLines(goodsReceiptLine entity)
		{
			this.SendPropertyChanging();
			entity.lineType = null;
		}
		
		private void attach_purchaseOrderLines(purchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.lineType = this;
		}
		
		private void detach_purchaseOrderLines(purchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.lineType = null;
		}
		
		private void attach_salesOrderLines(salesOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.lineType = this;
		}
		
		private void detach_salesOrderLines(salesOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.lineType = null;
		}
		
		private void attach_deliveryLines(deliveryLine entity)
		{
			this.SendPropertyChanging();
			entity.lineType = this;
		}
		
		private void detach_deliveryLines(deliveryLine entity)
		{
			this.SendPropertyChanging();
			entity.lineType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.packList")]
	public partial class packList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _packListId;
		
		private string _packListNumber;
		
		private string _packListNumberCustomer;
		
		private EntitySet<colli> _collis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpackListIdChanging(int value);
    partial void OnpackListIdChanged();
    partial void OnpackListNumberChanging(string value);
    partial void OnpackListNumberChanged();
    partial void OnpackListNumberCustomerChanging(string value);
    partial void OnpackListNumberCustomerChanged();
    #endregion
		
		public packList()
		{
			this._collis = new EntitySet<colli>(new Action<colli>(this.attach_collis), new Action<colli>(this.detach_collis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packListId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int packListId
		{
			get
			{
				return this._packListId;
			}
			set
			{
				if ((this._packListId != value))
				{
					this.OnpackListIdChanging(value);
					this.SendPropertyChanging();
					this._packListId = value;
					this.SendPropertyChanged("packListId");
					this.OnpackListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packListNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string packListNumber
		{
			get
			{
				return this._packListNumber;
			}
			set
			{
				if ((this._packListNumber != value))
				{
					this.OnpackListNumberChanging(value);
					this.SendPropertyChanging();
					this._packListNumber = value;
					this.SendPropertyChanged("packListNumber");
					this.OnpackListNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packListNumberCustomer", DbType="NVarChar(50)")]
		public string packListNumberCustomer
		{
			get
			{
				return this._packListNumberCustomer;
			}
			set
			{
				if ((this._packListNumberCustomer != value))
				{
					this.OnpackListNumberCustomerChanging(value);
					this.SendPropertyChanging();
					this._packListNumberCustomer = value;
					this.SendPropertyChanged("packListNumberCustomer");
					this.OnpackListNumberCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="packList_colli", Storage="_collis", ThisKey="packListId", OtherKey="packListId")]
		public EntitySet<colli> collis
		{
			get
			{
				return this._collis;
			}
			set
			{
				this._collis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_collis(colli entity)
		{
			this.SendPropertyChanging();
			entity.packList = this;
		}
		
		private void detach_collis(colli entity)
		{
			this.SendPropertyChanging();
			entity.packList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.priceItem")]
	public partial class priceItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _itemId;
		
		private string _companyCode;
		
		private string _priceListCode;
		
		private decimal _price;
		
		private EntityRef<company> _company;
		
		private EntityRef<priceList> _priceList;
		
		private EntityRef<item> _item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnitemIdChanging(int value);
    partial void OnitemIdChanged();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    partial void OnpriceListCodeChanging(string value);
    partial void OnpriceListCodeChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    #endregion
		
		public priceItem()
		{
			this._company = default(EntityRef<company>);
			this._priceList = default(EntityRef<priceList>);
			this._item = default(EntityRef<item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int itemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					if (this._item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnitemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("itemId");
					this.OnitemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					if (this._company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priceListCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string priceListCode
		{
			get
			{
				return this._priceListCode;
			}
			set
			{
				if ((this._priceListCode != value))
				{
					if (this._priceList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpriceListCodeChanging(value);
					this.SendPropertyChanging();
					this._priceListCode = value;
					this.SendPropertyChanged("priceListCode");
					this.OnpriceListCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(20,6) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_priceItem", Storage="_company", ThisKey="companyCode", OtherKey="companyCode", IsForeignKey=true)]
		public company company
		{
			get
			{
				return this._company.Entity;
			}
			set
			{
				company previousValue = this._company.Entity;
				if (((previousValue != value) 
							|| (this._company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._company.Entity = null;
						previousValue.priceItems.Remove(this);
					}
					this._company.Entity = value;
					if ((value != null))
					{
						value.priceItems.Add(this);
						this._companyCode = value.companyCode;
					}
					else
					{
						this._companyCode = default(string);
					}
					this.SendPropertyChanged("company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="priceList_priceItem", Storage="_priceList", ThisKey="priceListCode", OtherKey="priceListCode", IsForeignKey=true)]
		public priceList priceList
		{
			get
			{
				return this._priceList.Entity;
			}
			set
			{
				priceList previousValue = this._priceList.Entity;
				if (((previousValue != value) 
							|| (this._priceList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._priceList.Entity = null;
						previousValue.priceItems.Remove(this);
					}
					this._priceList.Entity = value;
					if ((value != null))
					{
						value.priceItems.Add(this);
						this._priceListCode = value.priceListCode;
					}
					else
					{
						this._priceListCode = default(string);
					}
					this.SendPropertyChanged("priceList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_priceItem", Storage="_item", ThisKey="itemId", OtherKey="itemId", IsForeignKey=true)]
		public item item
		{
			get
			{
				return this._item.Entity;
			}
			set
			{
				item previousValue = this._item.Entity;
				if (((previousValue != value) 
							|| (this._item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item.Entity = null;
						previousValue.priceItems.Remove(this);
					}
					this._item.Entity = value;
					if ((value != null))
					{
						value.priceItems.Add(this);
						this._itemId = value.itemId;
					}
					else
					{
						this._itemId = default(int);
					}
					this.SendPropertyChanged("item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.priceList")]
	public partial class priceList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _priceListCode;
		
		private string _priceListName;
		
		private EntitySet<priceItem> _priceItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpriceListCodeChanging(string value);
    partial void OnpriceListCodeChanged();
    partial void OnpriceListNameChanging(string value);
    partial void OnpriceListNameChanged();
    #endregion
		
		public priceList()
		{
			this._priceItems = new EntitySet<priceItem>(new Action<priceItem>(this.attach_priceItems), new Action<priceItem>(this.detach_priceItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priceListCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string priceListCode
		{
			get
			{
				return this._priceListCode;
			}
			set
			{
				if ((this._priceListCode != value))
				{
					this.OnpriceListCodeChanging(value);
					this.SendPropertyChanging();
					this._priceListCode = value;
					this.SendPropertyChanged("priceListCode");
					this.OnpriceListCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priceListName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string priceListName
		{
			get
			{
				return this._priceListName;
			}
			set
			{
				if ((this._priceListName != value))
				{
					this.OnpriceListNameChanging(value);
					this.SendPropertyChanging();
					this._priceListName = value;
					this.SendPropertyChanged("priceListName");
					this.OnpriceListNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="priceList_priceItem", Storage="_priceItems", ThisKey="priceListCode", OtherKey="priceListCode")]
		public EntitySet<priceItem> priceItems
		{
			get
			{
				return this._priceItems;
			}
			set
			{
				this._priceItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_priceItems(priceItem entity)
		{
			this.SendPropertyChanging();
			entity.priceList = this;
		}
		
		private void detach_priceItems(priceItem entity)
		{
			this.SendPropertyChanging();
			entity.priceList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profiles")]
	public partial class Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValueStrings;
		
		private System.Data.Linq.Binary _PropertyValueBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValueStringsChanging(string value);
    partial void OnPropertyValueStringsChanged();
    partial void OnPropertyValueBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValueBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public Profile()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValueStrings", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PropertyValueStrings
		{
			get
			{
				return this._PropertyValueStrings;
			}
			set
			{
				if ((this._PropertyValueStrings != value))
				{
					this.OnPropertyValueStringsChanging(value);
					this.SendPropertyChanging();
					this._PropertyValueStrings = value;
					this.SendPropertyChanged("PropertyValueStrings");
					this.OnPropertyValueStringsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValueBinary", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValueBinary
		{
			get
			{
				return this._PropertyValueBinary;
			}
			set
			{
				if ((this._PropertyValueBinary != value))
				{
					this.OnPropertyValueBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValueBinary = value;
					this.SendPropertyChanged("PropertyValueBinary");
					this.OnPropertyValueBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Profile", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Profile = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.project")]
	public partial class project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _projectCode;
		
		private string _projectName;
		
		private string _companyCode;
		
		private int _businessPartnerId;
		
		private string _companyCustomer;
		
		private EntitySet<contactPersonProject> _contactPersonProjects;
		
		private EntitySet<goodsReceipt> _goodsReceipts;
		
		private EntitySet<inspection> _inspections;
		
		private EntitySet<transportProject> _transportProjects;
		
		private EntitySet<delivery> _deliveries;
		
		private EntitySet<userRole> _userRoles;
		
		private EntityRef<company> _company;
		
		private EntityRef<businessPartner> _businessPartner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojectCodeChanging(string value);
    partial void OnprojectCodeChanged();
    partial void OnprojectNameChanging(string value);
    partial void OnprojectNameChanged();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    partial void OnbusinessPartnerIdChanging(int value);
    partial void OnbusinessPartnerIdChanged();
    partial void OncompanyCustomerChanging(string value);
    partial void OncompanyCustomerChanged();
    #endregion
		
		public project()
		{
			this._contactPersonProjects = new EntitySet<contactPersonProject>(new Action<contactPersonProject>(this.attach_contactPersonProjects), new Action<contactPersonProject>(this.detach_contactPersonProjects));
			this._goodsReceipts = new EntitySet<goodsReceipt>(new Action<goodsReceipt>(this.attach_goodsReceipts), new Action<goodsReceipt>(this.detach_goodsReceipts));
			this._inspections = new EntitySet<inspection>(new Action<inspection>(this.attach_inspections), new Action<inspection>(this.detach_inspections));
			this._transportProjects = new EntitySet<transportProject>(new Action<transportProject>(this.attach_transportProjects), new Action<transportProject>(this.detach_transportProjects));
			this._deliveries = new EntitySet<delivery>(new Action<delivery>(this.attach_deliveries), new Action<delivery>(this.detach_deliveries));
			this._userRoles = new EntitySet<userRole>(new Action<userRole>(this.attach_userRoles), new Action<userRole>(this.detach_userRoles));
			this._company = default(EntityRef<company>);
			this._businessPartner = default(EntityRef<businessPartner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string projectCode
		{
			get
			{
				return this._projectCode;
			}
			set
			{
				if ((this._projectCode != value))
				{
					this.OnprojectCodeChanging(value);
					this.SendPropertyChanging();
					this._projectCode = value;
					this.SendPropertyChanged("projectCode");
					this.OnprojectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string projectName
		{
			get
			{
				return this._projectName;
			}
			set
			{
				if ((this._projectName != value))
				{
					this.OnprojectNameChanging(value);
					this.SendPropertyChanging();
					this._projectName = value;
					this.SendPropertyChanged("projectName");
					this.OnprojectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					if (this._company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessPartnerId", DbType="Int NOT NULL")]
		public int businessPartnerId
		{
			get
			{
				return this._businessPartnerId;
			}
			set
			{
				if ((this._businessPartnerId != value))
				{
					if (this._businessPartner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbusinessPartnerIdChanging(value);
					this.SendPropertyChanging();
					this._businessPartnerId = value;
					this.SendPropertyChanged("businessPartnerId");
					this.OnbusinessPartnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCustomer", DbType="VarChar(100)")]
		public string companyCustomer
		{
			get
			{
				return this._companyCustomer;
			}
			set
			{
				if ((this._companyCustomer != value))
				{
					this.OncompanyCustomerChanging(value);
					this.SendPropertyChanging();
					this._companyCustomer = value;
					this.SendPropertyChanged("companyCustomer");
					this.OncompanyCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_contactPersonProject", Storage="_contactPersonProjects", ThisKey="projectCode", OtherKey="projectCode")]
		public EntitySet<contactPersonProject> contactPersonProjects
		{
			get
			{
				return this._contactPersonProjects;
			}
			set
			{
				this._contactPersonProjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_goodsReceipt", Storage="_goodsReceipts", ThisKey="projectCode", OtherKey="projectCode")]
		public EntitySet<goodsReceipt> goodsReceipts
		{
			get
			{
				return this._goodsReceipts;
			}
			set
			{
				this._goodsReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_inspection", Storage="_inspections", ThisKey="projectCode", OtherKey="projectCode")]
		public EntitySet<inspection> inspections
		{
			get
			{
				return this._inspections;
			}
			set
			{
				this._inspections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_transportProject", Storage="_transportProjects", ThisKey="projectCode", OtherKey="projectCode")]
		public EntitySet<transportProject> transportProjects
		{
			get
			{
				return this._transportProjects;
			}
			set
			{
				this._transportProjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_delivery", Storage="_deliveries", ThisKey="projectCode", OtherKey="projectCode")]
		public EntitySet<delivery> deliveries
		{
			get
			{
				return this._deliveries;
			}
			set
			{
				this._deliveries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_userRole", Storage="_userRoles", ThisKey="projectCode", OtherKey="projectCode")]
		public EntitySet<userRole> userRoles
		{
			get
			{
				return this._userRoles;
			}
			set
			{
				this._userRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_project", Storage="_company", ThisKey="companyCode", OtherKey="companyCode", IsForeignKey=true)]
		public company company
		{
			get
			{
				return this._company.Entity;
			}
			set
			{
				company previousValue = this._company.Entity;
				if (((previousValue != value) 
							|| (this._company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._company.Entity = null;
						previousValue.projects.Remove(this);
					}
					this._company.Entity = value;
					if ((value != null))
					{
						value.projects.Add(this);
						this._companyCode = value.companyCode;
					}
					else
					{
						this._companyCode = default(string);
					}
					this.SendPropertyChanged("company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_project", Storage="_businessPartner", ThisKey="businessPartnerId", OtherKey="businessPartnerId", IsForeignKey=true)]
		public businessPartner businessPartner
		{
			get
			{
				return this._businessPartner.Entity;
			}
			set
			{
				businessPartner previousValue = this._businessPartner.Entity;
				if (((previousValue != value) 
							|| (this._businessPartner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._businessPartner.Entity = null;
						previousValue.projects.Remove(this);
					}
					this._businessPartner.Entity = value;
					if ((value != null))
					{
						value.projects.Add(this);
						this._businessPartnerId = value.businessPartnerId;
					}
					else
					{
						this._businessPartnerId = default(int);
					}
					this.SendPropertyChanged("businessPartner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contactPersonProjects(contactPersonProject entity)
		{
			this.SendPropertyChanging();
			entity.project = this;
		}
		
		private void detach_contactPersonProjects(contactPersonProject entity)
		{
			this.SendPropertyChanging();
			entity.project = null;
		}
		
		private void attach_goodsReceipts(goodsReceipt entity)
		{
			this.SendPropertyChanging();
			entity.project = this;
		}
		
		private void detach_goodsReceipts(goodsReceipt entity)
		{
			this.SendPropertyChanging();
			entity.project = null;
		}
		
		private void attach_inspections(inspection entity)
		{
			this.SendPropertyChanging();
			entity.project = this;
		}
		
		private void detach_inspections(inspection entity)
		{
			this.SendPropertyChanging();
			entity.project = null;
		}
		
		private void attach_transportProjects(transportProject entity)
		{
			this.SendPropertyChanging();
			entity.project = this;
		}
		
		private void detach_transportProjects(transportProject entity)
		{
			this.SendPropertyChanging();
			entity.project = null;
		}
		
		private void attach_deliveries(delivery entity)
		{
			this.SendPropertyChanging();
			entity.project = this;
		}
		
		private void detach_deliveries(delivery entity)
		{
			this.SendPropertyChanging();
			entity.project = null;
		}
		
		private void attach_userRoles(userRole entity)
		{
			this.SendPropertyChanging();
			entity.project = this;
		}
		
		private void detach_userRoles(userRole entity)
		{
			this.SendPropertyChanging();
			entity.project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.purchaseOrder")]
	public partial class purchaseOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _docId;
		
		private string _documentNumber;
		
		private string _companyCode;
		
		private int _businessPartnerId;
		
		private System.DateTime _timeStampCreated;
		
		private System.Nullable<System.DateTime> _timeStampLastUpdate;
		
		private string _docType;
		
		private System.DateTime _docDate;
		
		private string _projectCode;
		
		private System.Nullable<System.DateTime> _createDate;
		
		private string _docStatusCode;
		
		private System.Nullable<System.DateTime> _deliveryDate;
		
		private string _currencyCode;
		
		private System.Nullable<decimal> _currencyRate;
		
		private EntitySet<purchaseOrderLine> _purchaseOrderLines;
		
		private EntityRef<company> _company;
		
		private EntityRef<currency> _currency;
		
		private EntityRef<docStatus> _docStatus;
		
		private EntityRef<document> _document;
		
		private EntityRef<businessPartner> _businessPartner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndocIdChanging(int value);
    partial void OndocIdChanged();
    partial void OndocumentNumberChanging(string value);
    partial void OndocumentNumberChanged();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    partial void OnbusinessPartnerIdChanging(int value);
    partial void OnbusinessPartnerIdChanged();
    partial void OntimeStampCreatedChanging(System.DateTime value);
    partial void OntimeStampCreatedChanged();
    partial void OntimeStampLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OntimeStampLastUpdateChanged();
    partial void OndocTypeChanging(string value);
    partial void OndocTypeChanged();
    partial void OndocDateChanging(System.DateTime value);
    partial void OndocDateChanged();
    partial void OnprojectCodeChanging(string value);
    partial void OnprojectCodeChanged();
    partial void OncreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OncreateDateChanged();
    partial void OndocStatusCodeChanging(string value);
    partial void OndocStatusCodeChanged();
    partial void OndeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OndeliveryDateChanged();
    partial void OncurrencyCodeChanging(string value);
    partial void OncurrencyCodeChanged();
    partial void OncurrencyRateChanging(System.Nullable<decimal> value);
    partial void OncurrencyRateChanged();
    #endregion
		
		public purchaseOrder()
		{
			this._purchaseOrderLines = new EntitySet<purchaseOrderLine>(new Action<purchaseOrderLine>(this.attach_purchaseOrderLines), new Action<purchaseOrderLine>(this.detach_purchaseOrderLines));
			this._company = default(EntityRef<company>);
			this._currency = default(EntityRef<currency>);
			this._docStatus = default(EntityRef<docStatus>);
			this._document = default(EntityRef<document>);
			this._businessPartner = default(EntityRef<businessPartner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int docId
		{
			get
			{
				return this._docId;
			}
			set
			{
				if ((this._docId != value))
				{
					this.OndocIdChanging(value);
					this.SendPropertyChanging();
					this._docId = value;
					this.SendPropertyChanged("docId");
					this.OndocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string documentNumber
		{
			get
			{
				return this._documentNumber;
			}
			set
			{
				if ((this._documentNumber != value))
				{
					this.OndocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._documentNumber = value;
					this.SendPropertyChanged("documentNumber");
					this.OndocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					if (this._company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessPartnerId", DbType="Int NOT NULL")]
		public int businessPartnerId
		{
			get
			{
				return this._businessPartnerId;
			}
			set
			{
				if ((this._businessPartnerId != value))
				{
					if (this._businessPartner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbusinessPartnerIdChanging(value);
					this.SendPropertyChanging();
					this._businessPartnerId = value;
					this.SendPropertyChanged("businessPartnerId");
					this.OnbusinessPartnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStampCreated", DbType="DateTime NOT NULL")]
		public System.DateTime timeStampCreated
		{
			get
			{
				return this._timeStampCreated;
			}
			set
			{
				if ((this._timeStampCreated != value))
				{
					this.OntimeStampCreatedChanging(value);
					this.SendPropertyChanging();
					this._timeStampCreated = value;
					this.SendPropertyChanged("timeStampCreated");
					this.OntimeStampCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStampLastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> timeStampLastUpdate
		{
			get
			{
				return this._timeStampLastUpdate;
			}
			set
			{
				if ((this._timeStampLastUpdate != value))
				{
					this.OntimeStampLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._timeStampLastUpdate = value;
					this.SendPropertyChanged("timeStampLastUpdate");
					this.OntimeStampLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string docType
		{
			get
			{
				return this._docType;
			}
			set
			{
				if ((this._docType != value))
				{
					if (this._document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndocTypeChanging(value);
					this.SendPropertyChanging();
					this._docType = value;
					this.SendPropertyChanged("docType");
					this.OndocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docDate", DbType="DateTime NOT NULL")]
		public System.DateTime docDate
		{
			get
			{
				return this._docDate;
			}
			set
			{
				if ((this._docDate != value))
				{
					this.OndocDateChanging(value);
					this.SendPropertyChanging();
					this._docDate = value;
					this.SendPropertyChanged("docDate");
					this.OndocDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectCode", DbType="NVarChar(50)")]
		public string projectCode
		{
			get
			{
				return this._projectCode;
			}
			set
			{
				if ((this._projectCode != value))
				{
					this.OnprojectCodeChanging(value);
					this.SendPropertyChanging();
					this._projectCode = value;
					this.SendPropertyChanged("projectCode");
					this.OnprojectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this.OncreateDateChanging(value);
					this.SendPropertyChanging();
					this._createDate = value;
					this.SendPropertyChanged("createDate");
					this.OncreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docStatusCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string docStatusCode
		{
			get
			{
				return this._docStatusCode;
			}
			set
			{
				if ((this._docStatusCode != value))
				{
					if (this._docStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndocStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._docStatusCode = value;
					this.SendPropertyChanged("docStatusCode");
					this.OndocStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> deliveryDate
		{
			get
			{
				return this._deliveryDate;
			}
			set
			{
				if ((this._deliveryDate != value))
				{
					this.OndeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._deliveryDate = value;
					this.SendPropertyChanged("deliveryDate");
					this.OndeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string currencyCode
		{
			get
			{
				return this._currencyCode;
			}
			set
			{
				if ((this._currencyCode != value))
				{
					if (this._currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._currencyCode = value;
					this.SendPropertyChanged("currencyCode");
					this.OncurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyRate", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> currencyRate
		{
			get
			{
				return this._currencyRate;
			}
			set
			{
				if ((this._currencyRate != value))
				{
					this.OncurrencyRateChanging(value);
					this.SendPropertyChanging();
					this._currencyRate = value;
					this.SendPropertyChanged("currencyRate");
					this.OncurrencyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="purchaseOrder_purchaseOrderLine", Storage="_purchaseOrderLines", ThisKey="docId", OtherKey="docId")]
		public EntitySet<purchaseOrderLine> purchaseOrderLines
		{
			get
			{
				return this._purchaseOrderLines;
			}
			set
			{
				this._purchaseOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_purchaseOrder", Storage="_company", ThisKey="companyCode", OtherKey="companyCode", IsForeignKey=true)]
		public company company
		{
			get
			{
				return this._company.Entity;
			}
			set
			{
				company previousValue = this._company.Entity;
				if (((previousValue != value) 
							|| (this._company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._company.Entity = null;
						previousValue.purchaseOrders.Remove(this);
					}
					this._company.Entity = value;
					if ((value != null))
					{
						value.purchaseOrders.Add(this);
						this._companyCode = value.companyCode;
					}
					else
					{
						this._companyCode = default(string);
					}
					this.SendPropertyChanged("company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="currency_purchaseOrder", Storage="_currency", ThisKey="currencyCode", OtherKey="currencyCode", IsForeignKey=true)]
		public currency currency
		{
			get
			{
				return this._currency.Entity;
			}
			set
			{
				currency previousValue = this._currency.Entity;
				if (((previousValue != value) 
							|| (this._currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._currency.Entity = null;
						previousValue.purchaseOrders.Remove(this);
					}
					this._currency.Entity = value;
					if ((value != null))
					{
						value.purchaseOrders.Add(this);
						this._currencyCode = value.currencyCode;
					}
					else
					{
						this._currencyCode = default(string);
					}
					this.SendPropertyChanged("currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="docStatus_purchaseOrder", Storage="_docStatus", ThisKey="docStatusCode", OtherKey="docStatusCode", IsForeignKey=true)]
		public docStatus docStatus
		{
			get
			{
				return this._docStatus.Entity;
			}
			set
			{
				docStatus previousValue = this._docStatus.Entity;
				if (((previousValue != value) 
							|| (this._docStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._docStatus.Entity = null;
						previousValue.purchaseOrders.Remove(this);
					}
					this._docStatus.Entity = value;
					if ((value != null))
					{
						value.purchaseOrders.Add(this);
						this._docStatusCode = value.docStatusCode;
					}
					else
					{
						this._docStatusCode = default(string);
					}
					this.SendPropertyChanged("docStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_purchaseOrder", Storage="_document", ThisKey="docType", OtherKey="docType", IsForeignKey=true)]
		public document document
		{
			get
			{
				return this._document.Entity;
			}
			set
			{
				document previousValue = this._document.Entity;
				if (((previousValue != value) 
							|| (this._document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._document.Entity = null;
						previousValue.purchaseOrders.Remove(this);
					}
					this._document.Entity = value;
					if ((value != null))
					{
						value.purchaseOrders.Add(this);
						this._docType = value.docType;
					}
					else
					{
						this._docType = default(string);
					}
					this.SendPropertyChanged("document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_purchaseOrder", Storage="_businessPartner", ThisKey="businessPartnerId", OtherKey="businessPartnerId", IsForeignKey=true)]
		public businessPartner businessPartner
		{
			get
			{
				return this._businessPartner.Entity;
			}
			set
			{
				businessPartner previousValue = this._businessPartner.Entity;
				if (((previousValue != value) 
							|| (this._businessPartner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._businessPartner.Entity = null;
						previousValue.purchaseOrders.Remove(this);
					}
					this._businessPartner.Entity = value;
					if ((value != null))
					{
						value.purchaseOrders.Add(this);
						this._businessPartnerId = value.businessPartnerId;
					}
					else
					{
						this._businessPartnerId = default(int);
					}
					this.SendPropertyChanged("businessPartner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_purchaseOrderLines(purchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.purchaseOrder = this;
		}
		
		private void detach_purchaseOrderLines(purchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.purchaseOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.purchaseOrderLine")]
	public partial class purchaseOrderLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _docId;
		
		private int _lineNum;
		
		private int _itemId;
		
		private decimal _quantity;
		
		private decimal _openQuantity;
		
		private string _uomCode;
		
		private string _uomCodeOrg;
		
		private decimal _weight;
		
		private decimal _price;
		
		private decimal _lineTotal;
		
		private System.Nullable<System.DateTime> _deliveryDate;
		
		private string _lineTypeCode;
		
		private string _lineStatusCode;
		
		private string _docType;
		
		private System.Nullable<int> _baseDocId;
		
		private System.Nullable<int> _baseLineNum;
		
		private string _baseDocType;
		
		private EntitySet<goodsReceiptLine> _goodsReceiptLines;
		
		private EntitySet<inspectionLine> _inspectionLines;
		
		private EntityRef<document> _document;
		
		private EntityRef<lineStatus> _lineStatus;
		
		private EntityRef<lineType> _lineType;
		
		private EntityRef<purchaseOrder> _purchaseOrder;
		
		private EntityRef<unitOfMeasure> _unitOfMeasure;
		
		private EntityRef<unitOfMeasureOrg> _unitOfMeasureOrg;
		
		private EntityRef<item> _item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndocIdChanging(int value);
    partial void OndocIdChanged();
    partial void OnlineNumChanging(int value);
    partial void OnlineNumChanged();
    partial void OnitemIdChanging(int value);
    partial void OnitemIdChanged();
    partial void OnquantityChanging(decimal value);
    partial void OnquantityChanged();
    partial void OnopenQuantityChanging(decimal value);
    partial void OnopenQuantityChanged();
    partial void OnuomCodeChanging(string value);
    partial void OnuomCodeChanged();
    partial void OnuomCodeOrgChanging(string value);
    partial void OnuomCodeOrgChanged();
    partial void OnweightChanging(decimal value);
    partial void OnweightChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OnlineTotalChanging(decimal value);
    partial void OnlineTotalChanged();
    partial void OndeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OndeliveryDateChanged();
    partial void OnlineTypeCodeChanging(string value);
    partial void OnlineTypeCodeChanged();
    partial void OnlineStatusCodeChanging(string value);
    partial void OnlineStatusCodeChanged();
    partial void OndocTypeChanging(string value);
    partial void OndocTypeChanged();
    partial void OnbaseDocIdChanging(System.Nullable<int> value);
    partial void OnbaseDocIdChanged();
    partial void OnbaseLineNumChanging(System.Nullable<int> value);
    partial void OnbaseLineNumChanged();
    partial void OnbaseDocTypeChanging(string value);
    partial void OnbaseDocTypeChanged();
    #endregion
		
		public purchaseOrderLine()
		{
			this._goodsReceiptLines = new EntitySet<goodsReceiptLine>(new Action<goodsReceiptLine>(this.attach_goodsReceiptLines), new Action<goodsReceiptLine>(this.detach_goodsReceiptLines));
			this._inspectionLines = new EntitySet<inspectionLine>(new Action<inspectionLine>(this.attach_inspectionLines), new Action<inspectionLine>(this.detach_inspectionLines));
			this._document = default(EntityRef<document>);
			this._lineStatus = default(EntityRef<lineStatus>);
			this._lineType = default(EntityRef<lineType>);
			this._purchaseOrder = default(EntityRef<purchaseOrder>);
			this._unitOfMeasure = default(EntityRef<unitOfMeasure>);
			this._unitOfMeasureOrg = default(EntityRef<unitOfMeasureOrg>);
			this._item = default(EntityRef<item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int docId
		{
			get
			{
				return this._docId;
			}
			set
			{
				if ((this._docId != value))
				{
					if (this._purchaseOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndocIdChanging(value);
					this.SendPropertyChanging();
					this._docId = value;
					this.SendPropertyChanged("docId");
					this.OndocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int lineNum
		{
			get
			{
				return this._lineNum;
			}
			set
			{
				if ((this._lineNum != value))
				{
					this.OnlineNumChanging(value);
					this.SendPropertyChanging();
					this._lineNum = value;
					this.SendPropertyChanged("lineNum");
					this.OnlineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemId", DbType="Int NOT NULL")]
		public int itemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					if (this._item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnitemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("itemId");
					this.OnitemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Decimal(20,6) NOT NULL")]
		public decimal quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openQuantity", DbType="Decimal(20,6) NOT NULL")]
		public decimal openQuantity
		{
			get
			{
				return this._openQuantity;
			}
			set
			{
				if ((this._openQuantity != value))
				{
					this.OnopenQuantityChanging(value);
					this.SendPropertyChanging();
					this._openQuantity = value;
					this.SendPropertyChanged("openQuantity");
					this.OnopenQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string uomCode
		{
			get
			{
				return this._uomCode;
			}
			set
			{
				if ((this._uomCode != value))
				{
					if (this._unitOfMeasure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuomCodeChanging(value);
					this.SendPropertyChanging();
					this._uomCode = value;
					this.SendPropertyChanged("uomCode");
					this.OnuomCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomCodeOrg", DbType="NVarChar(50)")]
		public string uomCodeOrg
		{
			get
			{
				return this._uomCodeOrg;
			}
			set
			{
				if ((this._uomCodeOrg != value))
				{
					if (this._unitOfMeasureOrg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuomCodeOrgChanging(value);
					this.SendPropertyChanging();
					this._uomCodeOrg = value;
					this.SendPropertyChanged("uomCodeOrg");
					this.OnuomCodeOrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Decimal(20,6) NOT NULL")]
		public decimal weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(20,6) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineTotal", DbType="Decimal(20,6) NOT NULL")]
		public decimal lineTotal
		{
			get
			{
				return this._lineTotal;
			}
			set
			{
				if ((this._lineTotal != value))
				{
					this.OnlineTotalChanging(value);
					this.SendPropertyChanging();
					this._lineTotal = value;
					this.SendPropertyChanged("lineTotal");
					this.OnlineTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> deliveryDate
		{
			get
			{
				return this._deliveryDate;
			}
			set
			{
				if ((this._deliveryDate != value))
				{
					this.OndeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._deliveryDate = value;
					this.SendPropertyChanged("deliveryDate");
					this.OndeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineTypeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lineTypeCode
		{
			get
			{
				return this._lineTypeCode;
			}
			set
			{
				if ((this._lineTypeCode != value))
				{
					if (this._lineType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlineTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._lineTypeCode = value;
					this.SendPropertyChanged("lineTypeCode");
					this.OnlineTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineStatusCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string lineStatusCode
		{
			get
			{
				return this._lineStatusCode;
			}
			set
			{
				if ((this._lineStatusCode != value))
				{
					if (this._lineStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlineStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._lineStatusCode = value;
					this.SendPropertyChanged("lineStatusCode");
					this.OnlineStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string docType
		{
			get
			{
				return this._docType;
			}
			set
			{
				if ((this._docType != value))
				{
					if (this._document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndocTypeChanging(value);
					this.SendPropertyChanging();
					this._docType = value;
					this.SendPropertyChanged("docType");
					this.OndocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocId", DbType="Int")]
		public System.Nullable<int> baseDocId
		{
			get
			{
				return this._baseDocId;
			}
			set
			{
				if ((this._baseDocId != value))
				{
					this.OnbaseDocIdChanging(value);
					this.SendPropertyChanging();
					this._baseDocId = value;
					this.SendPropertyChanged("baseDocId");
					this.OnbaseDocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseLineNum", DbType="Int")]
		public System.Nullable<int> baseLineNum
		{
			get
			{
				return this._baseLineNum;
			}
			set
			{
				if ((this._baseLineNum != value))
				{
					this.OnbaseLineNumChanging(value);
					this.SendPropertyChanging();
					this._baseLineNum = value;
					this.SendPropertyChanged("baseLineNum");
					this.OnbaseLineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocType", DbType="VarChar(255)")]
		public string baseDocType
		{
			get
			{
				return this._baseDocType;
			}
			set
			{
				if ((this._baseDocType != value))
				{
					this.OnbaseDocTypeChanging(value);
					this.SendPropertyChanging();
					this._baseDocType = value;
					this.SendPropertyChanged("baseDocType");
					this.OnbaseDocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="purchaseOrderLine_goodsReceiptLine", Storage="_goodsReceiptLines", ThisKey="docId,lineNum", OtherKey="baseDocId,baseLineNum")]
		public EntitySet<goodsReceiptLine> goodsReceiptLines
		{
			get
			{
				return this._goodsReceiptLines;
			}
			set
			{
				this._goodsReceiptLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="purchaseOrderLine_inspectionLine", Storage="_inspectionLines", ThisKey="docId,lineNum", OtherKey="baseDocId,baseLineNum")]
		public EntitySet<inspectionLine> inspectionLines
		{
			get
			{
				return this._inspectionLines;
			}
			set
			{
				this._inspectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_purchaseOrderLine", Storage="_document", ThisKey="docType", OtherKey="docType", IsForeignKey=true)]
		public document document
		{
			get
			{
				return this._document.Entity;
			}
			set
			{
				document previousValue = this._document.Entity;
				if (((previousValue != value) 
							|| (this._document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._document.Entity = null;
						previousValue.purchaseOrderLines.Remove(this);
					}
					this._document.Entity = value;
					if ((value != null))
					{
						value.purchaseOrderLines.Add(this);
						this._docType = value.docType;
					}
					else
					{
						this._docType = default(string);
					}
					this.SendPropertyChanged("document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lineStatus_purchaseOrderLine", Storage="_lineStatus", ThisKey="lineStatusCode", OtherKey="lineStatusCode", IsForeignKey=true)]
		public lineStatus lineStatus
		{
			get
			{
				return this._lineStatus.Entity;
			}
			set
			{
				lineStatus previousValue = this._lineStatus.Entity;
				if (((previousValue != value) 
							|| (this._lineStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lineStatus.Entity = null;
						previousValue.purchaseOrderLines.Remove(this);
					}
					this._lineStatus.Entity = value;
					if ((value != null))
					{
						value.purchaseOrderLines.Add(this);
						this._lineStatusCode = value.lineStatusCode;
					}
					else
					{
						this._lineStatusCode = default(string);
					}
					this.SendPropertyChanged("lineStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lineType_purchaseOrderLine", Storage="_lineType", ThisKey="lineTypeCode", OtherKey="lineTypeCode", IsForeignKey=true)]
		public lineType lineType
		{
			get
			{
				return this._lineType.Entity;
			}
			set
			{
				lineType previousValue = this._lineType.Entity;
				if (((previousValue != value) 
							|| (this._lineType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lineType.Entity = null;
						previousValue.purchaseOrderLines.Remove(this);
					}
					this._lineType.Entity = value;
					if ((value != null))
					{
						value.purchaseOrderLines.Add(this);
						this._lineTypeCode = value.lineTypeCode;
					}
					else
					{
						this._lineTypeCode = default(string);
					}
					this.SendPropertyChanged("lineType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="purchaseOrder_purchaseOrderLine", Storage="_purchaseOrder", ThisKey="docId", OtherKey="docId", IsForeignKey=true)]
		public purchaseOrder purchaseOrder
		{
			get
			{
				return this._purchaseOrder.Entity;
			}
			set
			{
				purchaseOrder previousValue = this._purchaseOrder.Entity;
				if (((previousValue != value) 
							|| (this._purchaseOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._purchaseOrder.Entity = null;
						previousValue.purchaseOrderLines.Remove(this);
					}
					this._purchaseOrder.Entity = value;
					if ((value != null))
					{
						value.purchaseOrderLines.Add(this);
						this._docId = value.docId;
					}
					else
					{
						this._docId = default(int);
					}
					this.SendPropertyChanged("purchaseOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasure_purchaseOrderLine", Storage="_unitOfMeasure", ThisKey="uomCode", OtherKey="uomCode", IsForeignKey=true)]
		public unitOfMeasure unitOfMeasure
		{
			get
			{
				return this._unitOfMeasure.Entity;
			}
			set
			{
				unitOfMeasure previousValue = this._unitOfMeasure.Entity;
				if (((previousValue != value) 
							|| (this._unitOfMeasure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._unitOfMeasure.Entity = null;
						previousValue.purchaseOrderLines.Remove(this);
					}
					this._unitOfMeasure.Entity = value;
					if ((value != null))
					{
						value.purchaseOrderLines.Add(this);
						this._uomCode = value.uomCode;
					}
					else
					{
						this._uomCode = default(string);
					}
					this.SendPropertyChanged("unitOfMeasure");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasureOrg_purchaseOrderLine", Storage="_unitOfMeasureOrg", ThisKey="uomCodeOrg", OtherKey="uomCode", IsForeignKey=true)]
		public unitOfMeasureOrg unitOfMeasureOrg
		{
			get
			{
				return this._unitOfMeasureOrg.Entity;
			}
			set
			{
				unitOfMeasureOrg previousValue = this._unitOfMeasureOrg.Entity;
				if (((previousValue != value) 
							|| (this._unitOfMeasureOrg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._unitOfMeasureOrg.Entity = null;
						previousValue.purchaseOrderLines.Remove(this);
					}
					this._unitOfMeasureOrg.Entity = value;
					if ((value != null))
					{
						value.purchaseOrderLines.Add(this);
						this._uomCodeOrg = value.uomCode;
					}
					else
					{
						this._uomCodeOrg = default(string);
					}
					this.SendPropertyChanged("unitOfMeasureOrg");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_purchaseOrderLine", Storage="_item", ThisKey="itemId", OtherKey="itemId", IsForeignKey=true)]
		public item item
		{
			get
			{
				return this._item.Entity;
			}
			set
			{
				item previousValue = this._item.Entity;
				if (((previousValue != value) 
							|| (this._item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item.Entity = null;
						previousValue.purchaseOrderLines.Remove(this);
					}
					this._item.Entity = value;
					if ((value != null))
					{
						value.purchaseOrderLines.Add(this);
						this._itemId = value.itemId;
					}
					else
					{
						this._itemId = default(int);
					}
					this.SendPropertyChanged("item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_goodsReceiptLines(goodsReceiptLine entity)
		{
			this.SendPropertyChanging();
			entity.purchaseOrderLine = this;
		}
		
		private void detach_goodsReceiptLines(goodsReceiptLine entity)
		{
			this.SendPropertyChanging();
			entity.purchaseOrderLine = null;
		}
		
		private void attach_inspectionLines(inspectionLine entity)
		{
			this.SendPropertyChanging();
			entity.purchaseOrderLine = this;
		}
		
		private void detach_inspectionLines(inspectionLine entity)
		{
			this.SendPropertyChanging();
			entity.purchaseOrderLine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RoleId;
		
		private System.Guid _ApplicationId;
		
		private string _RoleName;
		
		private string _Description;
		
		private EntitySet<applicationAccess> _applicationAccesses;
		
		private EntitySet<UsersInRole> _UsersInRoles;
		
		private EntityRef<Application1> _Application1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Role()
		{
			this._applicationAccesses = new EntitySet<applicationAccess>(new Action<applicationAccess>(this.attach_applicationAccesses), new Action<applicationAccess>(this.detach_applicationAccesses));
			this._UsersInRoles = new EntitySet<UsersInRole>(new Action<UsersInRole>(this.attach_UsersInRoles), new Action<UsersInRole>(this.detach_UsersInRoles));
			this._Application1 = default(EntityRef<Application1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._Application1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_applicationAccess", Storage="_applicationAccesses", ThisKey="RoleId", OtherKey="roleId")]
		public EntitySet<applicationAccess> applicationAccesses
		{
			get
			{
				return this._applicationAccesses;
			}
			set
			{
				this._applicationAccesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UsersInRole", Storage="_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<UsersInRole> UsersInRoles
		{
			get
			{
				return this._UsersInRoles;
			}
			set
			{
				this._UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application1_Role", Storage="_Application1", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public Application1 Application1
		{
			get
			{
				return this._Application1.Entity;
			}
			set
			{
				Application1 previousValue = this._Application1.Entity;
				if (((previousValue != value) 
							|| (this._Application1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application1.Entity = null;
						previousValue.Roles.Remove(this);
					}
					this._Application1.Entity = value;
					if ((value != null))
					{
						value.Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Application1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_applicationAccesses(applicationAccess entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_applicationAccesses(applicationAccess entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.salesOrder")]
	public partial class salesOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _docId;
		
		private string _documentNumber;
		
		private string _companyCode;
		
		private int _businessPartnerId;
		
		private System.DateTime _timeStampCreated;
		
		private System.Nullable<System.DateTime> _timeStampLastUpdate;
		
		private string _docType;
		
		private System.DateTime _docDate;
		
		private string _customerReference;
		
		private string _projectCode;
		
		private System.DateTime _createDate;
		
		private string _docStatusCode;
		
		private System.Nullable<System.DateTime> _deliveryDate;
		
		private string _currencyCode;
		
		private System.Nullable<decimal> _currencyRate;
		
		private EntitySet<salesOrderLine> _salesOrderLines;
		
		private EntityRef<currency> _currency;
		
		private EntityRef<company> _company;
		
		private EntityRef<docStatus> _docStatus;
		
		private EntityRef<document> _document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndocIdChanging(int value);
    partial void OndocIdChanged();
    partial void OndocumentNumberChanging(string value);
    partial void OndocumentNumberChanged();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    partial void OnbusinessPartnerIdChanging(int value);
    partial void OnbusinessPartnerIdChanged();
    partial void OntimeStampCreatedChanging(System.DateTime value);
    partial void OntimeStampCreatedChanged();
    partial void OntimeStampLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OntimeStampLastUpdateChanged();
    partial void OndocTypeChanging(string value);
    partial void OndocTypeChanged();
    partial void OndocDateChanging(System.DateTime value);
    partial void OndocDateChanged();
    partial void OncustomerReferenceChanging(string value);
    partial void OncustomerReferenceChanged();
    partial void OnprojectCodeChanging(string value);
    partial void OnprojectCodeChanged();
    partial void OncreateDateChanging(System.DateTime value);
    partial void OncreateDateChanged();
    partial void OndocStatusCodeChanging(string value);
    partial void OndocStatusCodeChanged();
    partial void OndeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OndeliveryDateChanged();
    partial void OncurrencyCodeChanging(string value);
    partial void OncurrencyCodeChanged();
    partial void OncurrencyRateChanging(System.Nullable<decimal> value);
    partial void OncurrencyRateChanged();
    #endregion
		
		public salesOrder()
		{
			this._salesOrderLines = new EntitySet<salesOrderLine>(new Action<salesOrderLine>(this.attach_salesOrderLines), new Action<salesOrderLine>(this.detach_salesOrderLines));
			this._currency = default(EntityRef<currency>);
			this._company = default(EntityRef<company>);
			this._docStatus = default(EntityRef<docStatus>);
			this._document = default(EntityRef<document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int docId
		{
			get
			{
				return this._docId;
			}
			set
			{
				if ((this._docId != value))
				{
					this.OndocIdChanging(value);
					this.SendPropertyChanging();
					this._docId = value;
					this.SendPropertyChanged("docId");
					this.OndocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string documentNumber
		{
			get
			{
				return this._documentNumber;
			}
			set
			{
				if ((this._documentNumber != value))
				{
					this.OndocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._documentNumber = value;
					this.SendPropertyChanged("documentNumber");
					this.OndocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					if (this._company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessPartnerId", DbType="Int NOT NULL")]
		public int businessPartnerId
		{
			get
			{
				return this._businessPartnerId;
			}
			set
			{
				if ((this._businessPartnerId != value))
				{
					this.OnbusinessPartnerIdChanging(value);
					this.SendPropertyChanging();
					this._businessPartnerId = value;
					this.SendPropertyChanged("businessPartnerId");
					this.OnbusinessPartnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStampCreated", DbType="DateTime NOT NULL")]
		public System.DateTime timeStampCreated
		{
			get
			{
				return this._timeStampCreated;
			}
			set
			{
				if ((this._timeStampCreated != value))
				{
					this.OntimeStampCreatedChanging(value);
					this.SendPropertyChanging();
					this._timeStampCreated = value;
					this.SendPropertyChanged("timeStampCreated");
					this.OntimeStampCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStampLastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> timeStampLastUpdate
		{
			get
			{
				return this._timeStampLastUpdate;
			}
			set
			{
				if ((this._timeStampLastUpdate != value))
				{
					this.OntimeStampLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._timeStampLastUpdate = value;
					this.SendPropertyChanged("timeStampLastUpdate");
					this.OntimeStampLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string docType
		{
			get
			{
				return this._docType;
			}
			set
			{
				if ((this._docType != value))
				{
					if (this._document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndocTypeChanging(value);
					this.SendPropertyChanging();
					this._docType = value;
					this.SendPropertyChanged("docType");
					this.OndocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docDate", DbType="DateTime NOT NULL")]
		public System.DateTime docDate
		{
			get
			{
				return this._docDate;
			}
			set
			{
				if ((this._docDate != value))
				{
					this.OndocDateChanging(value);
					this.SendPropertyChanging();
					this._docDate = value;
					this.SendPropertyChanged("docDate");
					this.OndocDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerReference", DbType="VarChar(255)")]
		public string customerReference
		{
			get
			{
				return this._customerReference;
			}
			set
			{
				if ((this._customerReference != value))
				{
					this.OncustomerReferenceChanging(value);
					this.SendPropertyChanging();
					this._customerReference = value;
					this.SendPropertyChanged("customerReference");
					this.OncustomerReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectCode", DbType="NVarChar(50)")]
		public string projectCode
		{
			get
			{
				return this._projectCode;
			}
			set
			{
				if ((this._projectCode != value))
				{
					this.OnprojectCodeChanging(value);
					this.SendPropertyChanging();
					this._projectCode = value;
					this.SendPropertyChanged("projectCode");
					this.OnprojectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="DateTime NOT NULL")]
		public System.DateTime createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this.OncreateDateChanging(value);
					this.SendPropertyChanging();
					this._createDate = value;
					this.SendPropertyChanged("createDate");
					this.OncreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docStatusCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string docStatusCode
		{
			get
			{
				return this._docStatusCode;
			}
			set
			{
				if ((this._docStatusCode != value))
				{
					if (this._docStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndocStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._docStatusCode = value;
					this.SendPropertyChanged("docStatusCode");
					this.OndocStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> deliveryDate
		{
			get
			{
				return this._deliveryDate;
			}
			set
			{
				if ((this._deliveryDate != value))
				{
					this.OndeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._deliveryDate = value;
					this.SendPropertyChanged("deliveryDate");
					this.OndeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string currencyCode
		{
			get
			{
				return this._currencyCode;
			}
			set
			{
				if ((this._currencyCode != value))
				{
					if (this._currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._currencyCode = value;
					this.SendPropertyChanged("currencyCode");
					this.OncurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyRate", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> currencyRate
		{
			get
			{
				return this._currencyRate;
			}
			set
			{
				if ((this._currencyRate != value))
				{
					this.OncurrencyRateChanging(value);
					this.SendPropertyChanging();
					this._currencyRate = value;
					this.SendPropertyChanged("currencyRate");
					this.OncurrencyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="salesOrder_salesOrderLine", Storage="_salesOrderLines", ThisKey="docId", OtherKey="docId")]
		public EntitySet<salesOrderLine> salesOrderLines
		{
			get
			{
				return this._salesOrderLines;
			}
			set
			{
				this._salesOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="currency_salesOrder", Storage="_currency", ThisKey="currencyCode", OtherKey="currencyCode", IsForeignKey=true)]
		public currency currency
		{
			get
			{
				return this._currency.Entity;
			}
			set
			{
				currency previousValue = this._currency.Entity;
				if (((previousValue != value) 
							|| (this._currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._currency.Entity = null;
						previousValue.salesOrders.Remove(this);
					}
					this._currency.Entity = value;
					if ((value != null))
					{
						value.salesOrders.Add(this);
						this._currencyCode = value.currencyCode;
					}
					else
					{
						this._currencyCode = default(string);
					}
					this.SendPropertyChanged("currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_salesOrder", Storage="_company", ThisKey="companyCode", OtherKey="companyCode", IsForeignKey=true)]
		public company company
		{
			get
			{
				return this._company.Entity;
			}
			set
			{
				company previousValue = this._company.Entity;
				if (((previousValue != value) 
							|| (this._company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._company.Entity = null;
						previousValue.salesOrders.Remove(this);
					}
					this._company.Entity = value;
					if ((value != null))
					{
						value.salesOrders.Add(this);
						this._companyCode = value.companyCode;
					}
					else
					{
						this._companyCode = default(string);
					}
					this.SendPropertyChanged("company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="docStatus_salesOrder", Storage="_docStatus", ThisKey="docStatusCode", OtherKey="docStatusCode", IsForeignKey=true)]
		public docStatus docStatus
		{
			get
			{
				return this._docStatus.Entity;
			}
			set
			{
				docStatus previousValue = this._docStatus.Entity;
				if (((previousValue != value) 
							|| (this._docStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._docStatus.Entity = null;
						previousValue.salesOrders.Remove(this);
					}
					this._docStatus.Entity = value;
					if ((value != null))
					{
						value.salesOrders.Add(this);
						this._docStatusCode = value.docStatusCode;
					}
					else
					{
						this._docStatusCode = default(string);
					}
					this.SendPropertyChanged("docStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_salesOrder", Storage="_document", ThisKey="docType", OtherKey="docType", IsForeignKey=true)]
		public document document
		{
			get
			{
				return this._document.Entity;
			}
			set
			{
				document previousValue = this._document.Entity;
				if (((previousValue != value) 
							|| (this._document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._document.Entity = null;
						previousValue.salesOrders.Remove(this);
					}
					this._document.Entity = value;
					if ((value != null))
					{
						value.salesOrders.Add(this);
						this._docType = value.docType;
					}
					else
					{
						this._docType = default(string);
					}
					this.SendPropertyChanged("document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_salesOrderLines(salesOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.salesOrder = this;
		}
		
		private void detach_salesOrderLines(salesOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.salesOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.shoppingCart")]
	public partial class shoppingCart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _userId;
		
		private int _itemId;
		
		private string _companyCode;
		
		private string _applicationCode;
		
		private EntityRef<application> _application;
		
		private EntityRef<company> _company;
		
		private EntityRef<User> _User;
		
		private EntityRef<item> _item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OnitemIdChanging(int value);
    partial void OnitemIdChanged();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    partial void OnapplicationCodeChanging(string value);
    partial void OnapplicationCodeChanged();
    #endregion
		
		public shoppingCart()
		{
			this._application = default(EntityRef<application>);
			this._company = default(EntityRef<company>);
			this._User = default(EntityRef<User>);
			this._item = default(EntityRef<item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int itemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					if (this._item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnitemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("itemId");
					this.OnitemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					if (this._company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_applicationCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string applicationCode
		{
			get
			{
				return this._applicationCode;
			}
			set
			{
				if ((this._applicationCode != value))
				{
					if (this._application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnapplicationCodeChanging(value);
					this.SendPropertyChanging();
					this._applicationCode = value;
					this.SendPropertyChanged("applicationCode");
					this.OnapplicationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="application_shoppingCart", Storage="_application", ThisKey="applicationCode", OtherKey="applicationCode", IsForeignKey=true)]
		public application application
		{
			get
			{
				return this._application.Entity;
			}
			set
			{
				application previousValue = this._application.Entity;
				if (((previousValue != value) 
							|| (this._application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._application.Entity = null;
						previousValue.shoppingCarts.Remove(this);
					}
					this._application.Entity = value;
					if ((value != null))
					{
						value.shoppingCarts.Add(this);
						this._applicationCode = value.applicationCode;
					}
					else
					{
						this._applicationCode = default(string);
					}
					this.SendPropertyChanged("application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_shoppingCart", Storage="_company", ThisKey="companyCode", OtherKey="companyCode", IsForeignKey=true)]
		public company company
		{
			get
			{
				return this._company.Entity;
			}
			set
			{
				company previousValue = this._company.Entity;
				if (((previousValue != value) 
							|| (this._company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._company.Entity = null;
						previousValue.shoppingCarts.Remove(this);
					}
					this._company.Entity = value;
					if ((value != null))
					{
						value.shoppingCarts.Add(this);
						this._companyCode = value.companyCode;
					}
					else
					{
						this._companyCode = default(string);
					}
					this.SendPropertyChanged("company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_shoppingCart", Storage="_User", ThisKey="userId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.shoppingCarts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.shoppingCarts.Add(this);
						this._userId = value.UserId;
					}
					else
					{
						this._userId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_shoppingCart", Storage="_item", ThisKey="itemId", OtherKey="itemId", IsForeignKey=true)]
		public item item
		{
			get
			{
				return this._item.Entity;
			}
			set
			{
				item previousValue = this._item.Entity;
				if (((previousValue != value) 
							|| (this._item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item.Entity = null;
						previousValue.shoppingCarts.Remove(this);
					}
					this._item.Entity = value;
					if ((value != null))
					{
						value.shoppingCarts.Add(this);
						this._itemId = value.itemId;
					}
					else
					{
						this._itemId = default(int);
					}
					this.SendPropertyChanged("item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stock")]
	public partial class stock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _warehouseId;
		
		private int _itemId;
		
		private System.Nullable<decimal> _stockAvailable;
		
		private System.Nullable<decimal> _stockOnHand;
		
		private System.DateTime _timeStampCreated;
		
		private System.Nullable<System.DateTime> _timeStampLastUpdate;
		
		private decimal _avaragePrice;
		
		private EntityRef<warehouse> _warehouse;
		
		private EntityRef<item> _item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnwarehouseIdChanging(int value);
    partial void OnwarehouseIdChanged();
    partial void OnitemIdChanging(int value);
    partial void OnitemIdChanged();
    partial void OnstockAvailableChanging(System.Nullable<decimal> value);
    partial void OnstockAvailableChanged();
    partial void OnstockOnHandChanging(System.Nullable<decimal> value);
    partial void OnstockOnHandChanged();
    partial void OntimeStampCreatedChanging(System.DateTime value);
    partial void OntimeStampCreatedChanged();
    partial void OntimeStampLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OntimeStampLastUpdateChanged();
    partial void OnavaragePriceChanging(decimal value);
    partial void OnavaragePriceChanged();
    #endregion
		
		public stock()
		{
			this._warehouse = default(EntityRef<warehouse>);
			this._item = default(EntityRef<item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouseId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int warehouseId
		{
			get
			{
				return this._warehouseId;
			}
			set
			{
				if ((this._warehouseId != value))
				{
					if (this._warehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._warehouseId = value;
					this.SendPropertyChanged("warehouseId");
					this.OnwarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int itemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					if (this._item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnitemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("itemId");
					this.OnitemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stockAvailable", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> stockAvailable
		{
			get
			{
				return this._stockAvailable;
			}
			set
			{
				if ((this._stockAvailable != value))
				{
					this.OnstockAvailableChanging(value);
					this.SendPropertyChanging();
					this._stockAvailable = value;
					this.SendPropertyChanged("stockAvailable");
					this.OnstockAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stockOnHand", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> stockOnHand
		{
			get
			{
				return this._stockOnHand;
			}
			set
			{
				if ((this._stockOnHand != value))
				{
					this.OnstockOnHandChanging(value);
					this.SendPropertyChanging();
					this._stockOnHand = value;
					this.SendPropertyChanged("stockOnHand");
					this.OnstockOnHandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStampCreated", DbType="DateTime NOT NULL")]
		public System.DateTime timeStampCreated
		{
			get
			{
				return this._timeStampCreated;
			}
			set
			{
				if ((this._timeStampCreated != value))
				{
					this.OntimeStampCreatedChanging(value);
					this.SendPropertyChanging();
					this._timeStampCreated = value;
					this.SendPropertyChanged("timeStampCreated");
					this.OntimeStampCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStampLastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> timeStampLastUpdate
		{
			get
			{
				return this._timeStampLastUpdate;
			}
			set
			{
				if ((this._timeStampLastUpdate != value))
				{
					this.OntimeStampLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._timeStampLastUpdate = value;
					this.SendPropertyChanged("timeStampLastUpdate");
					this.OntimeStampLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avaragePrice", DbType="Decimal(20,6) NOT NULL")]
		public decimal avaragePrice
		{
			get
			{
				return this._avaragePrice;
			}
			set
			{
				if ((this._avaragePrice != value))
				{
					this.OnavaragePriceChanging(value);
					this.SendPropertyChanging();
					this._avaragePrice = value;
					this.SendPropertyChanged("avaragePrice");
					this.OnavaragePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="warehouse_stock", Storage="_warehouse", ThisKey="warehouseId", OtherKey="warehouseId", IsForeignKey=true)]
		public warehouse warehouse
		{
			get
			{
				return this._warehouse.Entity;
			}
			set
			{
				warehouse previousValue = this._warehouse.Entity;
				if (((previousValue != value) 
							|| (this._warehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._warehouse.Entity = null;
						previousValue.stocks.Remove(this);
					}
					this._warehouse.Entity = value;
					if ((value != null))
					{
						value.stocks.Add(this);
						this._warehouseId = value.warehouseId;
					}
					else
					{
						this._warehouseId = default(int);
					}
					this.SendPropertyChanged("warehouse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_stock", Storage="_item", ThisKey="itemId", OtherKey="itemId", IsForeignKey=true)]
		public item item
		{
			get
			{
				return this._item.Entity;
			}
			set
			{
				item previousValue = this._item.Entity;
				if (((previousValue != value) 
							|| (this._item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item.Entity = null;
						previousValue.stocks.Remove(this);
					}
					this._item.Entity = value;
					if ((value != null))
					{
						value.stocks.Add(this);
						this._itemId = value.itemId;
					}
					else
					{
						this._itemId = default(int);
					}
					this.SendPropertyChanged("item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.translate")]
	public partial class translate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _translation;
		
		private string _nameTable;
		
		private string _nameField;
		
		private string _primaryKey;
		
		private string _languageCode;
		
		private EntityRef<language> _language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntranslationChanging(string value);
    partial void OntranslationChanged();
    partial void OnnameTableChanging(string value);
    partial void OnnameTableChanged();
    partial void OnnameFieldChanging(string value);
    partial void OnnameFieldChanged();
    partial void OnprimaryKeyChanging(string value);
    partial void OnprimaryKeyChanged();
    partial void OnlanguageCodeChanging(string value);
    partial void OnlanguageCodeChanged();
    #endregion
		
		public translate()
		{
			this._language = default(EntityRef<language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_translation", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string translation
		{
			get
			{
				return this._translation;
			}
			set
			{
				if ((this._translation != value))
				{
					this.OntranslationChanging(value);
					this.SendPropertyChanging();
					this._translation = value;
					this.SendPropertyChanged("translation");
					this.OntranslationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameTable", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nameTable
		{
			get
			{
				return this._nameTable;
			}
			set
			{
				if ((this._nameTable != value))
				{
					this.OnnameTableChanging(value);
					this.SendPropertyChanging();
					this._nameTable = value;
					this.SendPropertyChanged("nameTable");
					this.OnnameTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameField", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nameField
		{
			get
			{
				return this._nameField;
			}
			set
			{
				if ((this._nameField != value))
				{
					this.OnnameFieldChanging(value);
					this.SendPropertyChanging();
					this._nameField = value;
					this.SendPropertyChanged("nameField");
					this.OnnameFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primaryKey", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string primaryKey
		{
			get
			{
				return this._primaryKey;
			}
			set
			{
				if ((this._primaryKey != value))
				{
					this.OnprimaryKeyChanging(value);
					this.SendPropertyChanging();
					this._primaryKey = value;
					this.SendPropertyChanged("primaryKey");
					this.OnprimaryKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_languageCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string languageCode
		{
			get
			{
				return this._languageCode;
			}
			set
			{
				if ((this._languageCode != value))
				{
					if (this._language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._languageCode = value;
					this.SendPropertyChanged("languageCode");
					this.OnlanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="language_translate", Storage="_language", ThisKey="languageCode", OtherKey="languageCode", IsForeignKey=true)]
		public language language
		{
			get
			{
				return this._language.Entity;
			}
			set
			{
				language previousValue = this._language.Entity;
				if (((previousValue != value) 
							|| (this._language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._language.Entity = null;
						previousValue.translates.Remove(this);
					}
					this._language.Entity = value;
					if ((value != null))
					{
						value.translates.Add(this);
						this._languageCode = value.languageCode;
					}
					else
					{
						this._languageCode = default(string);
					}
					this.SendPropertyChanged("language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.transport")]
	public partial class transport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _transportId;
		
		private decimal _quantity;
		
		private string _uomCode;
		
		private int _baseDocId;
		
		private int _baseLineNum;
		
		private string _baseDocType;
		
		private System.Nullable<System.DateTime> _startDateEstimated;
		
		private System.Nullable<System.DateTime> _startDateActual;
		
		private System.Nullable<System.DateTime> _endDateEstimated;
		
		private System.Nullable<System.DateTime> _endDateActual;
		
		private string _transportTypeCode;
		
		private string _projectCode;
		
		private EntityRef<document> _document;
		
		private EntityRef<transportType> _transportType;
		
		private EntityRef<unitOfMeasure> _unitOfMeasure;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntransportIdChanging(int value);
    partial void OntransportIdChanged();
    partial void OnquantityChanging(decimal value);
    partial void OnquantityChanged();
    partial void OnuomCodeChanging(string value);
    partial void OnuomCodeChanged();
    partial void OnbaseDocIdChanging(int value);
    partial void OnbaseDocIdChanged();
    partial void OnbaseLineNumChanging(int value);
    partial void OnbaseLineNumChanged();
    partial void OnbaseDocTypeChanging(string value);
    partial void OnbaseDocTypeChanged();
    partial void OnstartDateEstimatedChanging(System.Nullable<System.DateTime> value);
    partial void OnstartDateEstimatedChanged();
    partial void OnstartDateActualChanging(System.Nullable<System.DateTime> value);
    partial void OnstartDateActualChanged();
    partial void OnendDateEstimatedChanging(System.Nullable<System.DateTime> value);
    partial void OnendDateEstimatedChanged();
    partial void OnendDateActualChanging(System.Nullable<System.DateTime> value);
    partial void OnendDateActualChanged();
    partial void OntransportTypeCodeChanging(string value);
    partial void OntransportTypeCodeChanged();
    partial void OnprojectCodeChanging(string value);
    partial void OnprojectCodeChanged();
    #endregion
		
		public transport()
		{
			this._document = default(EntityRef<document>);
			this._transportType = default(EntityRef<transportType>);
			this._unitOfMeasure = default(EntityRef<unitOfMeasure>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transportId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int transportId
		{
			get
			{
				return this._transportId;
			}
			set
			{
				if ((this._transportId != value))
				{
					this.OntransportIdChanging(value);
					this.SendPropertyChanging();
					this._transportId = value;
					this.SendPropertyChanged("transportId");
					this.OntransportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Decimal(20,6) NOT NULL")]
		public decimal quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string uomCode
		{
			get
			{
				return this._uomCode;
			}
			set
			{
				if ((this._uomCode != value))
				{
					if (this._unitOfMeasure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuomCodeChanging(value);
					this.SendPropertyChanging();
					this._uomCode = value;
					this.SendPropertyChanged("uomCode");
					this.OnuomCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocId", DbType="Int NOT NULL")]
		public int baseDocId
		{
			get
			{
				return this._baseDocId;
			}
			set
			{
				if ((this._baseDocId != value))
				{
					this.OnbaseDocIdChanging(value);
					this.SendPropertyChanging();
					this._baseDocId = value;
					this.SendPropertyChanged("baseDocId");
					this.OnbaseDocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseLineNum", DbType="Int NOT NULL")]
		public int baseLineNum
		{
			get
			{
				return this._baseLineNum;
			}
			set
			{
				if ((this._baseLineNum != value))
				{
					this.OnbaseLineNumChanging(value);
					this.SendPropertyChanging();
					this._baseLineNum = value;
					this.SendPropertyChanged("baseLineNum");
					this.OnbaseLineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string baseDocType
		{
			get
			{
				return this._baseDocType;
			}
			set
			{
				if ((this._baseDocType != value))
				{
					if (this._document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbaseDocTypeChanging(value);
					this.SendPropertyChanging();
					this._baseDocType = value;
					this.SendPropertyChanged("baseDocType");
					this.OnbaseDocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDateEstimated", DbType="DateTime")]
		public System.Nullable<System.DateTime> startDateEstimated
		{
			get
			{
				return this._startDateEstimated;
			}
			set
			{
				if ((this._startDateEstimated != value))
				{
					this.OnstartDateEstimatedChanging(value);
					this.SendPropertyChanging();
					this._startDateEstimated = value;
					this.SendPropertyChanged("startDateEstimated");
					this.OnstartDateEstimatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDateActual", DbType="DateTime")]
		public System.Nullable<System.DateTime> startDateActual
		{
			get
			{
				return this._startDateActual;
			}
			set
			{
				if ((this._startDateActual != value))
				{
					this.OnstartDateActualChanging(value);
					this.SendPropertyChanging();
					this._startDateActual = value;
					this.SendPropertyChanged("startDateActual");
					this.OnstartDateActualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endDateEstimated", DbType="DateTime")]
		public System.Nullable<System.DateTime> endDateEstimated
		{
			get
			{
				return this._endDateEstimated;
			}
			set
			{
				if ((this._endDateEstimated != value))
				{
					this.OnendDateEstimatedChanging(value);
					this.SendPropertyChanging();
					this._endDateEstimated = value;
					this.SendPropertyChanged("endDateEstimated");
					this.OnendDateEstimatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endDateActual", DbType="DateTime")]
		public System.Nullable<System.DateTime> endDateActual
		{
			get
			{
				return this._endDateActual;
			}
			set
			{
				if ((this._endDateActual != value))
				{
					this.OnendDateActualChanging(value);
					this.SendPropertyChanging();
					this._endDateActual = value;
					this.SendPropertyChanged("endDateActual");
					this.OnendDateActualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transportTypeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string transportTypeCode
		{
			get
			{
				return this._transportTypeCode;
			}
			set
			{
				if ((this._transportTypeCode != value))
				{
					if (this._transportType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntransportTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._transportTypeCode = value;
					this.SendPropertyChanged("transportTypeCode");
					this.OntransportTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string projectCode
		{
			get
			{
				return this._projectCode;
			}
			set
			{
				if ((this._projectCode != value))
				{
					this.OnprojectCodeChanging(value);
					this.SendPropertyChanging();
					this._projectCode = value;
					this.SendPropertyChanged("projectCode");
					this.OnprojectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_transport", Storage="_document", ThisKey="baseDocType", OtherKey="docType", IsForeignKey=true)]
		public document document
		{
			get
			{
				return this._document.Entity;
			}
			set
			{
				document previousValue = this._document.Entity;
				if (((previousValue != value) 
							|| (this._document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._document.Entity = null;
						previousValue.transports.Remove(this);
					}
					this._document.Entity = value;
					if ((value != null))
					{
						value.transports.Add(this);
						this._baseDocType = value.docType;
					}
					else
					{
						this._baseDocType = default(string);
					}
					this.SendPropertyChanged("document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="transportType_transport", Storage="_transportType", ThisKey="transportTypeCode", OtherKey="transportTypeCode", IsForeignKey=true)]
		public transportType transportType
		{
			get
			{
				return this._transportType.Entity;
			}
			set
			{
				transportType previousValue = this._transportType.Entity;
				if (((previousValue != value) 
							|| (this._transportType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._transportType.Entity = null;
						previousValue.transports.Remove(this);
					}
					this._transportType.Entity = value;
					if ((value != null))
					{
						value.transports.Add(this);
						this._transportTypeCode = value.transportTypeCode;
					}
					else
					{
						this._transportTypeCode = default(string);
					}
					this.SendPropertyChanged("transportType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasure_transport", Storage="_unitOfMeasure", ThisKey="uomCode", OtherKey="uomCode", IsForeignKey=true)]
		public unitOfMeasure unitOfMeasure
		{
			get
			{
				return this._unitOfMeasure.Entity;
			}
			set
			{
				unitOfMeasure previousValue = this._unitOfMeasure.Entity;
				if (((previousValue != value) 
							|| (this._unitOfMeasure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._unitOfMeasure.Entity = null;
						previousValue.transports.Remove(this);
					}
					this._unitOfMeasure.Entity = value;
					if ((value != null))
					{
						value.transports.Add(this);
						this._uomCode = value.uomCode;
					}
					else
					{
						this._uomCode = default(string);
					}
					this.SendPropertyChanged("unitOfMeasure");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.transportProject")]
	public partial class transportProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _transportTypeCode;
		
		private string _projectCode;
		
		private int _sequence;
		
		private EntityRef<project> _project;
		
		private EntityRef<transportType> _transportType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntransportTypeCodeChanging(string value);
    partial void OntransportTypeCodeChanged();
    partial void OnprojectCodeChanging(string value);
    partial void OnprojectCodeChanged();
    partial void OnsequenceChanging(int value);
    partial void OnsequenceChanged();
    #endregion
		
		public transportProject()
		{
			this._project = default(EntityRef<project>);
			this._transportType = default(EntityRef<transportType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transportTypeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string transportTypeCode
		{
			get
			{
				return this._transportTypeCode;
			}
			set
			{
				if ((this._transportTypeCode != value))
				{
					if (this._transportType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntransportTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._transportTypeCode = value;
					this.SendPropertyChanged("transportTypeCode");
					this.OntransportTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string projectCode
		{
			get
			{
				return this._projectCode;
			}
			set
			{
				if ((this._projectCode != value))
				{
					if (this._project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectCodeChanging(value);
					this.SendPropertyChanging();
					this._projectCode = value;
					this.SendPropertyChanged("projectCode");
					this.OnprojectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sequence", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int sequence
		{
			get
			{
				return this._sequence;
			}
			set
			{
				if ((this._sequence != value))
				{
					this.OnsequenceChanging(value);
					this.SendPropertyChanging();
					this._sequence = value;
					this.SendPropertyChanged("sequence");
					this.OnsequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_transportProject", Storage="_project", ThisKey="projectCode", OtherKey="projectCode", IsForeignKey=true)]
		public project project
		{
			get
			{
				return this._project.Entity;
			}
			set
			{
				project previousValue = this._project.Entity;
				if (((previousValue != value) 
							|| (this._project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project.Entity = null;
						previousValue.transportProjects.Remove(this);
					}
					this._project.Entity = value;
					if ((value != null))
					{
						value.transportProjects.Add(this);
						this._projectCode = value.projectCode;
					}
					else
					{
						this._projectCode = default(string);
					}
					this.SendPropertyChanged("project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="transportType_transportProject", Storage="_transportType", ThisKey="transportTypeCode", OtherKey="transportTypeCode", IsForeignKey=true)]
		public transportType transportType
		{
			get
			{
				return this._transportType.Entity;
			}
			set
			{
				transportType previousValue = this._transportType.Entity;
				if (((previousValue != value) 
							|| (this._transportType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._transportType.Entity = null;
						previousValue.transportProjects.Remove(this);
					}
					this._transportType.Entity = value;
					if ((value != null))
					{
						value.transportProjects.Add(this);
						this._transportTypeCode = value.transportTypeCode;
					}
					else
					{
						this._transportTypeCode = default(string);
					}
					this.SendPropertyChanged("transportType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.transportType")]
	public partial class transportType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _transportTypeCode;
		
		private string _description;
		
		private EntitySet<transport> _transports;
		
		private EntitySet<transportProject> _transportProjects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntransportTypeCodeChanging(string value);
    partial void OntransportTypeCodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public transportType()
		{
			this._transports = new EntitySet<transport>(new Action<transport>(this.attach_transports), new Action<transport>(this.detach_transports));
			this._transportProjects = new EntitySet<transportProject>(new Action<transportProject>(this.attach_transportProjects), new Action<transportProject>(this.detach_transportProjects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transportTypeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string transportTypeCode
		{
			get
			{
				return this._transportTypeCode;
			}
			set
			{
				if ((this._transportTypeCode != value))
				{
					this.OntransportTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._transportTypeCode = value;
					this.SendPropertyChanged("transportTypeCode");
					this.OntransportTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="transportType_transport", Storage="_transports", ThisKey="transportTypeCode", OtherKey="transportTypeCode")]
		public EntitySet<transport> transports
		{
			get
			{
				return this._transports;
			}
			set
			{
				this._transports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="transportType_transportProject", Storage="_transportProjects", ThisKey="transportTypeCode", OtherKey="transportTypeCode")]
		public EntitySet<transportProject> transportProjects
		{
			get
			{
				return this._transportProjects;
			}
			set
			{
				this._transportProjects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_transports(transport entity)
		{
			this.SendPropertyChanging();
			entity.transportType = this;
		}
		
		private void detach_transports(transport entity)
		{
			this.SendPropertyChanging();
			entity.transportType = null;
		}
		
		private void attach_transportProjects(transportProject entity)
		{
			this.SendPropertyChanging();
			entity.transportType = this;
		}
		
		private void detach_transportProjects(transportProject entity)
		{
			this.SendPropertyChanging();
			entity.transportType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.unitOfMeasure")]
	public partial class unitOfMeasure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _uomCode;
		
		private string _uomName;
		
		private EntitySet<colliLine> _colliLines;
		
		private EntitySet<colliLine> _colliLines1;
		
		private EntitySet<goodsReceiptLine> _goodsReceiptLines;
		
		private EntitySet<purchaseOrderLine> _purchaseOrderLines;
		
		private EntitySet<transport> _transports;
		
		private EntitySet<unitOfMeasureLink> _unitOfMeasureLinks;
		
		private EntitySet<item> _items;
		
		private EntitySet<salesOrderLine> _salesOrderLines;
		
		private EntitySet<deliveryLine> _deliveryLines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuomCodeChanging(string value);
    partial void OnuomCodeChanged();
    partial void OnuomNameChanging(string value);
    partial void OnuomNameChanged();
    #endregion
		
		public unitOfMeasure()
		{
			this._colliLines = new EntitySet<colliLine>(new Action<colliLine>(this.attach_colliLines), new Action<colliLine>(this.detach_colliLines));
			this._colliLines1 = new EntitySet<colliLine>(new Action<colliLine>(this.attach_colliLines1), new Action<colliLine>(this.detach_colliLines1));
			this._goodsReceiptLines = new EntitySet<goodsReceiptLine>(new Action<goodsReceiptLine>(this.attach_goodsReceiptLines), new Action<goodsReceiptLine>(this.detach_goodsReceiptLines));
			this._purchaseOrderLines = new EntitySet<purchaseOrderLine>(new Action<purchaseOrderLine>(this.attach_purchaseOrderLines), new Action<purchaseOrderLine>(this.detach_purchaseOrderLines));
			this._transports = new EntitySet<transport>(new Action<transport>(this.attach_transports), new Action<transport>(this.detach_transports));
			this._unitOfMeasureLinks = new EntitySet<unitOfMeasureLink>(new Action<unitOfMeasureLink>(this.attach_unitOfMeasureLinks), new Action<unitOfMeasureLink>(this.detach_unitOfMeasureLinks));
			this._items = new EntitySet<item>(new Action<item>(this.attach_items), new Action<item>(this.detach_items));
			this._salesOrderLines = new EntitySet<salesOrderLine>(new Action<salesOrderLine>(this.attach_salesOrderLines), new Action<salesOrderLine>(this.detach_salesOrderLines));
			this._deliveryLines = new EntitySet<deliveryLine>(new Action<deliveryLine>(this.attach_deliveryLines), new Action<deliveryLine>(this.detach_deliveryLines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string uomCode
		{
			get
			{
				return this._uomCode;
			}
			set
			{
				if ((this._uomCode != value))
				{
					this.OnuomCodeChanging(value);
					this.SendPropertyChanging();
					this._uomCode = value;
					this.SendPropertyChanged("uomCode");
					this.OnuomCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string uomName
		{
			get
			{
				return this._uomName;
			}
			set
			{
				if ((this._uomName != value))
				{
					this.OnuomNameChanging(value);
					this.SendPropertyChanging();
					this._uomName = value;
					this.SendPropertyChanged("uomName");
					this.OnuomNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasure_colliLine", Storage="_colliLines", ThisKey="uomCode", OtherKey="uomCode1")]
		public EntitySet<colliLine> colliLines
		{
			get
			{
				return this._colliLines;
			}
			set
			{
				this._colliLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasure_colliLine1", Storage="_colliLines1", ThisKey="uomCode", OtherKey="uomCode2")]
		public EntitySet<colliLine> colliLines1
		{
			get
			{
				return this._colliLines1;
			}
			set
			{
				this._colliLines1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasure_goodsReceiptLine", Storage="_goodsReceiptLines", ThisKey="uomCode", OtherKey="uomCode")]
		public EntitySet<goodsReceiptLine> goodsReceiptLines
		{
			get
			{
				return this._goodsReceiptLines;
			}
			set
			{
				this._goodsReceiptLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasure_purchaseOrderLine", Storage="_purchaseOrderLines", ThisKey="uomCode", OtherKey="uomCode")]
		public EntitySet<purchaseOrderLine> purchaseOrderLines
		{
			get
			{
				return this._purchaseOrderLines;
			}
			set
			{
				this._purchaseOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasure_transport", Storage="_transports", ThisKey="uomCode", OtherKey="uomCode")]
		public EntitySet<transport> transports
		{
			get
			{
				return this._transports;
			}
			set
			{
				this._transports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasure_unitOfMeasureLink", Storage="_unitOfMeasureLinks", ThisKey="uomCode", OtherKey="uomCode")]
		public EntitySet<unitOfMeasureLink> unitOfMeasureLinks
		{
			get
			{
				return this._unitOfMeasureLinks;
			}
			set
			{
				this._unitOfMeasureLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasure_item", Storage="_items", ThisKey="uomCode", OtherKey="uomSale")]
		public EntitySet<item> items
		{
			get
			{
				return this._items;
			}
			set
			{
				this._items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasure_salesOrderLine", Storage="_salesOrderLines", ThisKey="uomCode", OtherKey="uomCode")]
		public EntitySet<salesOrderLine> salesOrderLines
		{
			get
			{
				return this._salesOrderLines;
			}
			set
			{
				this._salesOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasure_deliveryLine", Storage="_deliveryLines", ThisKey="uomCode", OtherKey="uomCode")]
		public EntitySet<deliveryLine> deliveryLines
		{
			get
			{
				return this._deliveryLines;
			}
			set
			{
				this._deliveryLines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_colliLines(colliLine entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasure = this;
		}
		
		private void detach_colliLines(colliLine entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasure = null;
		}
		
		private void attach_colliLines1(colliLine entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasure1 = this;
		}
		
		private void detach_colliLines1(colliLine entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasure1 = null;
		}
		
		private void attach_goodsReceiptLines(goodsReceiptLine entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasure = this;
		}
		
		private void detach_goodsReceiptLines(goodsReceiptLine entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasure = null;
		}
		
		private void attach_purchaseOrderLines(purchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasure = this;
		}
		
		private void detach_purchaseOrderLines(purchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasure = null;
		}
		
		private void attach_transports(transport entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasure = this;
		}
		
		private void detach_transports(transport entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasure = null;
		}
		
		private void attach_unitOfMeasureLinks(unitOfMeasureLink entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasure = this;
		}
		
		private void detach_unitOfMeasureLinks(unitOfMeasureLink entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasure = null;
		}
		
		private void attach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasure = this;
		}
		
		private void detach_items(item entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasure = null;
		}
		
		private void attach_salesOrderLines(salesOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasure = this;
		}
		
		private void detach_salesOrderLines(salesOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasure = null;
		}
		
		private void attach_deliveryLines(deliveryLine entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasure = this;
		}
		
		private void detach_deliveryLines(deliveryLine entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasure = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.unitOfMeasureLink")]
	public partial class unitOfMeasureLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _uomCode;
		
		private string _uomCodeOrg;
		
		private EntityRef<unitOfMeasure> _unitOfMeasure;
		
		private EntityRef<unitOfMeasureOrg> _unitOfMeasureOrg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuomCodeChanging(string value);
    partial void OnuomCodeChanged();
    partial void OnuomCodeOrgChanging(string value);
    partial void OnuomCodeOrgChanged();
    #endregion
		
		public unitOfMeasureLink()
		{
			this._unitOfMeasure = default(EntityRef<unitOfMeasure>);
			this._unitOfMeasureOrg = default(EntityRef<unitOfMeasureOrg>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string uomCode
		{
			get
			{
				return this._uomCode;
			}
			set
			{
				if ((this._uomCode != value))
				{
					if (this._unitOfMeasure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuomCodeChanging(value);
					this.SendPropertyChanging();
					this._uomCode = value;
					this.SendPropertyChanged("uomCode");
					this.OnuomCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomCodeOrg", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string uomCodeOrg
		{
			get
			{
				return this._uomCodeOrg;
			}
			set
			{
				if ((this._uomCodeOrg != value))
				{
					if (this._unitOfMeasureOrg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuomCodeOrgChanging(value);
					this.SendPropertyChanging();
					this._uomCodeOrg = value;
					this.SendPropertyChanged("uomCodeOrg");
					this.OnuomCodeOrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasure_unitOfMeasureLink", Storage="_unitOfMeasure", ThisKey="uomCode", OtherKey="uomCode", IsForeignKey=true)]
		public unitOfMeasure unitOfMeasure
		{
			get
			{
				return this._unitOfMeasure.Entity;
			}
			set
			{
				unitOfMeasure previousValue = this._unitOfMeasure.Entity;
				if (((previousValue != value) 
							|| (this._unitOfMeasure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._unitOfMeasure.Entity = null;
						previousValue.unitOfMeasureLinks.Remove(this);
					}
					this._unitOfMeasure.Entity = value;
					if ((value != null))
					{
						value.unitOfMeasureLinks.Add(this);
						this._uomCode = value.uomCode;
					}
					else
					{
						this._uomCode = default(string);
					}
					this.SendPropertyChanged("unitOfMeasure");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasureOrg_unitOfMeasureLink", Storage="_unitOfMeasureOrg", ThisKey="uomCodeOrg", OtherKey="uomCode", IsForeignKey=true)]
		public unitOfMeasureOrg unitOfMeasureOrg
		{
			get
			{
				return this._unitOfMeasureOrg.Entity;
			}
			set
			{
				unitOfMeasureOrg previousValue = this._unitOfMeasureOrg.Entity;
				if (((previousValue != value) 
							|| (this._unitOfMeasureOrg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._unitOfMeasureOrg.Entity = null;
						previousValue.unitOfMeasureLinks.Remove(this);
					}
					this._unitOfMeasureOrg.Entity = value;
					if ((value != null))
					{
						value.unitOfMeasureLinks.Add(this);
						this._uomCodeOrg = value.uomCode;
					}
					else
					{
						this._uomCodeOrg = default(string);
					}
					this.SendPropertyChanged("unitOfMeasureOrg");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.unitOfMeasureOrg")]
	public partial class unitOfMeasureOrg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _uomCode;
		
		private string _uomName;
		
		private EntitySet<purchaseOrderLine> _purchaseOrderLines;
		
		private EntitySet<unitOfMeasureLink> _unitOfMeasureLinks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuomCodeChanging(string value);
    partial void OnuomCodeChanged();
    partial void OnuomNameChanging(string value);
    partial void OnuomNameChanged();
    #endregion
		
		public unitOfMeasureOrg()
		{
			this._purchaseOrderLines = new EntitySet<purchaseOrderLine>(new Action<purchaseOrderLine>(this.attach_purchaseOrderLines), new Action<purchaseOrderLine>(this.detach_purchaseOrderLines));
			this._unitOfMeasureLinks = new EntitySet<unitOfMeasureLink>(new Action<unitOfMeasureLink>(this.attach_unitOfMeasureLinks), new Action<unitOfMeasureLink>(this.detach_unitOfMeasureLinks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string uomCode
		{
			get
			{
				return this._uomCode;
			}
			set
			{
				if ((this._uomCode != value))
				{
					this.OnuomCodeChanging(value);
					this.SendPropertyChanging();
					this._uomCode = value;
					this.SendPropertyChanged("uomCode");
					this.OnuomCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string uomName
		{
			get
			{
				return this._uomName;
			}
			set
			{
				if ((this._uomName != value))
				{
					this.OnuomNameChanging(value);
					this.SendPropertyChanging();
					this._uomName = value;
					this.SendPropertyChanged("uomName");
					this.OnuomNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasureOrg_purchaseOrderLine", Storage="_purchaseOrderLines", ThisKey="uomCode", OtherKey="uomCodeOrg")]
		public EntitySet<purchaseOrderLine> purchaseOrderLines
		{
			get
			{
				return this._purchaseOrderLines;
			}
			set
			{
				this._purchaseOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasureOrg_unitOfMeasureLink", Storage="_unitOfMeasureLinks", ThisKey="uomCode", OtherKey="uomCodeOrg")]
		public EntitySet<unitOfMeasureLink> unitOfMeasureLinks
		{
			get
			{
				return this._unitOfMeasureLinks;
			}
			set
			{
				this._unitOfMeasureLinks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_purchaseOrderLines(purchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasureOrg = this;
		}
		
		private void detach_purchaseOrderLines(purchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasureOrg = null;
		}
		
		private void attach_unitOfMeasureLinks(unitOfMeasureLink entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasureOrg = this;
		}
		
		private void detach_unitOfMeasureLinks(unitOfMeasureLink entity)
		{
			this.SendPropertyChanging();
			entity.unitOfMeasureOrg = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _ApplicationId;
		
		private string _UserName;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntitySet<contactPerson> _contactPersons;
		
		private EntityRef<Profile> _Profile;
		
		private EntitySet<shoppingCart> _shoppingCarts;
		
		private EntitySet<UsersInRole> _UsersInRoles;
		
		private EntitySet<userRole> _userRoles;
		
		private EntitySet<businessPartner> _businessPartners;
		
		private EntityRef<userSetting> _userSetting;
		
		private EntityRef<Application1> _Application1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public User()
		{
			this._contactPersons = new EntitySet<contactPerson>(new Action<contactPerson>(this.attach_contactPersons), new Action<contactPerson>(this.detach_contactPersons));
			this._Profile = default(EntityRef<Profile>);
			this._shoppingCarts = new EntitySet<shoppingCart>(new Action<shoppingCart>(this.attach_shoppingCarts), new Action<shoppingCart>(this.detach_shoppingCarts));
			this._UsersInRoles = new EntitySet<UsersInRole>(new Action<UsersInRole>(this.attach_UsersInRoles), new Action<UsersInRole>(this.detach_UsersInRoles));
			this._userRoles = new EntitySet<userRole>(new Action<userRole>(this.attach_userRoles), new Action<userRole>(this.detach_userRoles));
			this._businessPartners = new EntitySet<businessPartner>(new Action<businessPartner>(this.attach_businessPartners), new Action<businessPartner>(this.detach_businessPartners));
			this._userSetting = default(EntityRef<userSetting>);
			this._Application1 = default(EntityRef<Application1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._Application1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_contactPerson", Storage="_contactPersons", ThisKey="UserId", OtherKey="userId")]
		public EntitySet<contactPerson> contactPersons
		{
			get
			{
				return this._contactPersons;
			}
			set
			{
				this._contactPersons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Profile", Storage="_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.User = null;
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_shoppingCart", Storage="_shoppingCarts", ThisKey="UserId", OtherKey="userId")]
		public EntitySet<shoppingCart> shoppingCarts
		{
			get
			{
				return this._shoppingCarts;
			}
			set
			{
				this._shoppingCarts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersInRole", Storage="_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UsersInRole> UsersInRoles
		{
			get
			{
				return this._UsersInRoles;
			}
			set
			{
				this._UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_userRole", Storage="_userRoles", ThisKey="UserId", OtherKey="userId")]
		public EntitySet<userRole> userRoles
		{
			get
			{
				return this._userRoles;
			}
			set
			{
				this._userRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_businessPartner", Storage="_businessPartners", ThisKey="UserId", OtherKey="accountManager")]
		public EntitySet<businessPartner> businessPartners
		{
			get
			{
				return this._businessPartners;
			}
			set
			{
				this._businessPartners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_userSetting", Storage="_userSetting", ThisKey="UserId", OtherKey="userId", IsUnique=true, IsForeignKey=false)]
		public userSetting userSetting
		{
			get
			{
				return this._userSetting.Entity;
			}
			set
			{
				userSetting previousValue = this._userSetting.Entity;
				if (((previousValue != value) 
							|| (this._userSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._userSetting.Entity = null;
						previousValue.User = null;
					}
					this._userSetting.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("userSetting");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application1_User", Storage="_Application1", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public Application1 Application1
		{
			get
			{
				return this._Application1.Entity;
			}
			set
			{
				Application1 previousValue = this._Application1.Entity;
				if (((previousValue != value) 
							|| (this._Application1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application1.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Application1.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Application1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contactPersons(contactPerson entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_contactPersons(contactPerson entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_shoppingCarts(shoppingCart entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_shoppingCarts(shoppingCart entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_userRoles(userRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_userRoles(userRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_businessPartners(businessPartner entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_businessPartners(businessPartner entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersInRoles")]
	public partial class UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public UsersInRole()
		{
			this._Role = default(EntityRef<Role>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UsersInRole", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UsersInRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersInRole", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UsersInRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.batch")]
	public partial class batch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _batchId;
		
		private string _batchNumber;
		
		private string _certificateLink;
		
		private string _heatNumber;
		
		private int _itemId;
		
		private string _companyCode;
		
		private string _ixosArchiveId;
		
		private string _certificateDescription;
		
		private string _certificateIndexNumber;
		
		private EntitySet<batchDocument> _batchDocuments;
		
		private EntitySet<certificateDownloaded> _certificateDownloadeds;
		
		private EntityRef<company> _company;
		
		private EntityRef<item> _item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbatchIdChanging(int value);
    partial void OnbatchIdChanged();
    partial void OnbatchNumberChanging(string value);
    partial void OnbatchNumberChanged();
    partial void OncertificateLinkChanging(string value);
    partial void OncertificateLinkChanged();
    partial void OnheatNumberChanging(string value);
    partial void OnheatNumberChanged();
    partial void OnitemIdChanging(int value);
    partial void OnitemIdChanged();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    partial void OnixosArchiveIdChanging(string value);
    partial void OnixosArchiveIdChanged();
    partial void OncertificateDescriptionChanging(string value);
    partial void OncertificateDescriptionChanged();
    partial void OncertificateIndexNumberChanging(string value);
    partial void OncertificateIndexNumberChanged();
    #endregion
		
		public batch()
		{
			this._batchDocuments = new EntitySet<batchDocument>(new Action<batchDocument>(this.attach_batchDocuments), new Action<batchDocument>(this.detach_batchDocuments));
			this._certificateDownloadeds = new EntitySet<certificateDownloaded>(new Action<certificateDownloaded>(this.attach_certificateDownloadeds), new Action<certificateDownloaded>(this.detach_certificateDownloadeds));
			this._company = default(EntityRef<company>);
			this._item = default(EntityRef<item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_batchId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int batchId
		{
			get
			{
				return this._batchId;
			}
			set
			{
				if ((this._batchId != value))
				{
					this.OnbatchIdChanging(value);
					this.SendPropertyChanging();
					this._batchId = value;
					this.SendPropertyChanged("batchId");
					this.OnbatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_batchNumber", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string batchNumber
		{
			get
			{
				return this._batchNumber;
			}
			set
			{
				if ((this._batchNumber != value))
				{
					this.OnbatchNumberChanging(value);
					this.SendPropertyChanging();
					this._batchNumber = value;
					this.SendPropertyChanged("batchNumber");
					this.OnbatchNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_certificateLink", DbType="VarChar(255)")]
		public string certificateLink
		{
			get
			{
				return this._certificateLink;
			}
			set
			{
				if ((this._certificateLink != value))
				{
					this.OncertificateLinkChanging(value);
					this.SendPropertyChanging();
					this._certificateLink = value;
					this.SendPropertyChanged("certificateLink");
					this.OncertificateLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_heatNumber", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string heatNumber
		{
			get
			{
				return this._heatNumber;
			}
			set
			{
				if ((this._heatNumber != value))
				{
					this.OnheatNumberChanging(value);
					this.SendPropertyChanging();
					this._heatNumber = value;
					this.SendPropertyChanged("heatNumber");
					this.OnheatNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemId", DbType="Int NOT NULL")]
		public int itemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					if (this._item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnitemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("itemId");
					this.OnitemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					if (this._company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ixosArchiveId", DbType="NVarChar(50)")]
		public string ixosArchiveId
		{
			get
			{
				return this._ixosArchiveId;
			}
			set
			{
				if ((this._ixosArchiveId != value))
				{
					this.OnixosArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._ixosArchiveId = value;
					this.SendPropertyChanged("ixosArchiveId");
					this.OnixosArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_certificateDescription", DbType="VarChar(255)")]
		public string certificateDescription
		{
			get
			{
				return this._certificateDescription;
			}
			set
			{
				if ((this._certificateDescription != value))
				{
					this.OncertificateDescriptionChanging(value);
					this.SendPropertyChanging();
					this._certificateDescription = value;
					this.SendPropertyChanged("certificateDescription");
					this.OncertificateDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_certificateIndexNumber", DbType="VarChar(255)")]
		public string certificateIndexNumber
		{
			get
			{
				return this._certificateIndexNumber;
			}
			set
			{
				if ((this._certificateIndexNumber != value))
				{
					this.OncertificateIndexNumberChanging(value);
					this.SendPropertyChanging();
					this._certificateIndexNumber = value;
					this.SendPropertyChanged("certificateIndexNumber");
					this.OncertificateIndexNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="batch_batchDocument", Storage="_batchDocuments", ThisKey="batchId", OtherKey="batchId")]
		public EntitySet<batchDocument> batchDocuments
		{
			get
			{
				return this._batchDocuments;
			}
			set
			{
				this._batchDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="batch_certificateDownloaded", Storage="_certificateDownloadeds", ThisKey="batchId", OtherKey="batchId")]
		public EntitySet<certificateDownloaded> certificateDownloadeds
		{
			get
			{
				return this._certificateDownloadeds;
			}
			set
			{
				this._certificateDownloadeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_batch", Storage="_company", ThisKey="companyCode", OtherKey="companyCode", IsForeignKey=true)]
		public company company
		{
			get
			{
				return this._company.Entity;
			}
			set
			{
				company previousValue = this._company.Entity;
				if (((previousValue != value) 
							|| (this._company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._company.Entity = null;
						previousValue.batches.Remove(this);
					}
					this._company.Entity = value;
					if ((value != null))
					{
						value.batches.Add(this);
						this._companyCode = value.companyCode;
					}
					else
					{
						this._companyCode = default(string);
					}
					this.SendPropertyChanged("company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_batch", Storage="_item", ThisKey="itemId", OtherKey="itemId", IsForeignKey=true)]
		public item item
		{
			get
			{
				return this._item.Entity;
			}
			set
			{
				item previousValue = this._item.Entity;
				if (((previousValue != value) 
							|| (this._item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item.Entity = null;
						previousValue.batches.Remove(this);
					}
					this._item.Entity = value;
					if ((value != null))
					{
						value.batches.Add(this);
						this._itemId = value.itemId;
					}
					else
					{
						this._itemId = default(int);
					}
					this.SendPropertyChanged("item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_batchDocuments(batchDocument entity)
		{
			this.SendPropertyChanging();
			entity.batch = this;
		}
		
		private void detach_batchDocuments(batchDocument entity)
		{
			this.SendPropertyChanging();
			entity.batch = null;
		}
		
		private void attach_certificateDownloadeds(certificateDownloaded entity)
		{
			this.SendPropertyChanging();
			entity.batch = this;
		}
		
		private void detach_certificateDownloadeds(certificateDownloaded entity)
		{
			this.SendPropertyChanging();
			entity.batch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.delivery")]
	public partial class delivery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _docId;
		
		private string _documentNumber;
		
		private string _companyCode;
		
		private int _businessPartnerId;
		
		private System.DateTime _timeStampCreated;
		
		private System.Nullable<System.DateTime> _timeStampLastUpdate;
		
		private string _docType;
		
		private System.DateTime _docDate;
		
		private string _customerReference;
		
		private string _projectCode;
		
		private System.DateTime _createDate;
		
		private string _docStatusCode;
		
		private System.Nullable<System.DateTime> _deliveryDate;
		
		private string _currencyCode;
		
		private System.Nullable<decimal> _currencyRate;
		
		private EntitySet<deliveryLine> _deliveryLines;
		
		private EntitySet<usageReport> _usageReports;
		
		private EntityRef<company> _company;
		
		private EntityRef<currency> _currency;
		
		private EntityRef<docStatus> _docStatus;
		
		private EntityRef<document> _document;
		
		private EntityRef<project> _project;
		
		private EntityRef<businessPartner> _businessPartner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndocIdChanging(int value);
    partial void OndocIdChanged();
    partial void OndocumentNumberChanging(string value);
    partial void OndocumentNumberChanged();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    partial void OnbusinessPartnerIdChanging(int value);
    partial void OnbusinessPartnerIdChanged();
    partial void OntimeStampCreatedChanging(System.DateTime value);
    partial void OntimeStampCreatedChanged();
    partial void OntimeStampLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OntimeStampLastUpdateChanged();
    partial void OndocTypeChanging(string value);
    partial void OndocTypeChanged();
    partial void OndocDateChanging(System.DateTime value);
    partial void OndocDateChanged();
    partial void OncustomerReferenceChanging(string value);
    partial void OncustomerReferenceChanged();
    partial void OnprojectCodeChanging(string value);
    partial void OnprojectCodeChanged();
    partial void OncreateDateChanging(System.DateTime value);
    partial void OncreateDateChanged();
    partial void OndocStatusCodeChanging(string value);
    partial void OndocStatusCodeChanged();
    partial void OndeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OndeliveryDateChanged();
    partial void OncurrencyCodeChanging(string value);
    partial void OncurrencyCodeChanged();
    partial void OncurrencyRateChanging(System.Nullable<decimal> value);
    partial void OncurrencyRateChanged();
    #endregion
		
		public delivery()
		{
			this._deliveryLines = new EntitySet<deliveryLine>(new Action<deliveryLine>(this.attach_deliveryLines), new Action<deliveryLine>(this.detach_deliveryLines));
			this._usageReports = new EntitySet<usageReport>(new Action<usageReport>(this.attach_usageReports), new Action<usageReport>(this.detach_usageReports));
			this._company = default(EntityRef<company>);
			this._currency = default(EntityRef<currency>);
			this._docStatus = default(EntityRef<docStatus>);
			this._document = default(EntityRef<document>);
			this._project = default(EntityRef<project>);
			this._businessPartner = default(EntityRef<businessPartner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int docId
		{
			get
			{
				return this._docId;
			}
			set
			{
				if ((this._docId != value))
				{
					this.OndocIdChanging(value);
					this.SendPropertyChanging();
					this._docId = value;
					this.SendPropertyChanged("docId");
					this.OndocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documentNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string documentNumber
		{
			get
			{
				return this._documentNumber;
			}
			set
			{
				if ((this._documentNumber != value))
				{
					this.OndocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._documentNumber = value;
					this.SendPropertyChanged("documentNumber");
					this.OndocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					if (this._company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessPartnerId", DbType="Int NOT NULL")]
		public int businessPartnerId
		{
			get
			{
				return this._businessPartnerId;
			}
			set
			{
				if ((this._businessPartnerId != value))
				{
					if (this._businessPartner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbusinessPartnerIdChanging(value);
					this.SendPropertyChanging();
					this._businessPartnerId = value;
					this.SendPropertyChanged("businessPartnerId");
					this.OnbusinessPartnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStampCreated", DbType="DateTime NOT NULL")]
		public System.DateTime timeStampCreated
		{
			get
			{
				return this._timeStampCreated;
			}
			set
			{
				if ((this._timeStampCreated != value))
				{
					this.OntimeStampCreatedChanging(value);
					this.SendPropertyChanging();
					this._timeStampCreated = value;
					this.SendPropertyChanged("timeStampCreated");
					this.OntimeStampCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStampLastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> timeStampLastUpdate
		{
			get
			{
				return this._timeStampLastUpdate;
			}
			set
			{
				if ((this._timeStampLastUpdate != value))
				{
					this.OntimeStampLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._timeStampLastUpdate = value;
					this.SendPropertyChanged("timeStampLastUpdate");
					this.OntimeStampLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string docType
		{
			get
			{
				return this._docType;
			}
			set
			{
				if ((this._docType != value))
				{
					if (this._document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndocTypeChanging(value);
					this.SendPropertyChanging();
					this._docType = value;
					this.SendPropertyChanged("docType");
					this.OndocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docDate", DbType="DateTime NOT NULL")]
		public System.DateTime docDate
		{
			get
			{
				return this._docDate;
			}
			set
			{
				if ((this._docDate != value))
				{
					this.OndocDateChanging(value);
					this.SendPropertyChanging();
					this._docDate = value;
					this.SendPropertyChanged("docDate");
					this.OndocDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerReference", DbType="VarChar(255)")]
		public string customerReference
		{
			get
			{
				return this._customerReference;
			}
			set
			{
				if ((this._customerReference != value))
				{
					this.OncustomerReferenceChanging(value);
					this.SendPropertyChanging();
					this._customerReference = value;
					this.SendPropertyChanged("customerReference");
					this.OncustomerReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectCode", DbType="NVarChar(50)")]
		public string projectCode
		{
			get
			{
				return this._projectCode;
			}
			set
			{
				if ((this._projectCode != value))
				{
					if (this._project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectCodeChanging(value);
					this.SendPropertyChanging();
					this._projectCode = value;
					this.SendPropertyChanged("projectCode");
					this.OnprojectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="DateTime NOT NULL")]
		public System.DateTime createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this.OncreateDateChanging(value);
					this.SendPropertyChanging();
					this._createDate = value;
					this.SendPropertyChanged("createDate");
					this.OncreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docStatusCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string docStatusCode
		{
			get
			{
				return this._docStatusCode;
			}
			set
			{
				if ((this._docStatusCode != value))
				{
					if (this._docStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndocStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._docStatusCode = value;
					this.SendPropertyChanged("docStatusCode");
					this.OndocStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> deliveryDate
		{
			get
			{
				return this._deliveryDate;
			}
			set
			{
				if ((this._deliveryDate != value))
				{
					this.OndeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._deliveryDate = value;
					this.SendPropertyChanged("deliveryDate");
					this.OndeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string currencyCode
		{
			get
			{
				return this._currencyCode;
			}
			set
			{
				if ((this._currencyCode != value))
				{
					if (this._currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._currencyCode = value;
					this.SendPropertyChanged("currencyCode");
					this.OncurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currencyRate", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> currencyRate
		{
			get
			{
				return this._currencyRate;
			}
			set
			{
				if ((this._currencyRate != value))
				{
					this.OncurrencyRateChanging(value);
					this.SendPropertyChanging();
					this._currencyRate = value;
					this.SendPropertyChanged("currencyRate");
					this.OncurrencyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="delivery_deliveryLine", Storage="_deliveryLines", ThisKey="docId", OtherKey="docId")]
		public EntitySet<deliveryLine> deliveryLines
		{
			get
			{
				return this._deliveryLines;
			}
			set
			{
				this._deliveryLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="delivery_usageReport", Storage="_usageReports", ThisKey="docId", OtherKey="baseDocId")]
		public EntitySet<usageReport> usageReports
		{
			get
			{
				return this._usageReports;
			}
			set
			{
				this._usageReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_delivery", Storage="_company", ThisKey="companyCode", OtherKey="companyCode", IsForeignKey=true)]
		public company company
		{
			get
			{
				return this._company.Entity;
			}
			set
			{
				company previousValue = this._company.Entity;
				if (((previousValue != value) 
							|| (this._company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._company.Entity = null;
						previousValue.deliveries.Remove(this);
					}
					this._company.Entity = value;
					if ((value != null))
					{
						value.deliveries.Add(this);
						this._companyCode = value.companyCode;
					}
					else
					{
						this._companyCode = default(string);
					}
					this.SendPropertyChanged("company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="currency_delivery", Storage="_currency", ThisKey="currencyCode", OtherKey="currencyCode", IsForeignKey=true)]
		public currency currency
		{
			get
			{
				return this._currency.Entity;
			}
			set
			{
				currency previousValue = this._currency.Entity;
				if (((previousValue != value) 
							|| (this._currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._currency.Entity = null;
						previousValue.deliveries.Remove(this);
					}
					this._currency.Entity = value;
					if ((value != null))
					{
						value.deliveries.Add(this);
						this._currencyCode = value.currencyCode;
					}
					else
					{
						this._currencyCode = default(string);
					}
					this.SendPropertyChanged("currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="docStatus_delivery", Storage="_docStatus", ThisKey="docStatusCode", OtherKey="docStatusCode", IsForeignKey=true)]
		public docStatus docStatus
		{
			get
			{
				return this._docStatus.Entity;
			}
			set
			{
				docStatus previousValue = this._docStatus.Entity;
				if (((previousValue != value) 
							|| (this._docStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._docStatus.Entity = null;
						previousValue.deliveries.Remove(this);
					}
					this._docStatus.Entity = value;
					if ((value != null))
					{
						value.deliveries.Add(this);
						this._docStatusCode = value.docStatusCode;
					}
					else
					{
						this._docStatusCode = default(string);
					}
					this.SendPropertyChanged("docStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_delivery", Storage="_document", ThisKey="docType", OtherKey="docType", IsForeignKey=true)]
		public document document
		{
			get
			{
				return this._document.Entity;
			}
			set
			{
				document previousValue = this._document.Entity;
				if (((previousValue != value) 
							|| (this._document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._document.Entity = null;
						previousValue.deliveries.Remove(this);
					}
					this._document.Entity = value;
					if ((value != null))
					{
						value.deliveries.Add(this);
						this._docType = value.docType;
					}
					else
					{
						this._docType = default(string);
					}
					this.SendPropertyChanged("document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_delivery", Storage="_project", ThisKey="projectCode", OtherKey="projectCode", IsForeignKey=true)]
		public project project
		{
			get
			{
				return this._project.Entity;
			}
			set
			{
				project previousValue = this._project.Entity;
				if (((previousValue != value) 
							|| (this._project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project.Entity = null;
						previousValue.deliveries.Remove(this);
					}
					this._project.Entity = value;
					if ((value != null))
					{
						value.deliveries.Add(this);
						this._projectCode = value.projectCode;
					}
					else
					{
						this._projectCode = default(string);
					}
					this.SendPropertyChanged("project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_delivery", Storage="_businessPartner", ThisKey="businessPartnerId", OtherKey="businessPartnerId", IsForeignKey=true)]
		public businessPartner businessPartner
		{
			get
			{
				return this._businessPartner.Entity;
			}
			set
			{
				businessPartner previousValue = this._businessPartner.Entity;
				if (((previousValue != value) 
							|| (this._businessPartner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._businessPartner.Entity = null;
						previousValue.deliveries.Remove(this);
					}
					this._businessPartner.Entity = value;
					if ((value != null))
					{
						value.deliveries.Add(this);
						this._businessPartnerId = value.businessPartnerId;
					}
					else
					{
						this._businessPartnerId = default(int);
					}
					this.SendPropertyChanged("businessPartner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_deliveryLines(deliveryLine entity)
		{
			this.SendPropertyChanging();
			entity.delivery = this;
		}
		
		private void detach_deliveryLines(deliveryLine entity)
		{
			this.SendPropertyChanging();
			entity.delivery = null;
		}
		
		private void attach_usageReports(usageReport entity)
		{
			this.SendPropertyChanging();
			entity.delivery = this;
		}
		
		private void detach_usageReports(usageReport entity)
		{
			this.SendPropertyChanging();
			entity.delivery = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_items")]
	public partial class vw_item
	{
		
		private int _itemId;
		
		private string _itemCode;
		
		private string _description;
		
		private string _size;
		
		private decimal _weight;
		
		private System.DateTime _timeStampLastUpdate;
		
		private string _outsideDiameter1;
		
		private string _outsideDiameter2;
		
		private string _outsideDiameter3;
		
		private string _wallThickness1;
		
		private string _wallThickness2;
		
		private string _type;
		
		private string _specification;
		
		private string _length;
		
		private string _treatmentHeat;
		
		private string _treatmentSurface;
		
		private string _ends;
		
		private string _cdi;
		
		private string _supplier;
		
		private string _other;
		
		private System.Nullable<bool> _certificates;
		
		private string _itemGroupName;
		
		private decimal _stockAvailable;
		
		private System.Nullable<decimal> _stockOnHand;
		
		private decimal _mAvPrice;
		
		private decimal _grossPrice;
		
		private string _companyCode;
		
		private string _companyName;
		
		private decimal _purchaseOpenQuantity;
		
		public vw_item()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemId", DbType="Int NOT NULL")]
		public int itemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					this._itemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string itemCode
		{
			get
			{
				return this._itemCode;
			}
			set
			{
				if ((this._itemCode != value))
				{
					this._itemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this._description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="VarChar(255)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this._size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Decimal(20,6) NOT NULL")]
		public decimal weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this._weight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStampLastUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime timeStampLastUpdate
		{
			get
			{
				return this._timeStampLastUpdate;
			}
			set
			{
				if ((this._timeStampLastUpdate != value))
				{
					this._timeStampLastUpdate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outsideDiameter1", DbType="VarChar(255)")]
		public string outsideDiameter1
		{
			get
			{
				return this._outsideDiameter1;
			}
			set
			{
				if ((this._outsideDiameter1 != value))
				{
					this._outsideDiameter1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outsideDiameter2", DbType="VarChar(255)")]
		public string outsideDiameter2
		{
			get
			{
				return this._outsideDiameter2;
			}
			set
			{
				if ((this._outsideDiameter2 != value))
				{
					this._outsideDiameter2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outsideDiameter3", DbType="VarChar(255)")]
		public string outsideDiameter3
		{
			get
			{
				return this._outsideDiameter3;
			}
			set
			{
				if ((this._outsideDiameter3 != value))
				{
					this._outsideDiameter3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wallThickness1", DbType="VarChar(255)")]
		public string wallThickness1
		{
			get
			{
				return this._wallThickness1;
			}
			set
			{
				if ((this._wallThickness1 != value))
				{
					this._wallThickness1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wallThickness2", DbType="VarChar(255)")]
		public string wallThickness2
		{
			get
			{
				return this._wallThickness2;
			}
			set
			{
				if ((this._wallThickness2 != value))
				{
					this._wallThickness2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(255)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this._type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specification", DbType="VarChar(255)")]
		public string specification
		{
			get
			{
				return this._specification;
			}
			set
			{
				if ((this._specification != value))
				{
					this._specification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_length", DbType="VarChar(255)")]
		public string length
		{
			get
			{
				return this._length;
			}
			set
			{
				if ((this._length != value))
				{
					this._length = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_treatmentHeat", DbType="VarChar(255)")]
		public string treatmentHeat
		{
			get
			{
				return this._treatmentHeat;
			}
			set
			{
				if ((this._treatmentHeat != value))
				{
					this._treatmentHeat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_treatmentSurface", DbType="VarChar(255)")]
		public string treatmentSurface
		{
			get
			{
				return this._treatmentSurface;
			}
			set
			{
				if ((this._treatmentSurface != value))
				{
					this._treatmentSurface = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ends", DbType="VarChar(255)")]
		public string ends
		{
			get
			{
				return this._ends;
			}
			set
			{
				if ((this._ends != value))
				{
					this._ends = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdi", DbType="VarChar(255)")]
		public string cdi
		{
			get
			{
				return this._cdi;
			}
			set
			{
				if ((this._cdi != value))
				{
					this._cdi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier", DbType="VarChar(255)")]
		public string supplier
		{
			get
			{
				return this._supplier;
			}
			set
			{
				if ((this._supplier != value))
				{
					this._supplier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_other", DbType="VarChar(255)")]
		public string other
		{
			get
			{
				return this._other;
			}
			set
			{
				if ((this._other != value))
				{
					this._other = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_certificates", DbType="Bit")]
		public System.Nullable<bool> certificates
		{
			get
			{
				return this._certificates;
			}
			set
			{
				if ((this._certificates != value))
				{
					this._certificates = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemGroupName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string itemGroupName
		{
			get
			{
				return this._itemGroupName;
			}
			set
			{
				if ((this._itemGroupName != value))
				{
					this._itemGroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stockAvailable", DbType="Decimal(38,6) NOT NULL")]
		public decimal stockAvailable
		{
			get
			{
				return this._stockAvailable;
			}
			set
			{
				if ((this._stockAvailable != value))
				{
					this._stockAvailable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stockOnHand", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> stockOnHand
		{
			get
			{
				return this._stockOnHand;
			}
			set
			{
				if ((this._stockOnHand != value))
				{
					this._stockOnHand = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mAvPrice", DbType="Decimal(20,6) NOT NULL")]
		public decimal mAvPrice
		{
			get
			{
				return this._mAvPrice;
			}
			set
			{
				if ((this._mAvPrice != value))
				{
					this._mAvPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grossPrice", DbType="Decimal(20,6) NOT NULL")]
		public decimal grossPrice
		{
			get
			{
				return this._grossPrice;
			}
			set
			{
				if ((this._grossPrice != value))
				{
					this._grossPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50)")]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					this._companyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyName", DbType="VarChar(255)")]
		public string companyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this._companyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchaseOpenQuantity", DbType="Decimal(38,6) NOT NULL")]
		public decimal purchaseOpenQuantity
		{
			get
			{
				return this._purchaseOpenQuantity;
			}
			set
			{
				if ((this._purchaseOpenQuantity != value))
				{
					this._purchaseOpenQuantity = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.declarationOfPermanceDocuments")]
	public partial class declarationOfPermanceDocument
	{
		
		private System.Nullable<int> _ID;
		
		private string _DOPLink;
		
		private System.Nullable<int> _businessPartnerId;
		
		private string _description;
		
		public declarationOfPermanceDocument()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOPLink", DbType="NVarChar(MAX)")]
		public string DOPLink
		{
			get
			{
				return this._DOPLink;
			}
			set
			{
				if ((this._DOPLink != value))
				{
					this._DOPLink = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessPartnerId", DbType="Int")]
		public System.Nullable<int> businessPartnerId
		{
			get
			{
				return this._businessPartnerId;
			}
			set
			{
				if ((this._businessPartnerId != value))
				{
					this._businessPartnerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this._description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_businessPartnerDocuments")]
	public partial class vw_businessPartnerDocument
	{
		
		private int _businessPartnerId;
		
		private string _bpName;
		
		private string _DOPLink;
		
		private string _description;
		
		public vw_businessPartnerDocument()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessPartnerId", DbType="Int NOT NULL")]
		public int businessPartnerId
		{
			get
			{
				return this._businessPartnerId;
			}
			set
			{
				if ((this._businessPartnerId != value))
				{
					this._businessPartnerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bpName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string bpName
		{
			get
			{
				return this._bpName;
			}
			set
			{
				if ((this._bpName != value))
				{
					this._bpName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOPLink", DbType="NVarChar(MAX)")]
		public string DOPLink
		{
			get
			{
				return this._DOPLink;
			}
			set
			{
				if ((this._DOPLink != value))
				{
					this._DOPLink = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this._description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_BusinessPartnerDocumentsBusinessPartnerBusinessPartnerSearch")]
	public partial class vw_BusinessPartnerDocumentsBusinessPartnerBusinessPartnerSearch
	{
		
		private int _businessPartnerId;
		
		private string _bpName;
		
		private string _DOPLink;
		
		private System.Nullable<int> _Expr1;
		
		private string _description;
		
		private int _businessPartnerSearchID;
		
		private int _Expr2;
		
		private string _searchString;
		
		public vw_BusinessPartnerDocumentsBusinessPartnerBusinessPartnerSearch()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessPartnerId", DbType="Int NOT NULL")]
		public int businessPartnerId
		{
			get
			{
				return this._businessPartnerId;
			}
			set
			{
				if ((this._businessPartnerId != value))
				{
					this._businessPartnerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bpName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string bpName
		{
			get
			{
				return this._bpName;
			}
			set
			{
				if ((this._bpName != value))
				{
					this._bpName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOPLink", DbType="NVarChar(MAX)")]
		public string DOPLink
		{
			get
			{
				return this._DOPLink;
			}
			set
			{
				if ((this._DOPLink != value))
				{
					this._DOPLink = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="Int")]
		public System.Nullable<int> Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this._description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessPartnerSearchID", DbType="Int NOT NULL")]
		public int businessPartnerSearchID
		{
			get
			{
				return this._businessPartnerSearchID;
			}
			set
			{
				if ((this._businessPartnerSearchID != value))
				{
					this._businessPartnerSearchID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr2", DbType="Int NOT NULL")]
		public int Expr2
		{
			get
			{
				return this._Expr2;
			}
			set
			{
				if ((this._Expr2 != value))
				{
					this._Expr2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_searchString", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string searchString
		{
			get
			{
				return this._searchString;
			}
			set
			{
				if ((this._searchString != value))
				{
					this._searchString = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.businessPartnerSearch")]
	public partial class businessPartnerSearch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _businessPartnerSearchID;
		
		private int _businessPartnerId;
		
		private string _searchString;
		
		private EntityRef<businessPartner> _businessPartner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbusinessPartnerSearchIDChanging(int value);
    partial void OnbusinessPartnerSearchIDChanged();
    partial void OnbusinessPartnerIdChanging(int value);
    partial void OnbusinessPartnerIdChanged();
    partial void OnsearchStringChanging(string value);
    partial void OnsearchStringChanged();
    #endregion
		
		public businessPartnerSearch()
		{
			this._businessPartner = default(EntityRef<businessPartner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessPartnerSearchID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int businessPartnerSearchID
		{
			get
			{
				return this._businessPartnerSearchID;
			}
			set
			{
				if ((this._businessPartnerSearchID != value))
				{
					this.OnbusinessPartnerSearchIDChanging(value);
					this.SendPropertyChanging();
					this._businessPartnerSearchID = value;
					this.SendPropertyChanged("businessPartnerSearchID");
					this.OnbusinessPartnerSearchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessPartnerId", DbType="Int NOT NULL")]
		public int businessPartnerId
		{
			get
			{
				return this._businessPartnerId;
			}
			set
			{
				if ((this._businessPartnerId != value))
				{
					if (this._businessPartner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbusinessPartnerIdChanging(value);
					this.SendPropertyChanging();
					this._businessPartnerId = value;
					this.SendPropertyChanged("businessPartnerId");
					this.OnbusinessPartnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_searchString", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string searchString
		{
			get
			{
				return this._searchString;
			}
			set
			{
				if ((this._searchString != value))
				{
					this.OnsearchStringChanging(value);
					this.SendPropertyChanging();
					this._searchString = value;
					this.SendPropertyChanged("searchString");
					this.OnsearchStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_businessPartnerSearch", Storage="_businessPartner", ThisKey="businessPartnerId", OtherKey="businessPartnerId", IsForeignKey=true)]
		public businessPartner businessPartner
		{
			get
			{
				return this._businessPartner.Entity;
			}
			set
			{
				businessPartner previousValue = this._businessPartner.Entity;
				if (((previousValue != value) 
							|| (this._businessPartner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._businessPartner.Entity = null;
						previousValue.businessPartnerSearches.Remove(this);
					}
					this._businessPartner.Entity = value;
					if ((value != null))
					{
						value.businessPartnerSearches.Add(this);
						this._businessPartnerId = value.businessPartnerId;
					}
					else
					{
						this._businessPartnerId = default(int);
					}
					this.SendPropertyChanged("businessPartner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userRole")]
	public partial class userRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userRoleId;
		
		private System.Guid _userId;
		
		private string _roleCode;
		
		private string _projectCode;
		
		private EntityRef<applicationRole> _applicationRole;
		
		private EntityRef<project> _project;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserRoleIdChanging(int value);
    partial void OnuserRoleIdChanged();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OnroleCodeChanging(string value);
    partial void OnroleCodeChanged();
    partial void OnprojectCodeChanging(string value);
    partial void OnprojectCodeChanged();
    #endregion
		
		public userRole()
		{
			this._applicationRole = default(EntityRef<applicationRole>);
			this._project = default(EntityRef<project>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userRoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int userRoleId
		{
			get
			{
				return this._userRoleId;
			}
			set
			{
				if ((this._userRoleId != value))
				{
					this.OnuserRoleIdChanging(value);
					this.SendPropertyChanging();
					this._userRoleId = value;
					this.SendPropertyChanged("userRoleId");
					this.OnuserRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string roleCode
		{
			get
			{
				return this._roleCode;
			}
			set
			{
				if ((this._roleCode != value))
				{
					if (this._applicationRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnroleCodeChanging(value);
					this.SendPropertyChanging();
					this._roleCode = value;
					this.SendPropertyChanged("roleCode");
					this.OnroleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectCode", DbType="NVarChar(50)")]
		public string projectCode
		{
			get
			{
				return this._projectCode;
			}
			set
			{
				if ((this._projectCode != value))
				{
					if (this._project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectCodeChanging(value);
					this.SendPropertyChanging();
					this._projectCode = value;
					this.SendPropertyChanged("projectCode");
					this.OnprojectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="applicationRole_userRole", Storage="_applicationRole", ThisKey="roleCode", OtherKey="roleCode", IsForeignKey=true)]
		public applicationRole applicationRole
		{
			get
			{
				return this._applicationRole.Entity;
			}
			set
			{
				applicationRole previousValue = this._applicationRole.Entity;
				if (((previousValue != value) 
							|| (this._applicationRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._applicationRole.Entity = null;
						previousValue.userRoles.Remove(this);
					}
					this._applicationRole.Entity = value;
					if ((value != null))
					{
						value.userRoles.Add(this);
						this._roleCode = value.roleCode;
					}
					else
					{
						this._roleCode = default(string);
					}
					this.SendPropertyChanged("applicationRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_userRole", Storage="_project", ThisKey="projectCode", OtherKey="projectCode", IsForeignKey=true)]
		public project project
		{
			get
			{
				return this._project.Entity;
			}
			set
			{
				project previousValue = this._project.Entity;
				if (((previousValue != value) 
							|| (this._project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project.Entity = null;
						previousValue.userRoles.Remove(this);
					}
					this._project.Entity = value;
					if ((value != null))
					{
						value.userRoles.Add(this);
						this._projectCode = value.projectCode;
					}
					else
					{
						this._projectCode = default(string);
					}
					this.SendPropertyChanged("project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_userRole", Storage="_User", ThisKey="userId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.userRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.userRoles.Add(this);
						this._userId = value.UserId;
					}
					else
					{
						this._userId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_name_in_users")]
	public partial class vw_name_in_user
	{
		
		private string _UserName;
		
		private System.Guid _UserId;
		
		private string _name;
		
		public vw_name_in_user()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(500)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.businessPartner")]
	public partial class businessPartner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _businessPartnerId;
		
		private string _bpName;
		
		private string _bpCode;
		
		private string _countryCode;
		
		private char _bpType;
		
		private string _companyGroupCode;
		
		private string _companyCode;
		
		private System.Nullable<int> _defaultContactPersonId;
		
		private string _languageCode;
		
		private string _address;
		
		private string _telephone;
		
		private string _fax;
		
		private System.DateTime _timeStampCreated;
		
		private System.Nullable<System.DateTime> _timeStampLastUpdate;
		
		private System.Nullable<System.Guid> _accountManager;
		
		private bool _isMother;
		
		private System.Nullable<int> _bpMother;
		
		private EntitySet<contactPerson> _contactPersons;
		
		private EntitySet<goodsReceipt> _goodsReceipts;
		
		private EntitySet<project> _projects;
		
		private EntitySet<purchaseOrder> _purchaseOrders;
		
		private EntitySet<delivery> _deliveries;
		
		private EntitySet<businessPartnerSearch> _businessPartnerSearches;
		
		private EntitySet<businessPartner> _businessPartners;
		
		private EntitySet<certificateBundle> _certificateBundles;
		
		private EntitySet<businessPartnerApplication> _businessPartnerApplications;
		
		private EntitySet<usageReport> _usageReports;
		
		private EntityRef<businessPartner> _businessPartner1;
		
		private EntityRef<company> _company;
		
		private EntityRef<companyGroup> _companyGroup;
		
		private EntityRef<contactPerson> _contactPerson;
		
		private EntityRef<country> _country;
		
		private EntityRef<language> _language;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbusinessPartnerIdChanging(int value);
    partial void OnbusinessPartnerIdChanged();
    partial void OnbpNameChanging(string value);
    partial void OnbpNameChanged();
    partial void OnbpCodeChanging(string value);
    partial void OnbpCodeChanged();
    partial void OncountryCodeChanging(string value);
    partial void OncountryCodeChanged();
    partial void OnbpTypeChanging(char value);
    partial void OnbpTypeChanged();
    partial void OncompanyGroupCodeChanging(string value);
    partial void OncompanyGroupCodeChanged();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    partial void OndefaultContactPersonIdChanging(System.Nullable<int> value);
    partial void OndefaultContactPersonIdChanged();
    partial void OnlanguageCodeChanging(string value);
    partial void OnlanguageCodeChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void OntimeStampCreatedChanging(System.DateTime value);
    partial void OntimeStampCreatedChanged();
    partial void OntimeStampLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OntimeStampLastUpdateChanged();
    partial void OnaccountManagerChanging(System.Nullable<System.Guid> value);
    partial void OnaccountManagerChanged();
    partial void OnisMotherChanging(bool value);
    partial void OnisMotherChanged();
    partial void OnbpMotherChanging(System.Nullable<int> value);
    partial void OnbpMotherChanged();
    #endregion
		
		public businessPartner()
		{
			this._contactPersons = new EntitySet<contactPerson>(new Action<contactPerson>(this.attach_contactPersons), new Action<contactPerson>(this.detach_contactPersons));
			this._goodsReceipts = new EntitySet<goodsReceipt>(new Action<goodsReceipt>(this.attach_goodsReceipts), new Action<goodsReceipt>(this.detach_goodsReceipts));
			this._projects = new EntitySet<project>(new Action<project>(this.attach_projects), new Action<project>(this.detach_projects));
			this._purchaseOrders = new EntitySet<purchaseOrder>(new Action<purchaseOrder>(this.attach_purchaseOrders), new Action<purchaseOrder>(this.detach_purchaseOrders));
			this._deliveries = new EntitySet<delivery>(new Action<delivery>(this.attach_deliveries), new Action<delivery>(this.detach_deliveries));
			this._businessPartnerSearches = new EntitySet<businessPartnerSearch>(new Action<businessPartnerSearch>(this.attach_businessPartnerSearches), new Action<businessPartnerSearch>(this.detach_businessPartnerSearches));
			this._businessPartners = new EntitySet<businessPartner>(new Action<businessPartner>(this.attach_businessPartners), new Action<businessPartner>(this.detach_businessPartners));
			this._certificateBundles = new EntitySet<certificateBundle>(new Action<certificateBundle>(this.attach_certificateBundles), new Action<certificateBundle>(this.detach_certificateBundles));
			this._businessPartnerApplications = new EntitySet<businessPartnerApplication>(new Action<businessPartnerApplication>(this.attach_businessPartnerApplications), new Action<businessPartnerApplication>(this.detach_businessPartnerApplications));
			this._usageReports = new EntitySet<usageReport>(new Action<usageReport>(this.attach_usageReports), new Action<usageReport>(this.detach_usageReports));
			this._businessPartner1 = default(EntityRef<businessPartner>);
			this._company = default(EntityRef<company>);
			this._companyGroup = default(EntityRef<companyGroup>);
			this._contactPerson = default(EntityRef<contactPerson>);
			this._country = default(EntityRef<country>);
			this._language = default(EntityRef<language>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessPartnerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int businessPartnerId
		{
			get
			{
				return this._businessPartnerId;
			}
			set
			{
				if ((this._businessPartnerId != value))
				{
					this.OnbusinessPartnerIdChanging(value);
					this.SendPropertyChanging();
					this._businessPartnerId = value;
					this.SendPropertyChanged("businessPartnerId");
					this.OnbusinessPartnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bpName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string bpName
		{
			get
			{
				return this._bpName;
			}
			set
			{
				if ((this._bpName != value))
				{
					this.OnbpNameChanging(value);
					this.SendPropertyChanging();
					this._bpName = value;
					this.SendPropertyChanged("bpName");
					this.OnbpNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bpCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string bpCode
		{
			get
			{
				return this._bpCode;
			}
			set
			{
				if ((this._bpCode != value))
				{
					this.OnbpCodeChanging(value);
					this.SendPropertyChanging();
					this._bpCode = value;
					this.SendPropertyChanged("bpCode");
					this.OnbpCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string countryCode
		{
			get
			{
				return this._countryCode;
			}
			set
			{
				if ((this._countryCode != value))
				{
					if (this._country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncountryCodeChanging(value);
					this.SendPropertyChanging();
					this._countryCode = value;
					this.SendPropertyChanged("countryCode");
					this.OncountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bpType", DbType="Char(1) NOT NULL")]
		public char bpType
		{
			get
			{
				return this._bpType;
			}
			set
			{
				if ((this._bpType != value))
				{
					this.OnbpTypeChanging(value);
					this.SendPropertyChanging();
					this._bpType = value;
					this.SendPropertyChanged("bpType");
					this.OnbpTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyGroupCode", DbType="NVarChar(50)")]
		public string companyGroupCode
		{
			get
			{
				return this._companyGroupCode;
			}
			set
			{
				if ((this._companyGroupCode != value))
				{
					if (this._companyGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._companyGroupCode = value;
					this.SendPropertyChanged("companyGroupCode");
					this.OncompanyGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50)")]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					if (this._company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_defaultContactPersonId", DbType="Int")]
		public System.Nullable<int> defaultContactPersonId
		{
			get
			{
				return this._defaultContactPersonId;
			}
			set
			{
				if ((this._defaultContactPersonId != value))
				{
					if (this._contactPerson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndefaultContactPersonIdChanging(value);
					this.SendPropertyChanging();
					this._defaultContactPersonId = value;
					this.SendPropertyChanged("defaultContactPersonId");
					this.OndefaultContactPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_languageCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string languageCode
		{
			get
			{
				return this._languageCode;
			}
			set
			{
				if ((this._languageCode != value))
				{
					if (this._language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._languageCode = value;
					this.SendPropertyChanged("languageCode");
					this.OnlanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(255)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="NVarChar(50)")]
		public string telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="NVarChar(50)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStampCreated", DbType="DateTime NOT NULL")]
		public System.DateTime timeStampCreated
		{
			get
			{
				return this._timeStampCreated;
			}
			set
			{
				if ((this._timeStampCreated != value))
				{
					this.OntimeStampCreatedChanging(value);
					this.SendPropertyChanging();
					this._timeStampCreated = value;
					this.SendPropertyChanged("timeStampCreated");
					this.OntimeStampCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStampLastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> timeStampLastUpdate
		{
			get
			{
				return this._timeStampLastUpdate;
			}
			set
			{
				if ((this._timeStampLastUpdate != value))
				{
					this.OntimeStampLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._timeStampLastUpdate = value;
					this.SendPropertyChanged("timeStampLastUpdate");
					this.OntimeStampLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountManager", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> accountManager
		{
			get
			{
				return this._accountManager;
			}
			set
			{
				if ((this._accountManager != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaccountManagerChanging(value);
					this.SendPropertyChanging();
					this._accountManager = value;
					this.SendPropertyChanged("accountManager");
					this.OnaccountManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isMother", DbType="Bit NOT NULL")]
		public bool isMother
		{
			get
			{
				return this._isMother;
			}
			set
			{
				if ((this._isMother != value))
				{
					this.OnisMotherChanging(value);
					this.SendPropertyChanging();
					this._isMother = value;
					this.SendPropertyChanged("isMother");
					this.OnisMotherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bpMother", DbType="Int")]
		public System.Nullable<int> bpMother
		{
			get
			{
				return this._bpMother;
			}
			set
			{
				if ((this._bpMother != value))
				{
					if (this._businessPartner1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbpMotherChanging(value);
					this.SendPropertyChanging();
					this._bpMother = value;
					this.SendPropertyChanged("bpMother");
					this.OnbpMotherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_contactPerson", Storage="_contactPersons", ThisKey="businessPartnerId", OtherKey="businessPartnerId")]
		public EntitySet<contactPerson> contactPersons
		{
			get
			{
				return this._contactPersons;
			}
			set
			{
				this._contactPersons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_goodsReceipt", Storage="_goodsReceipts", ThisKey="businessPartnerId", OtherKey="businessPartnerId")]
		public EntitySet<goodsReceipt> goodsReceipts
		{
			get
			{
				return this._goodsReceipts;
			}
			set
			{
				this._goodsReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_project", Storage="_projects", ThisKey="businessPartnerId", OtherKey="businessPartnerId")]
		public EntitySet<project> projects
		{
			get
			{
				return this._projects;
			}
			set
			{
				this._projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_purchaseOrder", Storage="_purchaseOrders", ThisKey="businessPartnerId", OtherKey="businessPartnerId")]
		public EntitySet<purchaseOrder> purchaseOrders
		{
			get
			{
				return this._purchaseOrders;
			}
			set
			{
				this._purchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_delivery", Storage="_deliveries", ThisKey="businessPartnerId", OtherKey="businessPartnerId")]
		public EntitySet<delivery> deliveries
		{
			get
			{
				return this._deliveries;
			}
			set
			{
				this._deliveries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_businessPartnerSearch", Storage="_businessPartnerSearches", ThisKey="businessPartnerId", OtherKey="businessPartnerId")]
		public EntitySet<businessPartnerSearch> businessPartnerSearches
		{
			get
			{
				return this._businessPartnerSearches;
			}
			set
			{
				this._businessPartnerSearches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_businessPartner", Storage="_businessPartners", ThisKey="businessPartnerId", OtherKey="bpMother")]
		public EntitySet<businessPartner> businessPartners
		{
			get
			{
				return this._businessPartners;
			}
			set
			{
				this._businessPartners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_certificateBundle", Storage="_certificateBundles", ThisKey="businessPartnerId", OtherKey="businessPartnerId")]
		public EntitySet<certificateBundle> certificateBundles
		{
			get
			{
				return this._certificateBundles;
			}
			set
			{
				this._certificateBundles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_businessPartnerApplication", Storage="_businessPartnerApplications", ThisKey="businessPartnerId", OtherKey="businessPartnerId")]
		public EntitySet<businessPartnerApplication> businessPartnerApplications
		{
			get
			{
				return this._businessPartnerApplications;
			}
			set
			{
				this._businessPartnerApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_usageReport", Storage="_usageReports", ThisKey="businessPartnerId", OtherKey="businessPartnerId")]
		public EntitySet<usageReport> usageReports
		{
			get
			{
				return this._usageReports;
			}
			set
			{
				this._usageReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_businessPartner", Storage="_businessPartner1", ThisKey="bpMother", OtherKey="businessPartnerId", IsForeignKey=true)]
		public businessPartner businessPartner1
		{
			get
			{
				return this._businessPartner1.Entity;
			}
			set
			{
				businessPartner previousValue = this._businessPartner1.Entity;
				if (((previousValue != value) 
							|| (this._businessPartner1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._businessPartner1.Entity = null;
						previousValue.businessPartners.Remove(this);
					}
					this._businessPartner1.Entity = value;
					if ((value != null))
					{
						value.businessPartners.Add(this);
						this._bpMother = value.businessPartnerId;
					}
					else
					{
						this._bpMother = default(Nullable<int>);
					}
					this.SendPropertyChanged("businessPartner1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_businessPartner", Storage="_company", ThisKey="companyCode", OtherKey="companyCode", IsForeignKey=true)]
		public company company
		{
			get
			{
				return this._company.Entity;
			}
			set
			{
				company previousValue = this._company.Entity;
				if (((previousValue != value) 
							|| (this._company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._company.Entity = null;
						previousValue.businessPartners.Remove(this);
					}
					this._company.Entity = value;
					if ((value != null))
					{
						value.businessPartners.Add(this);
						this._companyCode = value.companyCode;
					}
					else
					{
						this._companyCode = default(string);
					}
					this.SendPropertyChanged("company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="companyGroup_businessPartner", Storage="_companyGroup", ThisKey="companyGroupCode", OtherKey="companyGroupCode", IsForeignKey=true)]
		public companyGroup companyGroup
		{
			get
			{
				return this._companyGroup.Entity;
			}
			set
			{
				companyGroup previousValue = this._companyGroup.Entity;
				if (((previousValue != value) 
							|| (this._companyGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._companyGroup.Entity = null;
						previousValue.businessPartners.Remove(this);
					}
					this._companyGroup.Entity = value;
					if ((value != null))
					{
						value.businessPartners.Add(this);
						this._companyGroupCode = value.companyGroupCode;
					}
					else
					{
						this._companyGroupCode = default(string);
					}
					this.SendPropertyChanged("companyGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contactPerson_businessPartner", Storage="_contactPerson", ThisKey="defaultContactPersonId", OtherKey="contactPersonId", IsForeignKey=true)]
		public contactPerson contactPerson
		{
			get
			{
				return this._contactPerson.Entity;
			}
			set
			{
				contactPerson previousValue = this._contactPerson.Entity;
				if (((previousValue != value) 
							|| (this._contactPerson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._contactPerson.Entity = null;
						previousValue.businessPartners.Remove(this);
					}
					this._contactPerson.Entity = value;
					if ((value != null))
					{
						value.businessPartners.Add(this);
						this._defaultContactPersonId = value.contactPersonId;
					}
					else
					{
						this._defaultContactPersonId = default(Nullable<int>);
					}
					this.SendPropertyChanged("contactPerson");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="country_businessPartner", Storage="_country", ThisKey="countryCode", OtherKey="countryCode", IsForeignKey=true)]
		public country country
		{
			get
			{
				return this._country.Entity;
			}
			set
			{
				country previousValue = this._country.Entity;
				if (((previousValue != value) 
							|| (this._country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._country.Entity = null;
						previousValue.businessPartners.Remove(this);
					}
					this._country.Entity = value;
					if ((value != null))
					{
						value.businessPartners.Add(this);
						this._countryCode = value.countryCode;
					}
					else
					{
						this._countryCode = default(string);
					}
					this.SendPropertyChanged("country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="language_businessPartner", Storage="_language", ThisKey="languageCode", OtherKey="languageCode", IsForeignKey=true)]
		public language language
		{
			get
			{
				return this._language.Entity;
			}
			set
			{
				language previousValue = this._language.Entity;
				if (((previousValue != value) 
							|| (this._language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._language.Entity = null;
						previousValue.businessPartners.Remove(this);
					}
					this._language.Entity = value;
					if ((value != null))
					{
						value.businessPartners.Add(this);
						this._languageCode = value.languageCode;
					}
					else
					{
						this._languageCode = default(string);
					}
					this.SendPropertyChanged("language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_businessPartner", Storage="_User", ThisKey="accountManager", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.businessPartners.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.businessPartners.Add(this);
						this._accountManager = value.UserId;
					}
					else
					{
						this._accountManager = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contactPersons(contactPerson entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner = this;
		}
		
		private void detach_contactPersons(contactPerson entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner = null;
		}
		
		private void attach_goodsReceipts(goodsReceipt entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner = this;
		}
		
		private void detach_goodsReceipts(goodsReceipt entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner = null;
		}
		
		private void attach_projects(project entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner = this;
		}
		
		private void detach_projects(project entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner = null;
		}
		
		private void attach_purchaseOrders(purchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner = this;
		}
		
		private void detach_purchaseOrders(purchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner = null;
		}
		
		private void attach_deliveries(delivery entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner = this;
		}
		
		private void detach_deliveries(delivery entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner = null;
		}
		
		private void attach_businessPartnerSearches(businessPartnerSearch entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner = this;
		}
		
		private void detach_businessPartnerSearches(businessPartnerSearch entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner = null;
		}
		
		private void attach_businessPartners(businessPartner entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner1 = this;
		}
		
		private void detach_businessPartners(businessPartner entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner1 = null;
		}
		
		private void attach_certificateBundles(certificateBundle entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner = this;
		}
		
		private void detach_certificateBundles(certificateBundle entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner = null;
		}
		
		private void attach_businessPartnerApplications(businessPartnerApplication entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner = this;
		}
		
		private void detach_businessPartnerApplications(businessPartnerApplication entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner = null;
		}
		
		private void attach_usageReports(usageReport entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner = this;
		}
		
		private void detach_usageReports(usageReport entity)
		{
			this.SendPropertyChanging();
			entity.businessPartner = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.certificateDownloaded")]
	public partial class certificateDownloaded : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _certificateDownloadedId;
		
		private int _batchId;
		
		private System.DateTime _dateTime;
		
		private int _contactPersonId;
		
		private int _baseDocId;
		
		private int _baseLineNum;
		
		private string _baseDocType;
		
		private string _companyCode;
		
		private EntityRef<batch> _batch;
		
		private EntityRef<company> _company;
		
		private EntityRef<contactPerson> _contactPerson;
		
		private EntityRef<document> _document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncertificateDownloadedIdChanging(int value);
    partial void OncertificateDownloadedIdChanged();
    partial void OnbatchIdChanging(int value);
    partial void OnbatchIdChanged();
    partial void OndateTimeChanging(System.DateTime value);
    partial void OndateTimeChanged();
    partial void OncontactPersonIdChanging(int value);
    partial void OncontactPersonIdChanged();
    partial void OnbaseDocIdChanging(int value);
    partial void OnbaseDocIdChanged();
    partial void OnbaseLineNumChanging(int value);
    partial void OnbaseLineNumChanged();
    partial void OnbaseDocTypeChanging(string value);
    partial void OnbaseDocTypeChanged();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    #endregion
		
		public certificateDownloaded()
		{
			this._batch = default(EntityRef<batch>);
			this._company = default(EntityRef<company>);
			this._contactPerson = default(EntityRef<contactPerson>);
			this._document = default(EntityRef<document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_certificateDownloadedId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int certificateDownloadedId
		{
			get
			{
				return this._certificateDownloadedId;
			}
			set
			{
				if ((this._certificateDownloadedId != value))
				{
					this.OncertificateDownloadedIdChanging(value);
					this.SendPropertyChanging();
					this._certificateDownloadedId = value;
					this.SendPropertyChanged("certificateDownloadedId");
					this.OncertificateDownloadedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_batchId", DbType="Int NOT NULL")]
		public int batchId
		{
			get
			{
				return this._batchId;
			}
			set
			{
				if ((this._batchId != value))
				{
					if (this._batch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbatchIdChanging(value);
					this.SendPropertyChanging();
					this._batchId = value;
					this.SendPropertyChanged("batchId");
					this.OnbatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateTime", DbType="DateTime NOT NULL")]
		public System.DateTime dateTime
		{
			get
			{
				return this._dateTime;
			}
			set
			{
				if ((this._dateTime != value))
				{
					this.OndateTimeChanging(value);
					this.SendPropertyChanging();
					this._dateTime = value;
					this.SendPropertyChanged("dateTime");
					this.OndateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactPersonId", DbType="Int NOT NULL")]
		public int contactPersonId
		{
			get
			{
				return this._contactPersonId;
			}
			set
			{
				if ((this._contactPersonId != value))
				{
					if (this._contactPerson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncontactPersonIdChanging(value);
					this.SendPropertyChanging();
					this._contactPersonId = value;
					this.SendPropertyChanged("contactPersonId");
					this.OncontactPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocId", DbType="Int NOT NULL")]
		public int baseDocId
		{
			get
			{
				return this._baseDocId;
			}
			set
			{
				if ((this._baseDocId != value))
				{
					this.OnbaseDocIdChanging(value);
					this.SendPropertyChanging();
					this._baseDocId = value;
					this.SendPropertyChanged("baseDocId");
					this.OnbaseDocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseLineNum", DbType="Int NOT NULL")]
		public int baseLineNum
		{
			get
			{
				return this._baseLineNum;
			}
			set
			{
				if ((this._baseLineNum != value))
				{
					this.OnbaseLineNumChanging(value);
					this.SendPropertyChanging();
					this._baseLineNum = value;
					this.SendPropertyChanged("baseLineNum");
					this.OnbaseLineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string baseDocType
		{
			get
			{
				return this._baseDocType;
			}
			set
			{
				if ((this._baseDocType != value))
				{
					if (this._document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbaseDocTypeChanging(value);
					this.SendPropertyChanging();
					this._baseDocType = value;
					this.SendPropertyChanged("baseDocType");
					this.OnbaseDocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					if (this._company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="batch_certificateDownloaded", Storage="_batch", ThisKey="batchId", OtherKey="batchId", IsForeignKey=true)]
		public batch batch
		{
			get
			{
				return this._batch.Entity;
			}
			set
			{
				batch previousValue = this._batch.Entity;
				if (((previousValue != value) 
							|| (this._batch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._batch.Entity = null;
						previousValue.certificateDownloadeds.Remove(this);
					}
					this._batch.Entity = value;
					if ((value != null))
					{
						value.certificateDownloadeds.Add(this);
						this._batchId = value.batchId;
					}
					else
					{
						this._batchId = default(int);
					}
					this.SendPropertyChanged("batch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_certificateDownloaded", Storage="_company", ThisKey="companyCode", OtherKey="companyCode", IsForeignKey=true)]
		public company company
		{
			get
			{
				return this._company.Entity;
			}
			set
			{
				company previousValue = this._company.Entity;
				if (((previousValue != value) 
							|| (this._company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._company.Entity = null;
						previousValue.certificateDownloadeds.Remove(this);
					}
					this._company.Entity = value;
					if ((value != null))
					{
						value.certificateDownloadeds.Add(this);
						this._companyCode = value.companyCode;
					}
					else
					{
						this._companyCode = default(string);
					}
					this.SendPropertyChanged("company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contactPerson_certificateDownloaded", Storage="_contactPerson", ThisKey="contactPersonId", OtherKey="contactPersonId", IsForeignKey=true)]
		public contactPerson contactPerson
		{
			get
			{
				return this._contactPerson.Entity;
			}
			set
			{
				contactPerson previousValue = this._contactPerson.Entity;
				if (((previousValue != value) 
							|| (this._contactPerson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._contactPerson.Entity = null;
						previousValue.certificateDownloadeds.Remove(this);
					}
					this._contactPerson.Entity = value;
					if ((value != null))
					{
						value.certificateDownloadeds.Add(this);
						this._contactPersonId = value.contactPersonId;
					}
					else
					{
						this._contactPersonId = default(int);
					}
					this.SendPropertyChanged("contactPerson");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_certificateDownloaded", Storage="_document", ThisKey="baseDocType", OtherKey="docType", IsForeignKey=true)]
		public document document
		{
			get
			{
				return this._document.Entity;
			}
			set
			{
				document previousValue = this._document.Entity;
				if (((previousValue != value) 
							|| (this._document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._document.Entity = null;
						previousValue.certificateDownloadeds.Remove(this);
					}
					this._document.Entity = value;
					if ((value != null))
					{
						value.certificateDownloadeds.Add(this);
						this._baseDocType = value.docType;
					}
					else
					{
						this._baseDocType = default(string);
					}
					this.SendPropertyChanged("document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.certificateModel")]
	public partial class certificateModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _modelId;
		
		private string _description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmodelIdChanging(int value);
    partial void OnmodelIdChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public certificateModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modelId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int modelId
		{
			get
			{
				return this._modelId;
			}
			set
			{
				if ((this._modelId != value))
				{
					this.OnmodelIdChanging(value);
					this.SendPropertyChanging();
					this._modelId = value;
					this.SendPropertyChanged("modelId");
					this.OnmodelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.certificateBundle")]
	public partial class certificateBundle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _certificateBundleId;
		
		private int _modelId;
		
		private System.Nullable<System.DateTime> _startDate;
		
		private System.Nullable<System.DateTime> _expireDate;
		
		private System.Nullable<int> _previousCertQty;
		
		private System.Nullable<int> _orderedCertQty;
		
		private System.Nullable<int> _actualCertQty;
		
		private string _companyCode;
		
		private System.Nullable<int> _usedCertQty;
		
		private bool _isActive;
		
		private System.Nullable<decimal> _certificatePrice;
		
		private int _businessPartnerId;
		
		private EntityRef<businessPartner> _businessPartner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncertificateBundleIdChanging(int value);
    partial void OncertificateBundleIdChanged();
    partial void OnmodelIdChanging(int value);
    partial void OnmodelIdChanged();
    partial void OnstartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnstartDateChanged();
    partial void OnexpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexpireDateChanged();
    partial void OnpreviousCertQtyChanging(System.Nullable<int> value);
    partial void OnpreviousCertQtyChanged();
    partial void OnorderedCertQtyChanging(System.Nullable<int> value);
    partial void OnorderedCertQtyChanged();
    partial void OnactualCertQtyChanging(System.Nullable<int> value);
    partial void OnactualCertQtyChanged();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    partial void OnusedCertQtyChanging(System.Nullable<int> value);
    partial void OnusedCertQtyChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    partial void OncertificatePriceChanging(System.Nullable<decimal> value);
    partial void OncertificatePriceChanged();
    partial void OnbusinessPartnerIdChanging(int value);
    partial void OnbusinessPartnerIdChanged();
    #endregion
		
		public certificateBundle()
		{
			this._businessPartner = default(EntityRef<businessPartner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_certificateBundleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int certificateBundleId
		{
			get
			{
				return this._certificateBundleId;
			}
			set
			{
				if ((this._certificateBundleId != value))
				{
					this.OncertificateBundleIdChanging(value);
					this.SendPropertyChanging();
					this._certificateBundleId = value;
					this.SendPropertyChanged("certificateBundleId");
					this.OncertificateBundleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modelId", DbType="Int NOT NULL")]
		public int modelId
		{
			get
			{
				return this._modelId;
			}
			set
			{
				if ((this._modelId != value))
				{
					this.OnmodelIdChanging(value);
					this.SendPropertyChanging();
					this._modelId = value;
					this.SendPropertyChanged("modelId");
					this.OnmodelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> startDate
		{
			get
			{
				return this._startDate;
			}
			set
			{
				if ((this._startDate != value))
				{
					this.OnstartDateChanging(value);
					this.SendPropertyChanging();
					this._startDate = value;
					this.SendPropertyChanged("startDate");
					this.OnstartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> expireDate
		{
			get
			{
				return this._expireDate;
			}
			set
			{
				if ((this._expireDate != value))
				{
					this.OnexpireDateChanging(value);
					this.SendPropertyChanging();
					this._expireDate = value;
					this.SendPropertyChanged("expireDate");
					this.OnexpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_previousCertQty", DbType="Int")]
		public System.Nullable<int> previousCertQty
		{
			get
			{
				return this._previousCertQty;
			}
			set
			{
				if ((this._previousCertQty != value))
				{
					this.OnpreviousCertQtyChanging(value);
					this.SendPropertyChanging();
					this._previousCertQty = value;
					this.SendPropertyChanged("previousCertQty");
					this.OnpreviousCertQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderedCertQty", DbType="Int")]
		public System.Nullable<int> orderedCertQty
		{
			get
			{
				return this._orderedCertQty;
			}
			set
			{
				if ((this._orderedCertQty != value))
				{
					this.OnorderedCertQtyChanging(value);
					this.SendPropertyChanging();
					this._orderedCertQty = value;
					this.SendPropertyChanged("orderedCertQty");
					this.OnorderedCertQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actualCertQty", DbType="Int")]
		public System.Nullable<int> actualCertQty
		{
			get
			{
				return this._actualCertQty;
			}
			set
			{
				if ((this._actualCertQty != value))
				{
					this.OnactualCertQtyChanging(value);
					this.SendPropertyChanging();
					this._actualCertQty = value;
					this.SendPropertyChanged("actualCertQty");
					this.OnactualCertQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50)")]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usedCertQty", DbType="Int")]
		public System.Nullable<int> usedCertQty
		{
			get
			{
				return this._usedCertQty;
			}
			set
			{
				if ((this._usedCertQty != value))
				{
					this.OnusedCertQtyChanging(value);
					this.SendPropertyChanging();
					this._usedCertQty = value;
					this.SendPropertyChanged("usedCertQty");
					this.OnusedCertQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_certificatePrice", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> certificatePrice
		{
			get
			{
				return this._certificatePrice;
			}
			set
			{
				if ((this._certificatePrice != value))
				{
					this.OncertificatePriceChanging(value);
					this.SendPropertyChanging();
					this._certificatePrice = value;
					this.SendPropertyChanged("certificatePrice");
					this.OncertificatePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessPartnerId", DbType="Int NOT NULL")]
		public int businessPartnerId
		{
			get
			{
				return this._businessPartnerId;
			}
			set
			{
				if ((this._businessPartnerId != value))
				{
					if (this._businessPartner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbusinessPartnerIdChanging(value);
					this.SendPropertyChanging();
					this._businessPartnerId = value;
					this.SendPropertyChanged("businessPartnerId");
					this.OnbusinessPartnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_certificateBundle", Storage="_businessPartner", ThisKey="businessPartnerId", OtherKey="businessPartnerId", IsForeignKey=true)]
		public businessPartner businessPartner
		{
			get
			{
				return this._businessPartner.Entity;
			}
			set
			{
				businessPartner previousValue = this._businessPartner.Entity;
				if (((previousValue != value) 
							|| (this._businessPartner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._businessPartner.Entity = null;
						previousValue.certificateBundles.Remove(this);
					}
					this._businessPartner.Entity = value;
					if ((value != null))
					{
						value.certificateBundles.Add(this);
						this._businessPartnerId = value.businessPartnerId;
					}
					else
					{
						this._businessPartnerId = default(int);
					}
					this.SendPropertyChanged("businessPartner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userSetting")]
	public partial class userSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _userId;
		
		private string _companyCode;
		
		private string _defaultCultureCode;
		
		private string _name;
		
		private bool _siteAdmin;
		
		private EntitySet<applicationAccess> _applicationAccesses;
		
		private EntityRef<User> _User;
		
		private EntityRef<company> _company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    partial void OndefaultCultureCodeChanging(string value);
    partial void OndefaultCultureCodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsiteAdminChanging(bool value);
    partial void OnsiteAdminChanged();
    #endregion
		
		public userSetting()
		{
			this._applicationAccesses = new EntitySet<applicationAccess>(new Action<applicationAccess>(this.attach_applicationAccesses), new Action<applicationAccess>(this.detach_applicationAccesses));
			this._User = default(EntityRef<User>);
			this._company = default(EntityRef<company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					if (this._company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_defaultCultureCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string defaultCultureCode
		{
			get
			{
				return this._defaultCultureCode;
			}
			set
			{
				if ((this._defaultCultureCode != value))
				{
					this.OndefaultCultureCodeChanging(value);
					this.SendPropertyChanging();
					this._defaultCultureCode = value;
					this.SendPropertyChanged("defaultCultureCode");
					this.OndefaultCultureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(500)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_siteAdmin", DbType="Bit NOT NULL")]
		public bool siteAdmin
		{
			get
			{
				return this._siteAdmin;
			}
			set
			{
				if ((this._siteAdmin != value))
				{
					this.OnsiteAdminChanging(value);
					this.SendPropertyChanging();
					this._siteAdmin = value;
					this.SendPropertyChanged("siteAdmin");
					this.OnsiteAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="userSetting_applicationAccess", Storage="_applicationAccesses", ThisKey="userId", OtherKey="userId")]
		public EntitySet<applicationAccess> applicationAccesses
		{
			get
			{
				return this._applicationAccesses;
			}
			set
			{
				this._applicationAccesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_userSetting", Storage="_User", ThisKey="userId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.userSetting = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.userSetting = this;
						this._userId = value.UserId;
					}
					else
					{
						this._userId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_userSetting", Storage="_company", ThisKey="companyCode", OtherKey="companyCode", IsForeignKey=true)]
		public company company
		{
			get
			{
				return this._company.Entity;
			}
			set
			{
				company previousValue = this._company.Entity;
				if (((previousValue != value) 
							|| (this._company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._company.Entity = null;
						previousValue.userSettings.Remove(this);
					}
					this._company.Entity = value;
					if ((value != null))
					{
						value.userSettings.Add(this);
						this._companyCode = value.companyCode;
					}
					else
					{
						this._companyCode = default(string);
					}
					this.SendPropertyChanged("company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_applicationAccesses(applicationAccess entity)
		{
			this.SendPropertyChanging();
			entity.userSetting = this;
		}
		
		private void detach_applicationAccesses(applicationAccess entity)
		{
			this.SendPropertyChanging();
			entity.userSetting = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.businessPartnerApplication")]
	public partial class businessPartnerApplication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _businessPartnerId;
		
		private string _applicationCode;
		
		private EntityRef<application> _application;
		
		private EntityRef<businessPartner> _businessPartner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbusinessPartnerIdChanging(int value);
    partial void OnbusinessPartnerIdChanged();
    partial void OnapplicationCodeChanging(string value);
    partial void OnapplicationCodeChanged();
    #endregion
		
		public businessPartnerApplication()
		{
			this._application = default(EntityRef<application>);
			this._businessPartner = default(EntityRef<businessPartner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessPartnerId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int businessPartnerId
		{
			get
			{
				return this._businessPartnerId;
			}
			set
			{
				if ((this._businessPartnerId != value))
				{
					if (this._businessPartner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbusinessPartnerIdChanging(value);
					this.SendPropertyChanging();
					this._businessPartnerId = value;
					this.SendPropertyChanged("businessPartnerId");
					this.OnbusinessPartnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_applicationCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string applicationCode
		{
			get
			{
				return this._applicationCode;
			}
			set
			{
				if ((this._applicationCode != value))
				{
					if (this._application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnapplicationCodeChanging(value);
					this.SendPropertyChanging();
					this._applicationCode = value;
					this.SendPropertyChanged("applicationCode");
					this.OnapplicationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="application_businessPartnerApplication", Storage="_application", ThisKey="applicationCode", OtherKey="applicationCode", IsForeignKey=true)]
		public application application
		{
			get
			{
				return this._application.Entity;
			}
			set
			{
				application previousValue = this._application.Entity;
				if (((previousValue != value) 
							|| (this._application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._application.Entity = null;
						previousValue.businessPartnerApplications.Remove(this);
					}
					this._application.Entity = value;
					if ((value != null))
					{
						value.businessPartnerApplications.Add(this);
						this._applicationCode = value.applicationCode;
					}
					else
					{
						this._applicationCode = default(string);
					}
					this.SendPropertyChanged("application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_businessPartnerApplication", Storage="_businessPartner", ThisKey="businessPartnerId", OtherKey="businessPartnerId", IsForeignKey=true)]
		public businessPartner businessPartner
		{
			get
			{
				return this._businessPartner.Entity;
			}
			set
			{
				businessPartner previousValue = this._businessPartner.Entity;
				if (((previousValue != value) 
							|| (this._businessPartner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._businessPartner.Entity = null;
						previousValue.businessPartnerApplications.Remove(this);
					}
					this._businessPartner.Entity = value;
					if ((value != null))
					{
						value.businessPartnerApplications.Add(this);
						this._businessPartnerId = value.businessPartnerId;
					}
					else
					{
						this._businessPartnerId = default(int);
					}
					this.SendPropertyChanged("businessPartner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.item")]
	public partial class item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _itemId;
		
		private string _itemGroupCode;
		
		private string _itemCode;
		
		private string _companyGroupCode;
		
		private string _companyCode;
		
		private string _grade;
		
		private string _size;
		
		private string _description;
		
		private System.Nullable<decimal> _weight;
		
		private System.DateTime _timeStampCreated;
		
		private System.Nullable<System.DateTime> _timeStampLastUpdate;
		
		private string _uomSale;
		
		private System.Nullable<int> _hsNumber;
		
		private string _CertificateType;
		
		private EntitySet<goodsReceiptLine> _goodsReceiptLines;
		
		private EntitySet<itemVLunar> _itemVLunars;
		
		private EntitySet<priceItem> _priceItems;
		
		private EntitySet<purchaseOrderLine> _purchaseOrderLines;
		
		private EntitySet<shoppingCart> _shoppingCarts;
		
		private EntitySet<stock> _stocks;
		
		private EntitySet<batch> _batches;
		
		private EntitySet<salesOrderLine> _salesOrderLines;
		
		private EntitySet<deliveryLine> _deliveryLines;
		
		private EntityRef<company> _company;
		
		private EntityRef<companyGroup> _companyGroup;
		
		private EntityRef<itemGroup> _itemGroup;
		
		private EntityRef<unitOfMeasure> _unitOfMeasure;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnitemIdChanging(int value);
    partial void OnitemIdChanged();
    partial void OnitemGroupCodeChanging(string value);
    partial void OnitemGroupCodeChanged();
    partial void OnitemCodeChanging(string value);
    partial void OnitemCodeChanged();
    partial void OncompanyGroupCodeChanging(string value);
    partial void OncompanyGroupCodeChanged();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    partial void OngradeChanging(string value);
    partial void OngradeChanged();
    partial void OnsizeChanging(string value);
    partial void OnsizeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnweightChanging(System.Nullable<decimal> value);
    partial void OnweightChanged();
    partial void OntimeStampCreatedChanging(System.DateTime value);
    partial void OntimeStampCreatedChanged();
    partial void OntimeStampLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OntimeStampLastUpdateChanged();
    partial void OnuomSaleChanging(string value);
    partial void OnuomSaleChanged();
    partial void OnhsNumberChanging(System.Nullable<int> value);
    partial void OnhsNumberChanged();
    partial void OnCertificateTypeChanging(string value);
    partial void OnCertificateTypeChanged();
    #endregion
		
		public item()
		{
			this._goodsReceiptLines = new EntitySet<goodsReceiptLine>(new Action<goodsReceiptLine>(this.attach_goodsReceiptLines), new Action<goodsReceiptLine>(this.detach_goodsReceiptLines));
			this._itemVLunars = new EntitySet<itemVLunar>(new Action<itemVLunar>(this.attach_itemVLunars), new Action<itemVLunar>(this.detach_itemVLunars));
			this._priceItems = new EntitySet<priceItem>(new Action<priceItem>(this.attach_priceItems), new Action<priceItem>(this.detach_priceItems));
			this._purchaseOrderLines = new EntitySet<purchaseOrderLine>(new Action<purchaseOrderLine>(this.attach_purchaseOrderLines), new Action<purchaseOrderLine>(this.detach_purchaseOrderLines));
			this._shoppingCarts = new EntitySet<shoppingCart>(new Action<shoppingCart>(this.attach_shoppingCarts), new Action<shoppingCart>(this.detach_shoppingCarts));
			this._stocks = new EntitySet<stock>(new Action<stock>(this.attach_stocks), new Action<stock>(this.detach_stocks));
			this._batches = new EntitySet<batch>(new Action<batch>(this.attach_batches), new Action<batch>(this.detach_batches));
			this._salesOrderLines = new EntitySet<salesOrderLine>(new Action<salesOrderLine>(this.attach_salesOrderLines), new Action<salesOrderLine>(this.detach_salesOrderLines));
			this._deliveryLines = new EntitySet<deliveryLine>(new Action<deliveryLine>(this.attach_deliveryLines), new Action<deliveryLine>(this.detach_deliveryLines));
			this._company = default(EntityRef<company>);
			this._companyGroup = default(EntityRef<companyGroup>);
			this._itemGroup = default(EntityRef<itemGroup>);
			this._unitOfMeasure = default(EntityRef<unitOfMeasure>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int itemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					this.OnitemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("itemId");
					this.OnitemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemGroupCode", DbType="NVarChar(50)")]
		public string itemGroupCode
		{
			get
			{
				return this._itemGroupCode;
			}
			set
			{
				if ((this._itemGroupCode != value))
				{
					if (this._itemGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnitemGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._itemGroupCode = value;
					this.SendPropertyChanged("itemGroupCode");
					this.OnitemGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string itemCode
		{
			get
			{
				return this._itemCode;
			}
			set
			{
				if ((this._itemCode != value))
				{
					this.OnitemCodeChanging(value);
					this.SendPropertyChanging();
					this._itemCode = value;
					this.SendPropertyChanged("itemCode");
					this.OnitemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyGroupCode", DbType="NVarChar(50)")]
		public string companyGroupCode
		{
			get
			{
				return this._companyGroupCode;
			}
			set
			{
				if ((this._companyGroupCode != value))
				{
					if (this._companyGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._companyGroupCode = value;
					this.SendPropertyChanged("companyGroupCode");
					this.OncompanyGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50)")]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					if (this._company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="VarChar(255)")]
		public string grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="VarChar(255)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStampCreated", DbType="DateTime NOT NULL")]
		public System.DateTime timeStampCreated
		{
			get
			{
				return this._timeStampCreated;
			}
			set
			{
				if ((this._timeStampCreated != value))
				{
					this.OntimeStampCreatedChanging(value);
					this.SendPropertyChanging();
					this._timeStampCreated = value;
					this.SendPropertyChanged("timeStampCreated");
					this.OntimeStampCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStampLastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> timeStampLastUpdate
		{
			get
			{
				return this._timeStampLastUpdate;
			}
			set
			{
				if ((this._timeStampLastUpdate != value))
				{
					this.OntimeStampLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._timeStampLastUpdate = value;
					this.SendPropertyChanged("timeStampLastUpdate");
					this.OntimeStampLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomSale", DbType="NVarChar(50)")]
		public string uomSale
		{
			get
			{
				return this._uomSale;
			}
			set
			{
				if ((this._uomSale != value))
				{
					if (this._unitOfMeasure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuomSaleChanging(value);
					this.SendPropertyChanging();
					this._uomSale = value;
					this.SendPropertyChanged("uomSale");
					this.OnuomSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hsNumber", DbType="Int")]
		public System.Nullable<int> hsNumber
		{
			get
			{
				return this._hsNumber;
			}
			set
			{
				if ((this._hsNumber != value))
				{
					this.OnhsNumberChanging(value);
					this.SendPropertyChanging();
					this._hsNumber = value;
					this.SendPropertyChanged("hsNumber");
					this.OnhsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateType", DbType="NVarChar(2)")]
		public string CertificateType
		{
			get
			{
				return this._CertificateType;
			}
			set
			{
				if ((this._CertificateType != value))
				{
					this.OnCertificateTypeChanging(value);
					this.SendPropertyChanging();
					this._CertificateType = value;
					this.SendPropertyChanged("CertificateType");
					this.OnCertificateTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_goodsReceiptLine", Storage="_goodsReceiptLines", ThisKey="itemId", OtherKey="itemId")]
		public EntitySet<goodsReceiptLine> goodsReceiptLines
		{
			get
			{
				return this._goodsReceiptLines;
			}
			set
			{
				this._goodsReceiptLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_itemVLunar", Storage="_itemVLunars", ThisKey="itemId", OtherKey="itemId")]
		public EntitySet<itemVLunar> itemVLunars
		{
			get
			{
				return this._itemVLunars;
			}
			set
			{
				this._itemVLunars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_priceItem", Storage="_priceItems", ThisKey="itemId", OtherKey="itemId")]
		public EntitySet<priceItem> priceItems
		{
			get
			{
				return this._priceItems;
			}
			set
			{
				this._priceItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_purchaseOrderLine", Storage="_purchaseOrderLines", ThisKey="itemId", OtherKey="itemId")]
		public EntitySet<purchaseOrderLine> purchaseOrderLines
		{
			get
			{
				return this._purchaseOrderLines;
			}
			set
			{
				this._purchaseOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_shoppingCart", Storage="_shoppingCarts", ThisKey="itemId", OtherKey="itemId")]
		public EntitySet<shoppingCart> shoppingCarts
		{
			get
			{
				return this._shoppingCarts;
			}
			set
			{
				this._shoppingCarts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_stock", Storage="_stocks", ThisKey="itemId", OtherKey="itemId")]
		public EntitySet<stock> stocks
		{
			get
			{
				return this._stocks;
			}
			set
			{
				this._stocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_batch", Storage="_batches", ThisKey="itemId", OtherKey="itemId")]
		public EntitySet<batch> batches
		{
			get
			{
				return this._batches;
			}
			set
			{
				this._batches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_salesOrderLine", Storage="_salesOrderLines", ThisKey="itemId", OtherKey="itemId")]
		public EntitySet<salesOrderLine> salesOrderLines
		{
			get
			{
				return this._salesOrderLines;
			}
			set
			{
				this._salesOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_deliveryLine", Storage="_deliveryLines", ThisKey="itemId", OtherKey="itemId")]
		public EntitySet<deliveryLine> deliveryLines
		{
			get
			{
				return this._deliveryLines;
			}
			set
			{
				this._deliveryLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="company_item", Storage="_company", ThisKey="companyCode", OtherKey="companyCode", IsForeignKey=true)]
		public company company
		{
			get
			{
				return this._company.Entity;
			}
			set
			{
				company previousValue = this._company.Entity;
				if (((previousValue != value) 
							|| (this._company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._company.Entity = null;
						previousValue.items.Remove(this);
					}
					this._company.Entity = value;
					if ((value != null))
					{
						value.items.Add(this);
						this._companyCode = value.companyCode;
					}
					else
					{
						this._companyCode = default(string);
					}
					this.SendPropertyChanged("company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="companyGroup_item", Storage="_companyGroup", ThisKey="companyGroupCode", OtherKey="companyGroupCode", IsForeignKey=true)]
		public companyGroup companyGroup
		{
			get
			{
				return this._companyGroup.Entity;
			}
			set
			{
				companyGroup previousValue = this._companyGroup.Entity;
				if (((previousValue != value) 
							|| (this._companyGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._companyGroup.Entity = null;
						previousValue.items.Remove(this);
					}
					this._companyGroup.Entity = value;
					if ((value != null))
					{
						value.items.Add(this);
						this._companyGroupCode = value.companyGroupCode;
					}
					else
					{
						this._companyGroupCode = default(string);
					}
					this.SendPropertyChanged("companyGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="itemGroup_item", Storage="_itemGroup", ThisKey="itemGroupCode", OtherKey="itemGroupCode", IsForeignKey=true)]
		public itemGroup itemGroup
		{
			get
			{
				return this._itemGroup.Entity;
			}
			set
			{
				itemGroup previousValue = this._itemGroup.Entity;
				if (((previousValue != value) 
							|| (this._itemGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._itemGroup.Entity = null;
						previousValue.items.Remove(this);
					}
					this._itemGroup.Entity = value;
					if ((value != null))
					{
						value.items.Add(this);
						this._itemGroupCode = value.itemGroupCode;
					}
					else
					{
						this._itemGroupCode = default(string);
					}
					this.SendPropertyChanged("itemGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasure_item", Storage="_unitOfMeasure", ThisKey="uomSale", OtherKey="uomCode", IsForeignKey=true)]
		public unitOfMeasure unitOfMeasure
		{
			get
			{
				return this._unitOfMeasure.Entity;
			}
			set
			{
				unitOfMeasure previousValue = this._unitOfMeasure.Entity;
				if (((previousValue != value) 
							|| (this._unitOfMeasure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._unitOfMeasure.Entity = null;
						previousValue.items.Remove(this);
					}
					this._unitOfMeasure.Entity = value;
					if ((value != null))
					{
						value.items.Add(this);
						this._uomSale = value.uomCode;
					}
					else
					{
						this._uomSale = default(string);
					}
					this.SendPropertyChanged("unitOfMeasure");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_goodsReceiptLines(goodsReceiptLine entity)
		{
			this.SendPropertyChanging();
			entity.item = this;
		}
		
		private void detach_goodsReceiptLines(goodsReceiptLine entity)
		{
			this.SendPropertyChanging();
			entity.item = null;
		}
		
		private void attach_itemVLunars(itemVLunar entity)
		{
			this.SendPropertyChanging();
			entity.item = this;
		}
		
		private void detach_itemVLunars(itemVLunar entity)
		{
			this.SendPropertyChanging();
			entity.item = null;
		}
		
		private void attach_priceItems(priceItem entity)
		{
			this.SendPropertyChanging();
			entity.item = this;
		}
		
		private void detach_priceItems(priceItem entity)
		{
			this.SendPropertyChanging();
			entity.item = null;
		}
		
		private void attach_purchaseOrderLines(purchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.item = this;
		}
		
		private void detach_purchaseOrderLines(purchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.item = null;
		}
		
		private void attach_shoppingCarts(shoppingCart entity)
		{
			this.SendPropertyChanging();
			entity.item = this;
		}
		
		private void detach_shoppingCarts(shoppingCart entity)
		{
			this.SendPropertyChanging();
			entity.item = null;
		}
		
		private void attach_stocks(stock entity)
		{
			this.SendPropertyChanging();
			entity.item = this;
		}
		
		private void detach_stocks(stock entity)
		{
			this.SendPropertyChanging();
			entity.item = null;
		}
		
		private void attach_batches(batch entity)
		{
			this.SendPropertyChanging();
			entity.item = this;
		}
		
		private void detach_batches(batch entity)
		{
			this.SendPropertyChanging();
			entity.item = null;
		}
		
		private void attach_salesOrderLines(salesOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.item = this;
		}
		
		private void detach_salesOrderLines(salesOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.item = null;
		}
		
		private void attach_deliveryLines(deliveryLine entity)
		{
			this.SendPropertyChanging();
			entity.item = this;
		}
		
		private void detach_deliveryLines(deliveryLine entity)
		{
			this.SendPropertyChanging();
			entity.item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.salesOrderLine")]
	public partial class salesOrderLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _docId;
		
		private int _lineNum;
		
		private int _itemId;
		
		private decimal _quantity;
		
		private decimal _openQuantity;
		
		private string _uomCode;
		
		private string _uomCodeOrg;
		
		private decimal _weight;
		
		private decimal _price;
		
		private decimal _lineTotal;
		
		private string _customerReference;
		
		private System.Nullable<System.DateTime> _deliveryDate;
		
		private string _lineStatusCode;
		
		private string _lineTypeCode;
		
		private string _docType;
		
		private System.Nullable<int> _baseDocId;
		
		private System.Nullable<int> _baseLineNum;
		
		private string _baseDocType;
		
		private string _customerItemCode;
		
		private bool _certOrdered;
		
		private string _itemDescription;
		
		private EntityRef<document> _document;
		
		private EntityRef<item> _item;
		
		private EntityRef<lineStatus> _lineStatus;
		
		private EntityRef<lineType> _lineType;
		
		private EntityRef<salesOrder> _salesOrder;
		
		private EntityRef<unitOfMeasure> _unitOfMeasure;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndocIdChanging(int value);
    partial void OndocIdChanged();
    partial void OnlineNumChanging(int value);
    partial void OnlineNumChanged();
    partial void OnitemIdChanging(int value);
    partial void OnitemIdChanged();
    partial void OnquantityChanging(decimal value);
    partial void OnquantityChanged();
    partial void OnopenQuantityChanging(decimal value);
    partial void OnopenQuantityChanged();
    partial void OnuomCodeChanging(string value);
    partial void OnuomCodeChanged();
    partial void OnuomCodeOrgChanging(string value);
    partial void OnuomCodeOrgChanged();
    partial void OnweightChanging(decimal value);
    partial void OnweightChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OnlineTotalChanging(decimal value);
    partial void OnlineTotalChanged();
    partial void OncustomerReferenceChanging(string value);
    partial void OncustomerReferenceChanged();
    partial void OndeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OndeliveryDateChanged();
    partial void OnlineStatusCodeChanging(string value);
    partial void OnlineStatusCodeChanged();
    partial void OnlineTypeCodeChanging(string value);
    partial void OnlineTypeCodeChanged();
    partial void OndocTypeChanging(string value);
    partial void OndocTypeChanged();
    partial void OnbaseDocIdChanging(System.Nullable<int> value);
    partial void OnbaseDocIdChanged();
    partial void OnbaseLineNumChanging(System.Nullable<int> value);
    partial void OnbaseLineNumChanged();
    partial void OnbaseDocTypeChanging(string value);
    partial void OnbaseDocTypeChanged();
    partial void OncustomerItemCodeChanging(string value);
    partial void OncustomerItemCodeChanged();
    partial void OncertOrderedChanging(bool value);
    partial void OncertOrderedChanged();
    partial void OnitemDescriptionChanging(string value);
    partial void OnitemDescriptionChanged();
    #endregion
		
		public salesOrderLine()
		{
			this._document = default(EntityRef<document>);
			this._item = default(EntityRef<item>);
			this._lineStatus = default(EntityRef<lineStatus>);
			this._lineType = default(EntityRef<lineType>);
			this._salesOrder = default(EntityRef<salesOrder>);
			this._unitOfMeasure = default(EntityRef<unitOfMeasure>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int docId
		{
			get
			{
				return this._docId;
			}
			set
			{
				if ((this._docId != value))
				{
					if (this._salesOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndocIdChanging(value);
					this.SendPropertyChanging();
					this._docId = value;
					this.SendPropertyChanged("docId");
					this.OndocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int lineNum
		{
			get
			{
				return this._lineNum;
			}
			set
			{
				if ((this._lineNum != value))
				{
					this.OnlineNumChanging(value);
					this.SendPropertyChanging();
					this._lineNum = value;
					this.SendPropertyChanged("lineNum");
					this.OnlineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemId", DbType="Int NOT NULL")]
		public int itemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					if (this._item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnitemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("itemId");
					this.OnitemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Decimal(20,6) NOT NULL")]
		public decimal quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openQuantity", DbType="Decimal(20,6) NOT NULL")]
		public decimal openQuantity
		{
			get
			{
				return this._openQuantity;
			}
			set
			{
				if ((this._openQuantity != value))
				{
					this.OnopenQuantityChanging(value);
					this.SendPropertyChanging();
					this._openQuantity = value;
					this.SendPropertyChanged("openQuantity");
					this.OnopenQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string uomCode
		{
			get
			{
				return this._uomCode;
			}
			set
			{
				if ((this._uomCode != value))
				{
					if (this._unitOfMeasure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuomCodeChanging(value);
					this.SendPropertyChanging();
					this._uomCode = value;
					this.SendPropertyChanged("uomCode");
					this.OnuomCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomCodeOrg", DbType="NVarChar(50)")]
		public string uomCodeOrg
		{
			get
			{
				return this._uomCodeOrg;
			}
			set
			{
				if ((this._uomCodeOrg != value))
				{
					this.OnuomCodeOrgChanging(value);
					this.SendPropertyChanging();
					this._uomCodeOrg = value;
					this.SendPropertyChanged("uomCodeOrg");
					this.OnuomCodeOrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Decimal(20,6) NOT NULL")]
		public decimal weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(20,6) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineTotal", DbType="Decimal(20,6) NOT NULL")]
		public decimal lineTotal
		{
			get
			{
				return this._lineTotal;
			}
			set
			{
				if ((this._lineTotal != value))
				{
					this.OnlineTotalChanging(value);
					this.SendPropertyChanging();
					this._lineTotal = value;
					this.SendPropertyChanged("lineTotal");
					this.OnlineTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerReference", DbType="VarChar(255)")]
		public string customerReference
		{
			get
			{
				return this._customerReference;
			}
			set
			{
				if ((this._customerReference != value))
				{
					this.OncustomerReferenceChanging(value);
					this.SendPropertyChanging();
					this._customerReference = value;
					this.SendPropertyChanged("customerReference");
					this.OncustomerReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> deliveryDate
		{
			get
			{
				return this._deliveryDate;
			}
			set
			{
				if ((this._deliveryDate != value))
				{
					this.OndeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._deliveryDate = value;
					this.SendPropertyChanged("deliveryDate");
					this.OndeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineStatusCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string lineStatusCode
		{
			get
			{
				return this._lineStatusCode;
			}
			set
			{
				if ((this._lineStatusCode != value))
				{
					if (this._lineStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlineStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._lineStatusCode = value;
					this.SendPropertyChanged("lineStatusCode");
					this.OnlineStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineTypeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lineTypeCode
		{
			get
			{
				return this._lineTypeCode;
			}
			set
			{
				if ((this._lineTypeCode != value))
				{
					if (this._lineType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlineTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._lineTypeCode = value;
					this.SendPropertyChanged("lineTypeCode");
					this.OnlineTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string docType
		{
			get
			{
				return this._docType;
			}
			set
			{
				if ((this._docType != value))
				{
					if (this._document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndocTypeChanging(value);
					this.SendPropertyChanging();
					this._docType = value;
					this.SendPropertyChanged("docType");
					this.OndocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocId", DbType="Int")]
		public System.Nullable<int> baseDocId
		{
			get
			{
				return this._baseDocId;
			}
			set
			{
				if ((this._baseDocId != value))
				{
					this.OnbaseDocIdChanging(value);
					this.SendPropertyChanging();
					this._baseDocId = value;
					this.SendPropertyChanged("baseDocId");
					this.OnbaseDocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseLineNum", DbType="Int")]
		public System.Nullable<int> baseLineNum
		{
			get
			{
				return this._baseLineNum;
			}
			set
			{
				if ((this._baseLineNum != value))
				{
					this.OnbaseLineNumChanging(value);
					this.SendPropertyChanging();
					this._baseLineNum = value;
					this.SendPropertyChanged("baseLineNum");
					this.OnbaseLineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocType", DbType="VarChar(255)")]
		public string baseDocType
		{
			get
			{
				return this._baseDocType;
			}
			set
			{
				if ((this._baseDocType != value))
				{
					this.OnbaseDocTypeChanging(value);
					this.SendPropertyChanging();
					this._baseDocType = value;
					this.SendPropertyChanged("baseDocType");
					this.OnbaseDocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerItemCode", DbType="NVarChar(255)")]
		public string customerItemCode
		{
			get
			{
				return this._customerItemCode;
			}
			set
			{
				if ((this._customerItemCode != value))
				{
					this.OncustomerItemCodeChanging(value);
					this.SendPropertyChanging();
					this._customerItemCode = value;
					this.SendPropertyChanged("customerItemCode");
					this.OncustomerItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_certOrdered", DbType="Bit NOT NULL")]
		public bool certOrdered
		{
			get
			{
				return this._certOrdered;
			}
			set
			{
				if ((this._certOrdered != value))
				{
					this.OncertOrderedChanging(value);
					this.SendPropertyChanging();
					this._certOrdered = value;
					this.SendPropertyChanged("certOrdered");
					this.OncertOrderedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemDescription", DbType="NVarChar(255)")]
		public string itemDescription
		{
			get
			{
				return this._itemDescription;
			}
			set
			{
				if ((this._itemDescription != value))
				{
					this.OnitemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._itemDescription = value;
					this.SendPropertyChanged("itemDescription");
					this.OnitemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_salesOrderLine", Storage="_document", ThisKey="docType", OtherKey="docType", IsForeignKey=true)]
		public document document
		{
			get
			{
				return this._document.Entity;
			}
			set
			{
				document previousValue = this._document.Entity;
				if (((previousValue != value) 
							|| (this._document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._document.Entity = null;
						previousValue.salesOrderLines.Remove(this);
					}
					this._document.Entity = value;
					if ((value != null))
					{
						value.salesOrderLines.Add(this);
						this._docType = value.docType;
					}
					else
					{
						this._docType = default(string);
					}
					this.SendPropertyChanged("document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_salesOrderLine", Storage="_item", ThisKey="itemId", OtherKey="itemId", IsForeignKey=true)]
		public item item
		{
			get
			{
				return this._item.Entity;
			}
			set
			{
				item previousValue = this._item.Entity;
				if (((previousValue != value) 
							|| (this._item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item.Entity = null;
						previousValue.salesOrderLines.Remove(this);
					}
					this._item.Entity = value;
					if ((value != null))
					{
						value.salesOrderLines.Add(this);
						this._itemId = value.itemId;
					}
					else
					{
						this._itemId = default(int);
					}
					this.SendPropertyChanged("item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lineStatus_salesOrderLine", Storage="_lineStatus", ThisKey="lineStatusCode", OtherKey="lineStatusCode", IsForeignKey=true)]
		public lineStatus lineStatus
		{
			get
			{
				return this._lineStatus.Entity;
			}
			set
			{
				lineStatus previousValue = this._lineStatus.Entity;
				if (((previousValue != value) 
							|| (this._lineStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lineStatus.Entity = null;
						previousValue.salesOrderLines.Remove(this);
					}
					this._lineStatus.Entity = value;
					if ((value != null))
					{
						value.salesOrderLines.Add(this);
						this._lineStatusCode = value.lineStatusCode;
					}
					else
					{
						this._lineStatusCode = default(string);
					}
					this.SendPropertyChanged("lineStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lineType_salesOrderLine", Storage="_lineType", ThisKey="lineTypeCode", OtherKey="lineTypeCode", IsForeignKey=true)]
		public lineType lineType
		{
			get
			{
				return this._lineType.Entity;
			}
			set
			{
				lineType previousValue = this._lineType.Entity;
				if (((previousValue != value) 
							|| (this._lineType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lineType.Entity = null;
						previousValue.salesOrderLines.Remove(this);
					}
					this._lineType.Entity = value;
					if ((value != null))
					{
						value.salesOrderLines.Add(this);
						this._lineTypeCode = value.lineTypeCode;
					}
					else
					{
						this._lineTypeCode = default(string);
					}
					this.SendPropertyChanged("lineType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="salesOrder_salesOrderLine", Storage="_salesOrder", ThisKey="docId", OtherKey="docId", IsForeignKey=true)]
		public salesOrder salesOrder
		{
			get
			{
				return this._salesOrder.Entity;
			}
			set
			{
				salesOrder previousValue = this._salesOrder.Entity;
				if (((previousValue != value) 
							|| (this._salesOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._salesOrder.Entity = null;
						previousValue.salesOrderLines.Remove(this);
					}
					this._salesOrder.Entity = value;
					if ((value != null))
					{
						value.salesOrderLines.Add(this);
						this._docId = value.docId;
					}
					else
					{
						this._docId = default(int);
					}
					this.SendPropertyChanged("salesOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasure_salesOrderLine", Storage="_unitOfMeasure", ThisKey="uomCode", OtherKey="uomCode", IsForeignKey=true)]
		public unitOfMeasure unitOfMeasure
		{
			get
			{
				return this._unitOfMeasure.Entity;
			}
			set
			{
				unitOfMeasure previousValue = this._unitOfMeasure.Entity;
				if (((previousValue != value) 
							|| (this._unitOfMeasure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._unitOfMeasure.Entity = null;
						previousValue.salesOrderLines.Remove(this);
					}
					this._unitOfMeasure.Entity = value;
					if ((value != null))
					{
						value.salesOrderLines.Add(this);
						this._uomCode = value.uomCode;
					}
					else
					{
						this._uomCode = default(string);
					}
					this.SendPropertyChanged("unitOfMeasure");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.deliveryLine")]
	public partial class deliveryLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _docId;
		
		private int _lineNum;
		
		private int _itemId;
		
		private decimal _quantity;
		
		private decimal _openQuantity;
		
		private string _uomCode;
		
		private string _uomCodeOrg;
		
		private decimal _weight;
		
		private decimal _price;
		
		private decimal _lineTotal;
		
		private string _customerReference;
		
		private System.Nullable<System.DateTime> _deliveryDate;
		
		private string _lineTypeCode;
		
		private string _lineStatusCode;
		
		private string _docType;
		
		private System.Nullable<int> _baseDocId;
		
		private System.Nullable<int> _baseLineNum;
		
		private string _baseDocType;
		
		private string _customerItemCode;
		
		private bool _certOrdered;
		
		private string _itemDescription;
		
		private EntitySet<colliLine> _colliLines;
		
		private EntityRef<delivery> _delivery;
		
		private EntityRef<document> _document;
		
		private EntityRef<item> _item;
		
		private EntityRef<lineStatus> _lineStatus;
		
		private EntityRef<lineType> _lineType;
		
		private EntityRef<unitOfMeasure> _unitOfMeasure;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndocIdChanging(int value);
    partial void OndocIdChanged();
    partial void OnlineNumChanging(int value);
    partial void OnlineNumChanged();
    partial void OnitemIdChanging(int value);
    partial void OnitemIdChanged();
    partial void OnquantityChanging(decimal value);
    partial void OnquantityChanged();
    partial void OnopenQuantityChanging(decimal value);
    partial void OnopenQuantityChanged();
    partial void OnuomCodeChanging(string value);
    partial void OnuomCodeChanged();
    partial void OnuomCodeOrgChanging(string value);
    partial void OnuomCodeOrgChanged();
    partial void OnweightChanging(decimal value);
    partial void OnweightChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OnlineTotalChanging(decimal value);
    partial void OnlineTotalChanged();
    partial void OncustomerReferenceChanging(string value);
    partial void OncustomerReferenceChanged();
    partial void OndeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OndeliveryDateChanged();
    partial void OnlineTypeCodeChanging(string value);
    partial void OnlineTypeCodeChanged();
    partial void OnlineStatusCodeChanging(string value);
    partial void OnlineStatusCodeChanged();
    partial void OndocTypeChanging(string value);
    partial void OndocTypeChanged();
    partial void OnbaseDocIdChanging(System.Nullable<int> value);
    partial void OnbaseDocIdChanged();
    partial void OnbaseLineNumChanging(System.Nullable<int> value);
    partial void OnbaseLineNumChanged();
    partial void OnbaseDocTypeChanging(string value);
    partial void OnbaseDocTypeChanged();
    partial void OncustomerItemCodeChanging(string value);
    partial void OncustomerItemCodeChanged();
    partial void OncertOrderedChanging(bool value);
    partial void OncertOrderedChanged();
    partial void OnitemDescriptionChanging(string value);
    partial void OnitemDescriptionChanged();
    #endregion
		
		public deliveryLine()
		{
			this._colliLines = new EntitySet<colliLine>(new Action<colliLine>(this.attach_colliLines), new Action<colliLine>(this.detach_colliLines));
			this._delivery = default(EntityRef<delivery>);
			this._document = default(EntityRef<document>);
			this._item = default(EntityRef<item>);
			this._lineStatus = default(EntityRef<lineStatus>);
			this._lineType = default(EntityRef<lineType>);
			this._unitOfMeasure = default(EntityRef<unitOfMeasure>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int docId
		{
			get
			{
				return this._docId;
			}
			set
			{
				if ((this._docId != value))
				{
					if (this._delivery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndocIdChanging(value);
					this.SendPropertyChanging();
					this._docId = value;
					this.SendPropertyChanged("docId");
					this.OndocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int lineNum
		{
			get
			{
				return this._lineNum;
			}
			set
			{
				if ((this._lineNum != value))
				{
					this.OnlineNumChanging(value);
					this.SendPropertyChanging();
					this._lineNum = value;
					this.SendPropertyChanged("lineNum");
					this.OnlineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemId", DbType="Int NOT NULL")]
		public int itemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					if (this._item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnitemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("itemId");
					this.OnitemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Decimal(20,6) NOT NULL")]
		public decimal quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openQuantity", DbType="Decimal(20,6) NOT NULL")]
		public decimal openQuantity
		{
			get
			{
				return this._openQuantity;
			}
			set
			{
				if ((this._openQuantity != value))
				{
					this.OnopenQuantityChanging(value);
					this.SendPropertyChanging();
					this._openQuantity = value;
					this.SendPropertyChanged("openQuantity");
					this.OnopenQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string uomCode
		{
			get
			{
				return this._uomCode;
			}
			set
			{
				if ((this._uomCode != value))
				{
					if (this._unitOfMeasure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuomCodeChanging(value);
					this.SendPropertyChanging();
					this._uomCode = value;
					this.SendPropertyChanged("uomCode");
					this.OnuomCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uomCodeOrg", DbType="NVarChar(50)")]
		public string uomCodeOrg
		{
			get
			{
				return this._uomCodeOrg;
			}
			set
			{
				if ((this._uomCodeOrg != value))
				{
					this.OnuomCodeOrgChanging(value);
					this.SendPropertyChanging();
					this._uomCodeOrg = value;
					this.SendPropertyChanged("uomCodeOrg");
					this.OnuomCodeOrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Decimal(20,6) NOT NULL")]
		public decimal weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(20,6) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineTotal", DbType="Decimal(20,6) NOT NULL")]
		public decimal lineTotal
		{
			get
			{
				return this._lineTotal;
			}
			set
			{
				if ((this._lineTotal != value))
				{
					this.OnlineTotalChanging(value);
					this.SendPropertyChanging();
					this._lineTotal = value;
					this.SendPropertyChanged("lineTotal");
					this.OnlineTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerReference", DbType="VarChar(255)")]
		public string customerReference
		{
			get
			{
				return this._customerReference;
			}
			set
			{
				if ((this._customerReference != value))
				{
					this.OncustomerReferenceChanging(value);
					this.SendPropertyChanging();
					this._customerReference = value;
					this.SendPropertyChanged("customerReference");
					this.OncustomerReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> deliveryDate
		{
			get
			{
				return this._deliveryDate;
			}
			set
			{
				if ((this._deliveryDate != value))
				{
					this.OndeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._deliveryDate = value;
					this.SendPropertyChanged("deliveryDate");
					this.OndeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineTypeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lineTypeCode
		{
			get
			{
				return this._lineTypeCode;
			}
			set
			{
				if ((this._lineTypeCode != value))
				{
					if (this._lineType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlineTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._lineTypeCode = value;
					this.SendPropertyChanged("lineTypeCode");
					this.OnlineTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineStatusCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string lineStatusCode
		{
			get
			{
				return this._lineStatusCode;
			}
			set
			{
				if ((this._lineStatusCode != value))
				{
					if (this._lineStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlineStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._lineStatusCode = value;
					this.SendPropertyChanged("lineStatusCode");
					this.OnlineStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string docType
		{
			get
			{
				return this._docType;
			}
			set
			{
				if ((this._docType != value))
				{
					if (this._document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndocTypeChanging(value);
					this.SendPropertyChanging();
					this._docType = value;
					this.SendPropertyChanged("docType");
					this.OndocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocId", DbType="Int")]
		public System.Nullable<int> baseDocId
		{
			get
			{
				return this._baseDocId;
			}
			set
			{
				if ((this._baseDocId != value))
				{
					this.OnbaseDocIdChanging(value);
					this.SendPropertyChanging();
					this._baseDocId = value;
					this.SendPropertyChanged("baseDocId");
					this.OnbaseDocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseLineNum", DbType="Int")]
		public System.Nullable<int> baseLineNum
		{
			get
			{
				return this._baseLineNum;
			}
			set
			{
				if ((this._baseLineNum != value))
				{
					this.OnbaseLineNumChanging(value);
					this.SendPropertyChanging();
					this._baseLineNum = value;
					this.SendPropertyChanged("baseLineNum");
					this.OnbaseLineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocType", DbType="VarChar(2)")]
		public string baseDocType
		{
			get
			{
				return this._baseDocType;
			}
			set
			{
				if ((this._baseDocType != value))
				{
					this.OnbaseDocTypeChanging(value);
					this.SendPropertyChanging();
					this._baseDocType = value;
					this.SendPropertyChanged("baseDocType");
					this.OnbaseDocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerItemCode", DbType="NVarChar(255)")]
		public string customerItemCode
		{
			get
			{
				return this._customerItemCode;
			}
			set
			{
				if ((this._customerItemCode != value))
				{
					this.OncustomerItemCodeChanging(value);
					this.SendPropertyChanging();
					this._customerItemCode = value;
					this.SendPropertyChanged("customerItemCode");
					this.OncustomerItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_certOrdered", DbType="Bit NOT NULL")]
		public bool certOrdered
		{
			get
			{
				return this._certOrdered;
			}
			set
			{
				if ((this._certOrdered != value))
				{
					this.OncertOrderedChanging(value);
					this.SendPropertyChanging();
					this._certOrdered = value;
					this.SendPropertyChanged("certOrdered");
					this.OncertOrderedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemDescription", DbType="NVarChar(255)")]
		public string itemDescription
		{
			get
			{
				return this._itemDescription;
			}
			set
			{
				if ((this._itemDescription != value))
				{
					this.OnitemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._itemDescription = value;
					this.SendPropertyChanged("itemDescription");
					this.OnitemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="deliveryLine_colliLine", Storage="_colliLines", ThisKey="docId,lineNum", OtherKey="baseDocId,baseLineNum")]
		public EntitySet<colliLine> colliLines
		{
			get
			{
				return this._colliLines;
			}
			set
			{
				this._colliLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="delivery_deliveryLine", Storage="_delivery", ThisKey="docId", OtherKey="docId", IsForeignKey=true)]
		public delivery delivery
		{
			get
			{
				return this._delivery.Entity;
			}
			set
			{
				delivery previousValue = this._delivery.Entity;
				if (((previousValue != value) 
							|| (this._delivery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._delivery.Entity = null;
						previousValue.deliveryLines.Remove(this);
					}
					this._delivery.Entity = value;
					if ((value != null))
					{
						value.deliveryLines.Add(this);
						this._docId = value.docId;
					}
					else
					{
						this._docId = default(int);
					}
					this.SendPropertyChanged("delivery");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_deliveryLine", Storage="_document", ThisKey="docType", OtherKey="docType", IsForeignKey=true)]
		public document document
		{
			get
			{
				return this._document.Entity;
			}
			set
			{
				document previousValue = this._document.Entity;
				if (((previousValue != value) 
							|| (this._document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._document.Entity = null;
						previousValue.deliveryLines.Remove(this);
					}
					this._document.Entity = value;
					if ((value != null))
					{
						value.deliveryLines.Add(this);
						this._docType = value.docType;
					}
					else
					{
						this._docType = default(string);
					}
					this.SendPropertyChanged("document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_deliveryLine", Storage="_item", ThisKey="itemId", OtherKey="itemId", IsForeignKey=true)]
		public item item
		{
			get
			{
				return this._item.Entity;
			}
			set
			{
				item previousValue = this._item.Entity;
				if (((previousValue != value) 
							|| (this._item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._item.Entity = null;
						previousValue.deliveryLines.Remove(this);
					}
					this._item.Entity = value;
					if ((value != null))
					{
						value.deliveryLines.Add(this);
						this._itemId = value.itemId;
					}
					else
					{
						this._itemId = default(int);
					}
					this.SendPropertyChanged("item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lineStatus_deliveryLine", Storage="_lineStatus", ThisKey="lineStatusCode", OtherKey="lineStatusCode", IsForeignKey=true)]
		public lineStatus lineStatus
		{
			get
			{
				return this._lineStatus.Entity;
			}
			set
			{
				lineStatus previousValue = this._lineStatus.Entity;
				if (((previousValue != value) 
							|| (this._lineStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lineStatus.Entity = null;
						previousValue.deliveryLines.Remove(this);
					}
					this._lineStatus.Entity = value;
					if ((value != null))
					{
						value.deliveryLines.Add(this);
						this._lineStatusCode = value.lineStatusCode;
					}
					else
					{
						this._lineStatusCode = default(string);
					}
					this.SendPropertyChanged("lineStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lineType_deliveryLine", Storage="_lineType", ThisKey="lineTypeCode", OtherKey="lineTypeCode", IsForeignKey=true)]
		public lineType lineType
		{
			get
			{
				return this._lineType.Entity;
			}
			set
			{
				lineType previousValue = this._lineType.Entity;
				if (((previousValue != value) 
							|| (this._lineType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lineType.Entity = null;
						previousValue.deliveryLines.Remove(this);
					}
					this._lineType.Entity = value;
					if ((value != null))
					{
						value.deliveryLines.Add(this);
						this._lineTypeCode = value.lineTypeCode;
					}
					else
					{
						this._lineTypeCode = default(string);
					}
					this.SendPropertyChanged("lineType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unitOfMeasure_deliveryLine", Storage="_unitOfMeasure", ThisKey="uomCode", OtherKey="uomCode", IsForeignKey=true)]
		public unitOfMeasure unitOfMeasure
		{
			get
			{
				return this._unitOfMeasure.Entity;
			}
			set
			{
				unitOfMeasure previousValue = this._unitOfMeasure.Entity;
				if (((previousValue != value) 
							|| (this._unitOfMeasure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._unitOfMeasure.Entity = null;
						previousValue.deliveryLines.Remove(this);
					}
					this._unitOfMeasure.Entity = value;
					if ((value != null))
					{
						value.deliveryLines.Add(this);
						this._uomCode = value.uomCode;
					}
					else
					{
						this._uomCode = default(string);
					}
					this.SendPropertyChanged("unitOfMeasure");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_colliLines(colliLine entity)
		{
			this.SendPropertyChanging();
			entity.deliveryLine = this;
		}
		
		private void detach_colliLines(colliLine entity)
		{
			this.SendPropertyChanging();
			entity.deliveryLine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usageReport")]
	public partial class usageReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _savedMark;
		
		private string _heatNumber;
		
		private System.Nullable<int> _contactPersonId;
		
		private System.Nullable<int> _businessPartnerId;
		
		private System.Nullable<int> _batchId;
		
		private string _companyCode;
		
		private System.Nullable<int> _baseDocId;
		
		private System.Nullable<int> _baseLineNum;
		
		private string _baseDocType;
		
		private EntityRef<delivery> _delivery;
		
		private EntityRef<businessPartner> _businessPartner;
		
		private EntityRef<contactPerson> _contactPerson;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnsavedMarkChanging(System.Nullable<System.DateTime> value);
    partial void OnsavedMarkChanged();
    partial void OnheatNumberChanging(string value);
    partial void OnheatNumberChanged();
    partial void OncontactPersonIdChanging(System.Nullable<int> value);
    partial void OncontactPersonIdChanged();
    partial void OnbusinessPartnerIdChanging(System.Nullable<int> value);
    partial void OnbusinessPartnerIdChanged();
    partial void OnbatchIdChanging(System.Nullable<int> value);
    partial void OnbatchIdChanged();
    partial void OncompanyCodeChanging(string value);
    partial void OncompanyCodeChanged();
    partial void OnbaseDocIdChanging(System.Nullable<int> value);
    partial void OnbaseDocIdChanged();
    partial void OnbaseLineNumChanging(System.Nullable<int> value);
    partial void OnbaseLineNumChanged();
    partial void OnbaseDocTypeChanging(string value);
    partial void OnbaseDocTypeChanged();
    #endregion
		
		public usageReport()
		{
			this._delivery = default(EntityRef<delivery>);
			this._businessPartner = default(EntityRef<businessPartner>);
			this._contactPerson = default(EntityRef<contactPerson>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_savedMark", DbType="DateTime")]
		public System.Nullable<System.DateTime> savedMark
		{
			get
			{
				return this._savedMark;
			}
			set
			{
				if ((this._savedMark != value))
				{
					this.OnsavedMarkChanging(value);
					this.SendPropertyChanging();
					this._savedMark = value;
					this.SendPropertyChanged("savedMark");
					this.OnsavedMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_heatNumber", DbType="VarChar(50)")]
		public string heatNumber
		{
			get
			{
				return this._heatNumber;
			}
			set
			{
				if ((this._heatNumber != value))
				{
					this.OnheatNumberChanging(value);
					this.SendPropertyChanging();
					this._heatNumber = value;
					this.SendPropertyChanged("heatNumber");
					this.OnheatNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactPersonId", DbType="Int")]
		public System.Nullable<int> contactPersonId
		{
			get
			{
				return this._contactPersonId;
			}
			set
			{
				if ((this._contactPersonId != value))
				{
					if (this._contactPerson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncontactPersonIdChanging(value);
					this.SendPropertyChanging();
					this._contactPersonId = value;
					this.SendPropertyChanged("contactPersonId");
					this.OncontactPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_businessPartnerId", DbType="Int")]
		public System.Nullable<int> businessPartnerId
		{
			get
			{
				return this._businessPartnerId;
			}
			set
			{
				if ((this._businessPartnerId != value))
				{
					if (this._businessPartner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbusinessPartnerIdChanging(value);
					this.SendPropertyChanging();
					this._businessPartnerId = value;
					this.SendPropertyChanged("businessPartnerId");
					this.OnbusinessPartnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_batchId", DbType="Int")]
		public System.Nullable<int> batchId
		{
			get
			{
				return this._batchId;
			}
			set
			{
				if ((this._batchId != value))
				{
					this.OnbatchIdChanging(value);
					this.SendPropertyChanging();
					this._batchId = value;
					this.SendPropertyChanged("batchId");
					this.OnbatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50)")]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					this.OncompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._companyCode = value;
					this.SendPropertyChanged("companyCode");
					this.OncompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocId", DbType="Int")]
		public System.Nullable<int> baseDocId
		{
			get
			{
				return this._baseDocId;
			}
			set
			{
				if ((this._baseDocId != value))
				{
					if (this._delivery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbaseDocIdChanging(value);
					this.SendPropertyChanging();
					this._baseDocId = value;
					this.SendPropertyChanged("baseDocId");
					this.OnbaseDocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseLineNum", DbType="Int")]
		public System.Nullable<int> baseLineNum
		{
			get
			{
				return this._baseLineNum;
			}
			set
			{
				if ((this._baseLineNum != value))
				{
					this.OnbaseLineNumChanging(value);
					this.SendPropertyChanging();
					this._baseLineNum = value;
					this.SendPropertyChanged("baseLineNum");
					this.OnbaseLineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseDocType", DbType="VarChar(2)")]
		public string baseDocType
		{
			get
			{
				return this._baseDocType;
			}
			set
			{
				if ((this._baseDocType != value))
				{
					this.OnbaseDocTypeChanging(value);
					this.SendPropertyChanging();
					this._baseDocType = value;
					this.SendPropertyChanged("baseDocType");
					this.OnbaseDocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="delivery_usageReport", Storage="_delivery", ThisKey="baseDocId", OtherKey="docId", IsForeignKey=true)]
		public delivery delivery
		{
			get
			{
				return this._delivery.Entity;
			}
			set
			{
				delivery previousValue = this._delivery.Entity;
				if (((previousValue != value) 
							|| (this._delivery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._delivery.Entity = null;
						previousValue.usageReports.Remove(this);
					}
					this._delivery.Entity = value;
					if ((value != null))
					{
						value.usageReports.Add(this);
						this._baseDocId = value.docId;
					}
					else
					{
						this._baseDocId = default(Nullable<int>);
					}
					this.SendPropertyChanged("delivery");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="businessPartner_usageReport", Storage="_businessPartner", ThisKey="businessPartnerId", OtherKey="businessPartnerId", IsForeignKey=true)]
		public businessPartner businessPartner
		{
			get
			{
				return this._businessPartner.Entity;
			}
			set
			{
				businessPartner previousValue = this._businessPartner.Entity;
				if (((previousValue != value) 
							|| (this._businessPartner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._businessPartner.Entity = null;
						previousValue.usageReports.Remove(this);
					}
					this._businessPartner.Entity = value;
					if ((value != null))
					{
						value.usageReports.Add(this);
						this._businessPartnerId = value.businessPartnerId;
					}
					else
					{
						this._businessPartnerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("businessPartner");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contactPerson_usageReport", Storage="_contactPerson", ThisKey="contactPersonId", OtherKey="contactPersonId", IsForeignKey=true)]
		public contactPerson contactPerson
		{
			get
			{
				return this._contactPerson.Entity;
			}
			set
			{
				contactPerson previousValue = this._contactPerson.Entity;
				if (((previousValue != value) 
							|| (this._contactPerson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._contactPerson.Entity = null;
						previousValue.usageReports.Remove(this);
					}
					this._contactPerson.Entity = value;
					if ((value != null))
					{
						value.usageReports.Add(this);
						this._contactPersonId = value.contactPersonId;
					}
					else
					{
						this._contactPersonId = default(Nullable<int>);
					}
					this.SendPropertyChanged("contactPerson");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_DeliveryLines")]
	public partial class vw_DeliveryLine
	{
		
		private string _CardCode;
		
		private string _SODocNum;
		
		private int _SOLineNum;
		
		private string _DELDocNum;
		
		private int _DELLineNum;
		
		private System.DateTime _DELDocDate;
		
		private string _customerReference;
		
		private string _SOLineReference;
		
		private string _itemCode;
		
		private string _itemDescription;
		
		private string _HeatNumber;
		
		private string _CertificateLink;
		
		private System.Nullable<int> _batchId;
		
		private string _companyCode;
		
		private int _DELDocId;
		
		private string _DELDocType;
		
		private string _bpName;
		
		private bool _certOrdered;
		
		public vw_DeliveryLine()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CardCode
		{
			get
			{
				return this._CardCode;
			}
			set
			{
				if ((this._CardCode != value))
				{
					this._CardCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODocNum", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SODocNum
		{
			get
			{
				return this._SODocNum;
			}
			set
			{
				if ((this._SODocNum != value))
				{
					this._SODocNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLineNum", DbType="Int NOT NULL")]
		public int SOLineNum
		{
			get
			{
				return this._SOLineNum;
			}
			set
			{
				if ((this._SOLineNum != value))
				{
					this._SOLineNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DELDocNum", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DELDocNum
		{
			get
			{
				return this._DELDocNum;
			}
			set
			{
				if ((this._DELDocNum != value))
				{
					this._DELDocNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DELLineNum", DbType="Int NOT NULL")]
		public int DELLineNum
		{
			get
			{
				return this._DELLineNum;
			}
			set
			{
				if ((this._DELLineNum != value))
				{
					this._DELLineNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DELDocDate", DbType="DateTime NOT NULL")]
		public System.DateTime DELDocDate
		{
			get
			{
				return this._DELDocDate;
			}
			set
			{
				if ((this._DELDocDate != value))
				{
					this._DELDocDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerReference", DbType="VarChar(255)")]
		public string customerReference
		{
			get
			{
				return this._customerReference;
			}
			set
			{
				if ((this._customerReference != value))
				{
					this._customerReference = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLineReference", DbType="NVarChar(512)")]
		public string SOLineReference
		{
			get
			{
				return this._SOLineReference;
			}
			set
			{
				if ((this._SOLineReference != value))
				{
					this._SOLineReference = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string itemCode
		{
			get
			{
				return this._itemCode;
			}
			set
			{
				if ((this._itemCode != value))
				{
					this._itemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemDescription", DbType="NVarChar(255)")]
		public string itemDescription
		{
			get
			{
				return this._itemDescription;
			}
			set
			{
				if ((this._itemDescription != value))
				{
					this._itemDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeatNumber", DbType="VarChar(255)")]
		public string HeatNumber
		{
			get
			{
				return this._HeatNumber;
			}
			set
			{
				if ((this._HeatNumber != value))
				{
					this._HeatNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateLink", DbType="NVarChar(80)")]
		public string CertificateLink
		{
			get
			{
				return this._CertificateLink;
			}
			set
			{
				if ((this._CertificateLink != value))
				{
					this._CertificateLink = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_batchId", DbType="Int")]
		public System.Nullable<int> batchId
		{
			get
			{
				return this._batchId;
			}
			set
			{
				if ((this._batchId != value))
				{
					this._batchId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string companyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if ((this._companyCode != value))
				{
					this._companyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DELDocId", DbType="Int NOT NULL")]
		public int DELDocId
		{
			get
			{
				return this._DELDocId;
			}
			set
			{
				if ((this._DELDocId != value))
				{
					this._DELDocId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DELDocType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string DELDocType
		{
			get
			{
				return this._DELDocType;
			}
			set
			{
				if ((this._DELDocType != value))
				{
					this._DELDocType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bpName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string bpName
		{
			get
			{
				return this._bpName;
			}
			set
			{
				if ((this._bpName != value))
				{
					this._bpName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_certOrdered", DbType="Bit NOT NULL")]
		public bool certOrdered
		{
			get
			{
				return this._certOrdered;
			}
			set
			{
				if ((this._certOrdered != value))
				{
					this._certOrdered = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
